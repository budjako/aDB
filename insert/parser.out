Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Grammar

Rule 0     S' -> statement
Rule 1     statement -> INSERT INTO TABLE_NAME VALUES LPAREN valuelist RPAREN
Rule 2     statement -> INSERT INTO TABLE_NAME SET assignmentlist
Rule 3     valuelist -> expr
Rule 4     valuelist -> expr COMMA valuelist
Rule 5     assignmentlist -> assignment
Rule 6     assignmentlist -> assignment COMMA assignment
Rule 7     assignment -> COLUMN_NAME EQUALS expr
Rule 8     expr -> STRING_LIT
Rule 9     expr -> INT_LIT
Rule 10    expr -> DOUBLE_LIT
Rule 11    expr -> DATE_LIT

Terminals, with rules where they appear

COLUMN_NAME          : 7
COMMA                : 4 6
DATE_LIT             : 11
DOUBLE_LIT           : 10
EQUALS               : 7
INSERT               : 1 2
INTO                 : 1 2
INT_LIT              : 9
LPAREN               : 1
RPAREN               : 1
SET                  : 2
STRING_LIT           : 8
TABLE_NAME           : 1 2
VALUES               : 1
error                : 

Nonterminals, with rules where they appear

assignment           : 5 6 6
assignmentlist       : 2
expr                 : 3 4 7
statement            : 0
valuelist            : 1 4

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . INSERT INTO TABLE_NAME VALUES LPAREN valuelist RPAREN
    (2) statement -> . INSERT INTO TABLE_NAME SET assignmentlist

    INSERT          shift and go to state 2

    statement                      shift and go to state 1

state 1

    (0) S' -> statement .



state 2

    (1) statement -> INSERT . INTO TABLE_NAME VALUES LPAREN valuelist RPAREN
    (2) statement -> INSERT . INTO TABLE_NAME SET assignmentlist

    INTO            shift and go to state 3


state 3

    (1) statement -> INSERT INTO . TABLE_NAME VALUES LPAREN valuelist RPAREN
    (2) statement -> INSERT INTO . TABLE_NAME SET assignmentlist

    TABLE_NAME      shift and go to state 4


state 4

    (1) statement -> INSERT INTO TABLE_NAME . VALUES LPAREN valuelist RPAREN
    (2) statement -> INSERT INTO TABLE_NAME . SET assignmentlist

    VALUES          shift and go to state 5
    SET             shift and go to state 6


state 5

    (1) statement -> INSERT INTO TABLE_NAME VALUES . LPAREN valuelist RPAREN

    LPAREN          shift and go to state 7


state 6

    (2) statement -> INSERT INTO TABLE_NAME SET . assignmentlist
    (5) assignmentlist -> . assignment
    (6) assignmentlist -> . assignment COMMA assignment
    (7) assignment -> . COLUMN_NAME EQUALS expr

    COLUMN_NAME     shift and go to state 10

    assignmentlist                 shift and go to state 8
    assignment                     shift and go to state 9

state 7

    (1) statement -> INSERT INTO TABLE_NAME VALUES LPAREN . valuelist RPAREN
    (3) valuelist -> . expr
    (4) valuelist -> . expr COMMA valuelist
    (8) expr -> . STRING_LIT
    (9) expr -> . INT_LIT
    (10) expr -> . DOUBLE_LIT
    (11) expr -> . DATE_LIT

    STRING_LIT      shift and go to state 13
    INT_LIT         shift and go to state 14
    DOUBLE_LIT      shift and go to state 15
    DATE_LIT        shift and go to state 16

    valuelist                      shift and go to state 11
    expr                           shift and go to state 12

state 8

    (2) statement -> INSERT INTO TABLE_NAME SET assignmentlist .

    $end            reduce using rule 2 (statement -> INSERT INTO TABLE_NAME SET assignmentlist .)


state 9

    (5) assignmentlist -> assignment .
    (6) assignmentlist -> assignment . COMMA assignment

    $end            reduce using rule 5 (assignmentlist -> assignment .)
    COMMA           shift and go to state 17


state 10

    (7) assignment -> COLUMN_NAME . EQUALS expr

    EQUALS          shift and go to state 18


state 11

    (1) statement -> INSERT INTO TABLE_NAME VALUES LPAREN valuelist . RPAREN

    RPAREN          shift and go to state 19


state 12

    (3) valuelist -> expr .
    (4) valuelist -> expr . COMMA valuelist

    RPAREN          reduce using rule 3 (valuelist -> expr .)
    COMMA           shift and go to state 20


state 13

    (8) expr -> STRING_LIT .

    COMMA           reduce using rule 8 (expr -> STRING_LIT .)
    RPAREN          reduce using rule 8 (expr -> STRING_LIT .)
    $end            reduce using rule 8 (expr -> STRING_LIT .)


state 14

    (9) expr -> INT_LIT .

    COMMA           reduce using rule 9 (expr -> INT_LIT .)
    RPAREN          reduce using rule 9 (expr -> INT_LIT .)
    $end            reduce using rule 9 (expr -> INT_LIT .)


state 15

    (10) expr -> DOUBLE_LIT .

    COMMA           reduce using rule 10 (expr -> DOUBLE_LIT .)
    RPAREN          reduce using rule 10 (expr -> DOUBLE_LIT .)
    $end            reduce using rule 10 (expr -> DOUBLE_LIT .)


state 16

    (11) expr -> DATE_LIT .

    COMMA           reduce using rule 11 (expr -> DATE_LIT .)
    RPAREN          reduce using rule 11 (expr -> DATE_LIT .)
    $end            reduce using rule 11 (expr -> DATE_LIT .)


state 17

    (6) assignmentlist -> assignment COMMA . assignment
    (7) assignment -> . COLUMN_NAME EQUALS expr

    COLUMN_NAME     shift and go to state 10

    assignment                     shift and go to state 21

state 18

    (7) assignment -> COLUMN_NAME EQUALS . expr
    (8) expr -> . STRING_LIT
    (9) expr -> . INT_LIT
    (10) expr -> . DOUBLE_LIT
    (11) expr -> . DATE_LIT

    STRING_LIT      shift and go to state 13
    INT_LIT         shift and go to state 14
    DOUBLE_LIT      shift and go to state 15
    DATE_LIT        shift and go to state 16

    expr                           shift and go to state 22

state 19

    (1) statement -> INSERT INTO TABLE_NAME VALUES LPAREN valuelist RPAREN .

    $end            reduce using rule 1 (statement -> INSERT INTO TABLE_NAME VALUES LPAREN valuelist RPAREN .)


state 20

    (4) valuelist -> expr COMMA . valuelist
    (3) valuelist -> . expr
    (4) valuelist -> . expr COMMA valuelist
    (8) expr -> . STRING_LIT
    (9) expr -> . INT_LIT
    (10) expr -> . DOUBLE_LIT
    (11) expr -> . DATE_LIT

    STRING_LIT      shift and go to state 13
    INT_LIT         shift and go to state 14
    DOUBLE_LIT      shift and go to state 15
    DATE_LIT        shift and go to state 16

    expr                           shift and go to state 12
    valuelist                      shift and go to state 23

state 21

    (6) assignmentlist -> assignment COMMA assignment .

    $end            reduce using rule 6 (assignmentlist -> assignment COMMA assignment .)


state 22

    (7) assignment -> COLUMN_NAME EQUALS expr .

    COMMA           reduce using rule 7 (assignment -> COLUMN_NAME EQUALS expr .)
    $end            reduce using rule 7 (assignment -> COLUMN_NAME EQUALS expr .)


state 23

    (4) valuelist -> expr COMMA valuelist .

    RPAREN          reduce using rule 4 (valuelist -> expr COMMA valuelist .)

