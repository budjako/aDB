
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftADDSUBTRACTleftASTERISKDIVIDEDIVIDE_INTINSERT INTO VALUES SET SELECT DELETE INT_LIT DOUBLE_LIT STRING_LIT ADD SUBTRACT DIVIDE DIVIDE_INT MODULO EQUAL EQUAL_NULL GT GE LT LE NE NOT COLUMN_NAME TABLE_NAME ASTERISK COMMA SEMICOLON OPENPAR CLOSEPAR FROM WHERE LIKE STRCMP IS NULL BETWEEN ANDstatement : insert_statement\n            | select_statement\n            | delete_statementinsert_statement : INSERT into_kw TABLE_NAME VALUES OPENPAR value_list CLOSEPAR SEMICOLON\n            | INSERT into_kw TABLE_NAME OPENPAR column_name CLOSEPAR VALUES OPENPAR value_list CLOSEPAR SEMICOLON\n            | INSERT into_kw TABLE_NAME SET assignment_list SEMICOLONselect_statement : SELECT columns FROM TABLE_NAME SEMICOLON\n            | SELECT columns FROM TABLE_NAME WHERE condition SEMICOLONdelete_statement : DELETE FROM TABLE_NAME SEMICOLON\n            | DELETE FROM TABLE_NAME WHERE condition SEMICOLONinto_kw : INTO\n            | emptycolumns : ASTERISK\n            | column_namecolumn_name : COLUMN_NAME\n            | column_name COMMA COLUMN_NAMEassignment_list : COLUMN_NAME EQUAL literals\n            | assignment_list COMMA COLUMN_NAME EQUAL literalsvalue_list : literals\n            | value_list COMMA literalsliterals : STRING_LIT\n            | INT_LIT\n            | DOUBLE_LIT\n            | NULLcondition : string_cond\n            | num_cond\n            | NOT OPENPAR string_cond CLOSEPAR\n            | NOT OPENPAR num_cond CLOSEPARstring_cond : string_exp LIKE string_exp\n            | string_exp NOT LIKE string_exp\n            | string_exp EQUAL string_exp\n            | STRCMP OPENPAR string_exp COMMA string_exp CLOSEPARstring_exp : STRING_LITnum_cond : num_exp comparison_op num_exp\n            | num_exp BETWEEN num_exp AND num_exp\n            | num_exp NOT NULL\n            | num_exp IS NULLnum_exp : num_exp ADD num_factor\n            |  num_factor SUBTRACT num_exp\n            | num_factornum_factor : num_factor ASTERISK num_term\n            | num_factor DIVIDE num_term\n            | num_factor DIVIDE_INT num_term\n            | num_factor MODULO num_term\n            | num_termnum_term : OPENPAR num_exp CLOSEPAR\n            | num_valnum_val : INT_LIT\n            | DOUBLE_LIT\n            | COLUMN_NAMEcomparison_op : GE\n            | GT\n            | LE\n            | LT\n            | NE\n            | EQUAL\n            | EQUAL_NULLempty : '
    
_lr_action_items = {'ADD':([35,36,37,38,41,42,47,80,94,95,98,99,100,101,102,103,104,117,],[63,-49,-50,-45,-48,-40,-47,63,-38,63,63,-43,-42,-39,-44,-41,-46,63,]),'DIVIDE_INT':([36,37,38,41,42,47,94,99,100,102,103,104,],[-49,-50,-45,-48,75,-47,75,-43,-42,-44,-41,-46,]),'DIVIDE':([36,37,38,41,42,47,94,99,100,102,103,104,],[-49,-50,-45,-48,76,-47,76,-43,-42,-44,-41,-46,]),'EQUAL':([29,34,35,36,37,38,39,41,42,47,85,94,99,100,101,102,103,104,],[49,61,69,-49,-50,-45,-33,-48,-40,-47,106,-38,-43,-42,-39,-44,-41,-46,]),'WHERE':([19,20,],[25,27,]),'AND':([36,37,38,41,42,47,94,95,99,100,101,102,103,104,],[-49,-50,-45,-48,-40,-47,-38,113,-43,-42,-39,-44,-41,-46,]),'SET':([18,],[22,]),'SUBTRACT':([36,37,38,41,42,47,99,100,102,103,104,],[-49,-50,-45,-48,77,-47,-43,-42,-44,-41,-46,]),'GT':([35,36,37,38,41,42,47,94,99,100,101,102,103,104,],[71,-49,-50,-45,-48,-40,-47,-38,-43,-42,-39,-44,-41,-46,]),'CLOSEPAR':([8,21,32,36,37,38,39,41,42,47,52,53,54,55,56,57,80,89,90,91,92,94,96,97,98,99,100,101,102,103,104,108,112,116,117,118,120,],[-15,-16,58,-49,-50,-45,-33,-48,-40,-47,-21,86,-24,-22,-23,-19,104,110,111,-29,-31,-38,-36,-37,-34,-43,-42,-39,-44,-41,-46,-20,-30,119,-35,120,-32,]),'SELECT':([0,],[4,]),'BETWEEN':([35,36,37,38,41,42,47,94,99,100,101,102,103,104,],[64,-49,-50,-45,-48,-40,-47,-38,-43,-42,-39,-44,-41,-46,]),'COLUMN_NAME':([4,17,22,24,25,27,44,51,59,63,64,65,68,69,70,71,72,73,74,75,76,77,78,79,113,],[8,21,29,8,37,37,37,85,37,37,37,-54,-53,-56,-57,-52,37,-55,-51,37,37,37,37,37,37,]),'$end':([1,2,3,6,26,28,50,81,83,107,121,],[0,-1,-2,-3,-9,-7,-6,-10,-8,-4,-5,]),'SEMICOLON':([19,20,30,36,37,38,39,40,41,42,43,45,47,48,52,54,55,56,84,86,91,92,94,96,97,98,99,100,101,102,103,104,110,111,112,115,117,119,120,],[26,28,50,-49,-50,-45,-33,-26,-48,-40,-25,81,-47,83,-21,-24,-22,-23,-17,107,-29,-31,-38,-36,-37,-34,-43,-42,-39,-44,-41,-46,-28,-27,-30,-18,-35,121,-32,]),'NULL':([31,49,66,67,87,106,109,],[54,54,96,97,54,54,54,]),'MODULO':([36,37,38,41,42,47,94,99,100,102,103,104,],[-49,-50,-45,-48,78,-47,78,-43,-42,-44,-41,-46,]),'GE':([35,36,37,38,41,42,47,94,99,100,101,102,103,104,],[74,-49,-50,-45,-48,-40,-47,-38,-43,-42,-39,-44,-41,-46,]),'STRING_LIT':([25,27,31,49,59,60,61,82,87,93,106,109,114,],[39,39,52,52,39,39,39,39,52,39,52,52,39,]),'LIKE':([34,39,62,],[60,-33,93,]),'LT':([35,36,37,38,41,42,47,94,99,100,101,102,103,104,],[65,-49,-50,-45,-48,-40,-47,-38,-43,-42,-39,-44,-41,-46,]),'VALUES':([18,58,],[23,88,]),'IS':([35,36,37,38,41,42,47,94,99,100,101,102,103,104,],[67,-49,-50,-45,-48,-40,-47,-38,-43,-42,-39,-44,-41,-46,]),'FROM':([7,8,9,10,11,21,],[15,-15,16,-14,-13,-16,]),'COMMA':([8,10,21,30,32,39,52,53,54,55,56,57,84,105,108,115,116,],[-15,17,-16,51,17,-33,-21,87,-24,-22,-23,-19,-17,114,-20,-18,87,]),'OPENPAR':([18,23,25,27,33,44,46,59,63,64,65,68,69,70,71,72,73,74,75,76,77,78,79,88,113,],[24,31,44,44,59,44,82,44,44,44,-54,-53,-56,-57,-52,44,-55,-51,44,44,44,44,44,109,44,]),'INT_LIT':([25,27,31,44,49,59,63,64,65,68,69,70,71,72,73,74,75,76,77,78,79,87,106,109,113,],[41,41,55,41,55,41,41,41,-54,-53,-56,-57,-52,41,-55,-51,41,41,41,41,41,55,55,55,41,]),'DELETE':([0,],[7,]),'EQUAL_NULL':([35,36,37,38,41,42,47,94,99,100,101,102,103,104,],[70,-49,-50,-45,-48,-40,-47,-38,-43,-42,-39,-44,-41,-46,]),'TABLE_NAME':([5,12,13,14,15,16,],[-58,18,-11,-12,19,20,]),'LE':([35,36,37,38,41,42,47,94,99,100,101,102,103,104,],[68,-49,-50,-45,-48,-40,-47,-38,-43,-42,-39,-44,-41,-46,]),'DOUBLE_LIT':([25,27,31,44,49,59,63,64,65,68,69,70,71,72,73,74,75,76,77,78,79,87,106,109,113,],[36,36,56,36,56,36,36,36,-54,-53,-56,-57,-52,36,-55,-51,36,36,36,36,36,56,56,56,36,]),'INTO':([5,],[13,]),'NOT':([25,27,34,35,36,37,38,39,41,42,47,94,99,100,101,102,103,104,],[33,33,62,66,-49,-50,-45,-33,-48,-40,-47,-38,-43,-42,-39,-44,-41,-46,]),'STRCMP':([25,27,59,],[46,46,46,]),'NE':([35,36,37,38,41,42,47,94,99,100,101,102,103,104,],[73,-49,-50,-45,-48,-40,-47,-38,-43,-42,-39,-44,-41,-46,]),'INSERT':([0,],[5,]),'ASTERISK':([4,36,37,38,41,42,47,94,99,100,102,103,104,],[11,-49,-50,-45,-48,79,-47,79,-43,-42,-44,-41,-46,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'string_exp':([25,27,59,60,61,82,93,114,],[34,34,34,91,92,105,112,118,]),'value_list':([31,109,],[53,116,]),'statement':([0,],[1,]),'condition':([25,27,],[45,48,]),'num_exp':([25,27,44,59,64,72,77,113,],[35,35,80,35,95,98,101,117,]),'comparison_op':([35,],[72,]),'into_kw':([5,],[12,]),'assignment_list':([22,],[30,]),'insert_statement':([0,],[2,]),'select_statement':([0,],[3,]),'num_factor':([25,27,44,59,63,64,72,77,113,],[42,42,42,42,94,42,42,42,42,]),'num_cond':([25,27,59,],[40,40,89,]),'columns':([4,],[9,]),'string_cond':([25,27,59,],[43,43,90,]),'empty':([5,],[14,]),'num_term':([25,27,44,59,63,64,72,75,76,77,78,79,113,],[38,38,38,38,38,38,38,99,100,38,102,103,38,]),'column_name':([4,24,],[10,32,]),'literals':([31,49,87,106,109,],[57,84,108,115,57,]),'num_val':([25,27,44,59,63,64,72,75,76,77,78,79,113,],[47,47,47,47,47,47,47,47,47,47,47,47,47,]),'delete_statement':([0,],[6,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> insert_statement','statement',1,'p_statement','mysqlparse.py',25),
  ('statement -> select_statement','statement',1,'p_statement','mysqlparse.py',26),
  ('statement -> delete_statement','statement',1,'p_statement','mysqlparse.py',27),
  ('insert_statement -> INSERT into_kw TABLE_NAME VALUES OPENPAR value_list CLOSEPAR SEMICOLON','insert_statement',8,'p_insert_statement','mysqlparse.py',30),
  ('insert_statement -> INSERT into_kw TABLE_NAME OPENPAR column_name CLOSEPAR VALUES OPENPAR value_list CLOSEPAR SEMICOLON','insert_statement',11,'p_insert_statement','mysqlparse.py',31),
  ('insert_statement -> INSERT into_kw TABLE_NAME SET assignment_list SEMICOLON','insert_statement',6,'p_insert_statement','mysqlparse.py',32),
  ('select_statement -> SELECT columns FROM TABLE_NAME SEMICOLON','select_statement',5,'p_select_statement','mysqlparse.py',66),
  ('select_statement -> SELECT columns FROM TABLE_NAME WHERE condition SEMICOLON','select_statement',7,'p_select_statement','mysqlparse.py',67),
  ('delete_statement -> DELETE FROM TABLE_NAME SEMICOLON','delete_statement',4,'p_delete_statement','mysqlparse.py',109),
  ('delete_statement -> DELETE FROM TABLE_NAME WHERE condition SEMICOLON','delete_statement',6,'p_delete_statement','mysqlparse.py',110),
  ('into_kw -> INTO','into_kw',1,'p_into_kw','mysqlparse.py',141),
  ('into_kw -> empty','into_kw',1,'p_into_kw','mysqlparse.py',142),
  ('columns -> ASTERISK','columns',1,'p_columns','mysqlparse.py',157),
  ('columns -> column_name','columns',1,'p_columns','mysqlparse.py',158),
  ('column_name -> COLUMN_NAME','column_name',1,'p_column_name','mysqlparse.py',162),
  ('column_name -> column_name COMMA COLUMN_NAME','column_name',3,'p_column_name','mysqlparse.py',163),
  ('assignment_list -> COLUMN_NAME EQUAL literals','assignment_list',3,'p_assignment_list','mysqlparse.py',172),
  ('assignment_list -> assignment_list COMMA COLUMN_NAME EQUAL literals','assignment_list',5,'p_assignment_list','mysqlparse.py',173),
  ('value_list -> literals','value_list',1,'p_value_list','mysqlparse.py',183),
  ('value_list -> value_list COMMA literals','value_list',3,'p_value_list','mysqlparse.py',184),
  ('literals -> STRING_LIT','literals',1,'p_literals','mysqlparse.py',194),
  ('literals -> INT_LIT','literals',1,'p_literals','mysqlparse.py',195),
  ('literals -> DOUBLE_LIT','literals',1,'p_literals','mysqlparse.py',196),
  ('literals -> NULL','literals',1,'p_literals','mysqlparse.py',197),
  ('condition -> string_cond','condition',1,'p_condition','mysqlparse.py',201),
  ('condition -> num_cond','condition',1,'p_condition','mysqlparse.py',202),
  ('condition -> NOT OPENPAR string_cond CLOSEPAR','condition',4,'p_condition','mysqlparse.py',203),
  ('condition -> NOT OPENPAR num_cond CLOSEPAR','condition',4,'p_condition','mysqlparse.py',204),
  ('string_cond -> string_exp LIKE string_exp','string_cond',3,'p_string_cond','mysqlparse.py',212),
  ('string_cond -> string_exp NOT LIKE string_exp','string_cond',4,'p_string_cond','mysqlparse.py',213),
  ('string_cond -> string_exp EQUAL string_exp','string_cond',3,'p_string_cond','mysqlparse.py',214),
  ('string_cond -> STRCMP OPENPAR string_exp COMMA string_exp CLOSEPAR','string_cond',6,'p_string_cond','mysqlparse.py',215),
  ('string_exp -> STRING_LIT','string_exp',1,'p_string_exp','mysqlparse.py',224),
  ('num_cond -> num_exp comparison_op num_exp','num_cond',3,'p_num_cond','mysqlparse.py',230),
  ('num_cond -> num_exp BETWEEN num_exp AND num_exp','num_cond',5,'p_num_cond','mysqlparse.py',231),
  ('num_cond -> num_exp NOT NULL','num_cond',3,'p_num_cond','mysqlparse.py',232),
  ('num_cond -> num_exp IS NULL','num_cond',3,'p_num_cond','mysqlparse.py',233),
  ('num_exp -> num_exp ADD num_factor','num_exp',3,'p_num_exp','mysqlparse.py',288),
  ('num_exp -> num_factor SUBTRACT num_exp','num_exp',3,'p_num_exp','mysqlparse.py',289),
  ('num_exp -> num_factor','num_exp',1,'p_num_exp','mysqlparse.py',290),
  ('num_factor -> num_factor ASTERISK num_term','num_factor',3,'p_num_factor','mysqlparse.py',306),
  ('num_factor -> num_factor DIVIDE num_term','num_factor',3,'p_num_factor','mysqlparse.py',307),
  ('num_factor -> num_factor DIVIDE_INT num_term','num_factor',3,'p_num_factor','mysqlparse.py',308),
  ('num_factor -> num_factor MODULO num_term','num_factor',3,'p_num_factor','mysqlparse.py',309),
  ('num_factor -> num_term','num_factor',1,'p_num_factor','mysqlparse.py',310),
  ('num_term -> OPENPAR num_exp CLOSEPAR','num_term',3,'p_num_term','mysqlparse.py',327),
  ('num_term -> num_val','num_term',1,'p_num_term','mysqlparse.py',328),
  ('num_val -> INT_LIT','num_val',1,'p_num_val','mysqlparse.py',338),
  ('num_val -> DOUBLE_LIT','num_val',1,'p_num_val','mysqlparse.py',339),
  ('num_val -> COLUMN_NAME','num_val',1,'p_num_val','mysqlparse.py',340),
  ('comparison_op -> GE','comparison_op',1,'p_comparison_op','mysqlparse.py',349),
  ('comparison_op -> GT','comparison_op',1,'p_comparison_op','mysqlparse.py',350),
  ('comparison_op -> LE','comparison_op',1,'p_comparison_op','mysqlparse.py',351),
  ('comparison_op -> LT','comparison_op',1,'p_comparison_op','mysqlparse.py',352),
  ('comparison_op -> NE','comparison_op',1,'p_comparison_op','mysqlparse.py',353),
  ('comparison_op -> EQUAL','comparison_op',1,'p_comparison_op','mysqlparse.py',354),
  ('comparison_op -> EQUAL_NULL','comparison_op',1,'p_comparison_op','mysqlparse.py',355),
  ('empty -> <empty>','empty',0,'p_empty','mysqlparse.py',360),
]
