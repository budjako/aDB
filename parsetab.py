
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftADDSUBTRACTleftASTERISKDIVIDEDIVIDE_INTINSERT INTO VALUES SET SELECT DELETE INT_LIT DOUBLE_LIT STRING_LIT ADD SUBTRACT DIVIDE DIVIDE_INT MODULO EQUAL EQUAL_NULL GT GE LT LE NE NOT COLUMN_NAME TABLE_NAME ASTERISK COMMA SEMICOLON OPENPAR CLOSEPAR FROM WHERE LIKE STRCMP IS NULL BETWEEN ANDstatement : insert_statement\n            | select_statement\n            | delete_statementinsert_statement : INSERT into_kw TABLE_NAME VALUES OPENPAR value_list CLOSEPAR SEMICOLON\n            | INSERT into_kw TABLE_NAME OPENPAR column_name CLOSEPAR VALUES OPENPAR value_list CLOSEPAR SEMICOLON\n            | INSERT into_kw TABLE_NAME SET assignment_list SEMICOLONselect_statement : SELECT columns FROM TABLE_NAME SEMICOLON\n            | SELECT columns FROM TABLE_NAME WHERE condition SEMICOLONdelete_statement : DELETE FROM TABLE_NAME SEMICOLON\n            | DELETE FROM TABLE_NAME WHERE condition SEMICOLONinto_kw : INTO\n            | emptycolumns : ASTERISK\n            | column_namecolumn_name : COLUMN_NAME\n            | column_name COMMA COLUMN_NAMEassignment_list : COLUMN_NAME EQUAL literals\n            | assignment_list COMMA COLUMN_NAME EQUAL literalsvalue_list : literals\n            | value_list COMMA literalsliterals : STRING_LIT\n            | INT_LIT\n            | DOUBLE_LIT\n            | NULLcondition : col_cond\n            | string_cond\n            | num_cond\n            | NOT OPENPAR string_cond CLOSEPAR\n            | NOT OPENPAR num_cond CLOSEPARcol_cond : column_name comparison_op string_exp\n            | column_name comparison_op num_exp\n            | column_name LIKE string_exp\n            | column_name NOT LIKE string_expstring_cond : string_exp LIKE string_exp\n            | string_exp NOT LIKE string_exp\n            | string_exp EQUAL string_exp\n            | string_exp comparison_op string_exp\n            | STRCMP OPENPAR string_exp COMMA string_exp CLOSEPARstring_exp : STRING_LITnum_cond : num_exp comparison_op num_exp\n            | num_exp BETWEEN num_exp AND num_exp\n            | num_exp NOT NULL\n            | num_exp IS NULLnum_exp : num_exp ADD num_factor\n            |  num_factor SUBTRACT num_exp\n            | num_factornum_factor : num_factor ASTERISK num_term\n            | num_factor DIVIDE num_term\n            | num_factor DIVIDE_INT num_term\n            | num_factor MODULO num_term\n            | num_termnum_term : OPENPAR num_exp CLOSEPAR\n            | num_valnum_val : INT_LIT\n            | DOUBLE_LIT\n            | COLUMN_NAMEcomparison_op : GE\n            | GT\n            | LE\n            | LT\n            | NE\n            | EQUAL\n            | EQUAL_NULLempty : '
    
_lr_action_items = {'INSERT':([0,],[1,]),'CLOSEPAR':([14,23,30,33,35,36,41,43,48,50,51,52,53,54,55,82,83,96,97,98,99,100,101,102,103,105,106,107,108,110,111,112,119,123,129,130,131,133,],[-15,-16,59,-39,-51,-46,-53,-55,-54,90,-21,-22,-19,-23,-24,-56,110,-48,-47,-45,-50,-49,-44,-43,-40,-42,-37,-34,-36,-52,124,125,-20,-35,132,-41,133,-38,]),'VALUES':([16,59,],[20,94,]),'GE':([23,33,35,36,37,38,41,42,43,46,48,82,96,97,98,99,100,101,110,],[-16,-39,-51,-46,74,74,-53,-15,-55,74,-54,-56,-48,-47,-45,-50,-49,-44,-52,]),'SUBTRACT':([35,36,41,42,43,48,82,96,97,99,100,110,],[-51,63,-53,-56,-55,-54,-56,-48,-47,-50,-49,-52,]),'STRCMP':([26,32,84,],[45,45,45,]),'MODULO':([35,36,41,42,43,48,82,96,97,99,100,101,110,],[-51,64,-53,-56,-55,-54,-56,-48,-47,-50,-49,64,-52,]),'IS':([35,36,37,41,42,43,48,82,96,97,98,99,100,101,110,],[-51,-46,70,-53,-56,-55,-54,-56,-48,-47,-45,-50,-49,-44,-52,]),'EQUAL_NULL':([23,33,35,36,37,38,41,42,43,46,48,82,96,97,98,99,100,101,110,],[-16,-39,-51,-46,71,71,-53,-15,-55,71,-54,-56,-48,-47,-45,-50,-49,-44,-52,]),'LE':([23,33,35,36,37,38,41,42,43,46,48,82,96,97,98,99,100,101,110,],[-16,-39,-51,-46,72,72,-53,-15,-55,72,-54,-56,-48,-47,-45,-50,-49,-44,-52,]),'ADD':([35,36,37,41,42,43,48,82,83,96,97,98,99,100,101,103,104,110,114,130,],[-51,-46,67,-53,-56,-55,-54,-56,67,-48,-47,-45,-50,-49,-44,67,67,-52,67,67,]),'STRING_LIT':([26,27,32,58,66,68,69,71,72,74,75,78,79,80,84,86,87,88,91,109,117,120,121,126,],[33,51,33,51,-60,-62,-58,-63,-59,-57,-61,33,33,33,33,33,33,33,51,33,33,51,51,33,]),'SET':([16,],[21,]),'SEMICOLON':([19,24,28,33,34,35,36,41,43,44,47,48,49,51,52,54,55,60,82,90,93,96,97,98,99,100,101,102,103,105,106,107,108,110,114,115,116,123,124,125,127,128,130,132,133,],[25,31,56,-39,-26,-51,-46,-53,-55,85,-25,-54,-27,-21,-22,-23,-24,95,-56,118,-17,-48,-47,-45,-50,-49,-44,-43,-40,-42,-37,-34,-36,-52,-31,-30,-32,-35,-28,-29,-33,-18,-41,134,-38,]),'COMMA':([12,14,23,28,30,33,42,46,50,51,52,53,54,55,93,113,119,128,129,],[17,-15,-16,57,17,-39,-15,17,91,-21,-22,-19,-23,-24,-17,126,-20,-18,91,]),'LIKE':([23,33,38,42,46,81,89,],[-16,-39,79,-15,88,109,117,]),'AND':([35,36,41,43,48,82,96,97,98,99,100,101,104,110,],[-51,-46,-53,-55,-54,-56,-48,-47,-45,-50,-49,-44,122,-52,]),'WHERE':([19,24,],[26,32,]),'OPENPAR':([16,20,26,32,39,40,45,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,84,87,94,122,],[22,27,39,39,39,84,86,39,39,39,39,39,-60,39,-62,-58,-63,-59,39,-57,-61,39,39,39,121,39,]),'NOT':([23,26,32,33,35,36,37,38,41,42,43,46,48,82,96,97,98,99,100,101,110,],[-16,40,40,-39,-51,-46,77,81,-53,-15,-55,89,-54,-56,-48,-47,-45,-50,-49,-44,-52,]),'LT':([23,33,35,36,37,38,41,42,43,46,48,82,96,97,98,99,100,101,110,],[-16,-39,-51,-46,66,66,-53,-15,-55,66,-54,-56,-48,-47,-45,-50,-49,-44,-52,]),'COLUMN_NAME':([2,17,21,22,26,32,39,57,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,84,87,122,],[14,23,29,14,42,42,82,92,82,82,82,82,82,-60,82,-62,-58,-63,-59,82,-57,-61,82,82,82,82,]),'INTO':([1,],[10,]),'DIVIDE':([35,36,41,42,43,48,82,96,97,99,100,101,110,],[-51,61,-53,-56,-55,-54,-56,-48,-47,-50,-49,61,-52,]),'ASTERISK':([2,35,36,41,42,43,48,82,96,97,99,100,101,110,],[11,-51,62,-53,-56,-55,-54,-56,-48,-47,-50,-49,62,-52,]),'SELECT':([0,],[2,]),'GT':([23,33,35,36,37,38,41,42,43,46,48,82,96,97,98,99,100,101,110,],[-16,-39,-51,-46,69,69,-53,-15,-55,69,-54,-56,-48,-47,-45,-50,-49,-44,-52,]),'$end':([4,5,6,7,25,31,56,85,95,118,134,],[0,-2,-3,-1,-9,-7,-6,-10,-8,-4,-5,]),'DIVIDE_INT':([35,36,41,42,43,48,82,96,97,99,100,101,110,],[-51,65,-53,-56,-55,-54,-56,-48,-47,-50,-49,65,-52,]),'TABLE_NAME':([1,8,9,10,15,18,],[-64,-12,16,-11,19,24,]),'FROM':([3,11,12,13,14,23,],[15,-13,-14,18,-15,-16,]),'NE':([23,33,35,36,37,38,41,42,43,46,48,82,96,97,98,99,100,101,110,],[-16,-39,-51,-46,75,75,-53,-15,-55,75,-54,-56,-48,-47,-45,-50,-49,-44,-52,]),'BETWEEN':([35,36,37,41,42,43,48,82,96,97,98,99,100,101,110,],[-51,-46,76,-53,-56,-55,-54,-56,-48,-47,-45,-50,-49,-44,-52,]),'INT_LIT':([26,27,32,39,58,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,84,87,91,120,121,122,],[48,52,48,48,52,48,48,48,48,48,-60,48,-62,-58,-63,-59,48,-57,-61,48,48,48,52,52,52,48,]),'DOUBLE_LIT':([26,27,32,39,58,61,62,63,64,65,66,67,68,69,71,72,73,74,75,76,84,87,91,120,121,122,],[43,54,43,43,54,43,43,43,43,43,-60,43,-62,-58,-63,-59,43,-57,-61,43,43,43,54,54,54,43,]),'EQUAL':([23,29,33,35,36,37,38,41,42,43,46,48,82,92,96,97,98,99,100,101,110,],[-16,58,-39,-51,-46,68,80,-53,-15,-55,68,-54,-56,120,-48,-47,-45,-50,-49,-44,-52,]),'DELETE':([0,],[3,]),'NULL':([27,58,70,77,91,120,121,],[55,55,102,105,55,55,55,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'value_list':([27,121,],[50,129,]),'num_factor':([26,32,39,63,67,73,76,84,87,122,],[36,36,36,36,101,36,36,36,36,36,]),'empty':([1,],[8,]),'columns':([2,],[13,]),'into_kw':([1,],[9,]),'num_cond':([26,32,84,],[49,49,112,]),'num_exp':([26,32,39,63,73,76,84,87,122,],[37,37,83,98,103,104,37,114,130,]),'string_cond':([26,32,84,],[34,34,111,]),'assignment_list':([21,],[28,]),'literals':([27,58,91,120,121,],[53,93,119,128,53,]),'statement':([0,],[4,]),'num_term':([26,32,39,61,62,63,64,65,67,73,76,84,87,122,],[35,35,35,96,97,35,99,100,35,35,35,35,35,35,]),'column_name':([2,22,26,32,],[12,30,46,46,]),'comparison_op':([37,38,46,],[73,78,87,]),'condition':([26,32,],[44,60,]),'col_cond':([26,32,],[47,47,]),'delete_statement':([0,],[6,]),'insert_statement':([0,],[7,]),'string_exp':([26,32,78,79,80,84,86,87,88,109,117,126,],[38,38,106,107,108,38,113,115,116,123,127,131,]),'select_statement':([0,],[5,]),'num_val':([26,32,39,61,62,63,64,65,67,73,76,84,87,122,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> insert_statement','statement',1,'p_statement','mysqlparse.py',25),
  ('statement -> select_statement','statement',1,'p_statement','mysqlparse.py',26),
  ('statement -> delete_statement','statement',1,'p_statement','mysqlparse.py',27),
  ('insert_statement -> INSERT into_kw TABLE_NAME VALUES OPENPAR value_list CLOSEPAR SEMICOLON','insert_statement',8,'p_insert_statement','mysqlparse.py',30),
  ('insert_statement -> INSERT into_kw TABLE_NAME OPENPAR column_name CLOSEPAR VALUES OPENPAR value_list CLOSEPAR SEMICOLON','insert_statement',11,'p_insert_statement','mysqlparse.py',31),
  ('insert_statement -> INSERT into_kw TABLE_NAME SET assignment_list SEMICOLON','insert_statement',6,'p_insert_statement','mysqlparse.py',32),
  ('select_statement -> SELECT columns FROM TABLE_NAME SEMICOLON','select_statement',5,'p_select_statement','mysqlparse.py',66),
  ('select_statement -> SELECT columns FROM TABLE_NAME WHERE condition SEMICOLON','select_statement',7,'p_select_statement','mysqlparse.py',67),
  ('delete_statement -> DELETE FROM TABLE_NAME SEMICOLON','delete_statement',4,'p_delete_statement','mysqlparse.py',109),
  ('delete_statement -> DELETE FROM TABLE_NAME WHERE condition SEMICOLON','delete_statement',6,'p_delete_statement','mysqlparse.py',110),
  ('into_kw -> INTO','into_kw',1,'p_into_kw','mysqlparse.py',141),
  ('into_kw -> empty','into_kw',1,'p_into_kw','mysqlparse.py',142),
  ('columns -> ASTERISK','columns',1,'p_columns','mysqlparse.py',157),
  ('columns -> column_name','columns',1,'p_columns','mysqlparse.py',158),
  ('column_name -> COLUMN_NAME','column_name',1,'p_column_name','mysqlparse.py',162),
  ('column_name -> column_name COMMA COLUMN_NAME','column_name',3,'p_column_name','mysqlparse.py',163),
  ('assignment_list -> COLUMN_NAME EQUAL literals','assignment_list',3,'p_assignment_list','mysqlparse.py',172),
  ('assignment_list -> assignment_list COMMA COLUMN_NAME EQUAL literals','assignment_list',5,'p_assignment_list','mysqlparse.py',173),
  ('value_list -> literals','value_list',1,'p_value_list','mysqlparse.py',183),
  ('value_list -> value_list COMMA literals','value_list',3,'p_value_list','mysqlparse.py',184),
  ('literals -> STRING_LIT','literals',1,'p_literals','mysqlparse.py',194),
  ('literals -> INT_LIT','literals',1,'p_literals','mysqlparse.py',195),
  ('literals -> DOUBLE_LIT','literals',1,'p_literals','mysqlparse.py',196),
  ('literals -> NULL','literals',1,'p_literals','mysqlparse.py',197),
  ('condition -> col_cond','condition',1,'p_condition','mysqlparse.py',201),
  ('condition -> string_cond','condition',1,'p_condition','mysqlparse.py',202),
  ('condition -> num_cond','condition',1,'p_condition','mysqlparse.py',203),
  ('condition -> NOT OPENPAR string_cond CLOSEPAR','condition',4,'p_condition','mysqlparse.py',204),
  ('condition -> NOT OPENPAR num_cond CLOSEPAR','condition',4,'p_condition','mysqlparse.py',205),
  ('col_cond -> column_name comparison_op string_exp','col_cond',3,'p_col_cond','mysqlparse.py',213),
  ('col_cond -> column_name comparison_op num_exp','col_cond',3,'p_col_cond','mysqlparse.py',214),
  ('col_cond -> column_name LIKE string_exp','col_cond',3,'p_col_cond','mysqlparse.py',215),
  ('col_cond -> column_name NOT LIKE string_exp','col_cond',4,'p_col_cond','mysqlparse.py',216),
  ('string_cond -> string_exp LIKE string_exp','string_cond',3,'p_string_cond','mysqlparse.py',226),
  ('string_cond -> string_exp NOT LIKE string_exp','string_cond',4,'p_string_cond','mysqlparse.py',227),
  ('string_cond -> string_exp EQUAL string_exp','string_cond',3,'p_string_cond','mysqlparse.py',228),
  ('string_cond -> string_exp comparison_op string_exp','string_cond',3,'p_string_cond','mysqlparse.py',229),
  ('string_cond -> STRCMP OPENPAR string_exp COMMA string_exp CLOSEPAR','string_cond',6,'p_string_cond','mysqlparse.py',230),
  ('string_exp -> STRING_LIT','string_exp',1,'p_string_exp','mysqlparse.py',239),
  ('num_cond -> num_exp comparison_op num_exp','num_cond',3,'p_num_cond','mysqlparse.py',245),
  ('num_cond -> num_exp BETWEEN num_exp AND num_exp','num_cond',5,'p_num_cond','mysqlparse.py',246),
  ('num_cond -> num_exp NOT NULL','num_cond',3,'p_num_cond','mysqlparse.py',247),
  ('num_cond -> num_exp IS NULL','num_cond',3,'p_num_cond','mysqlparse.py',248),
  ('num_exp -> num_exp ADD num_factor','num_exp',3,'p_num_exp','mysqlparse.py',303),
  ('num_exp -> num_factor SUBTRACT num_exp','num_exp',3,'p_num_exp','mysqlparse.py',304),
  ('num_exp -> num_factor','num_exp',1,'p_num_exp','mysqlparse.py',305),
  ('num_factor -> num_factor ASTERISK num_term','num_factor',3,'p_num_factor','mysqlparse.py',321),
  ('num_factor -> num_factor DIVIDE num_term','num_factor',3,'p_num_factor','mysqlparse.py',322),
  ('num_factor -> num_factor DIVIDE_INT num_term','num_factor',3,'p_num_factor','mysqlparse.py',323),
  ('num_factor -> num_factor MODULO num_term','num_factor',3,'p_num_factor','mysqlparse.py',324),
  ('num_factor -> num_term','num_factor',1,'p_num_factor','mysqlparse.py',325),
  ('num_term -> OPENPAR num_exp CLOSEPAR','num_term',3,'p_num_term','mysqlparse.py',342),
  ('num_term -> num_val','num_term',1,'p_num_term','mysqlparse.py',343),
  ('num_val -> INT_LIT','num_val',1,'p_num_val','mysqlparse.py',353),
  ('num_val -> DOUBLE_LIT','num_val',1,'p_num_val','mysqlparse.py',354),
  ('num_val -> COLUMN_NAME','num_val',1,'p_num_val','mysqlparse.py',355),
  ('comparison_op -> GE','comparison_op',1,'p_comparison_op','mysqlparse.py',364),
  ('comparison_op -> GT','comparison_op',1,'p_comparison_op','mysqlparse.py',365),
  ('comparison_op -> LE','comparison_op',1,'p_comparison_op','mysqlparse.py',366),
  ('comparison_op -> LT','comparison_op',1,'p_comparison_op','mysqlparse.py',367),
  ('comparison_op -> NE','comparison_op',1,'p_comparison_op','mysqlparse.py',368),
  ('comparison_op -> EQUAL','comparison_op',1,'p_comparison_op','mysqlparse.py',369),
  ('comparison_op -> EQUAL_NULL','comparison_op',1,'p_comparison_op','mysqlparse.py',370),
  ('empty -> <empty>','empty',0,'p_empty','mysqlparse.py',375),
]
