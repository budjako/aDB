
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftADDSUBTRACTleftASTERISKDIVIDEDIVIDE_INTINSERT INTO VALUES SET SELECT DELETE INT_LIT DOUBLE_LIT STRING_LIT ADD SUBTRACT DIVIDE DIVIDE_INT MODULO EQUAL EQUAL_NULL GT GE LT LE NE NOT COLUMN_NAME TABLE_NAME ASTERISK COMMA SEMICOLON OPENPAR CLOSEPAR FROM WHERE LIKE STRCMP IS NULL BETWEEN ANDstatement : insert_statement\n            | select_statement\n            | delete_statementinsert_statement : INSERT into_kw TABLE_NAME VALUES OPENPAR value_list CLOSEPAR SEMICOLON\n            | INSERT into_kw TABLE_NAME OPENPAR column_name CLOSEPAR VALUES OPENPAR value_list CLOSEPAR SEMICOLON\n            | INSERT into_kw TABLE_NAME SET assignment_list SEMICOLONselect_statement : SELECT columns FROM TABLE_NAME SEMICOLON\n            | SELECT columns FROM TABLE_NAME WHERE condition SEMICOLONdelete_statement : DELETE FROM TABLE_NAME SEMICOLON\n            | DELETE FROM TABLE_NAME WHERE condition SEMICOLONinto_kw : INTO\n            | emptycolumns : ASTERISK\n            | column_namecolumn_name : COLUMN_NAME\n            | column_name COMMA COLUMN_NAMEassignment_list : COLUMN_NAME EQUAL literals\n            | assignment_list COMMA COLUMN_NAME EQUAL literalsvalue_list : literals\n            | value_list COMMA literalsliterals : STRING_LIT\n            | INT_LIT\n            | DOUBLE_LIT\n            | NULLcondition : string_cond\n            | num_cond\n            | NOT OPENPAR string_cond CLOSEPAR\n            | NOT OPENPAR num_cond CLOSEPARstring_cond : string_exp LIKE string_exp\n            | string_exp NOT LIKE string_exp\n            | string_exp comparison_op string_exp\n            | STRCMP OPENPAR string_exp COMMA string_exp CLOSEPARstring_exp : STRING_LITnum_cond : num_exp comparison_op num_exp\n            | num_exp BETWEEN num_exp AND num_exp\n            | num_exp NOT NULL\n            | num_exp IS NULLnum_exp : num_exp ADD num_factor\n            |  num_factor SUBTRACT num_exp\n            | num_factornum_factor : num_factor ASTERISK num_term\n            | num_factor DIVIDE num_term\n            | num_factor DIVIDE_INT num_term\n            | num_factor MODULO num_term\n            | num_termnum_term : OPENPAR num_exp CLOSEPAR\n            | num_valnum_val : INT_LIT\n            | DOUBLE_LIT\n            | COLUMN_NAMEcomparison_op : GE\n            | GT\n            | LE\n            | LT\n            | NE\n            | EQUAL\n            | EQUAL_NULLempty : '
    
_lr_action_items = {'INSERT':([0,],[1,]),'TABLE_NAME':([1,8,9,10,15,18,],[-58,-12,16,-11,19,24,]),'SELECT':([0,],[2,]),'SUBTRACT':([35,36,38,44,45,46,89,95,96,97,99,],[-45,-50,74,-49,-48,-47,-46,-42,-44,-43,-41,]),'COMMA':([11,12,23,27,30,39,51,52,53,54,55,56,84,100,107,115,116,],[-15,17,-16,48,17,-33,-21,-22,85,-24,-23,-19,-17,113,-20,-18,85,]),'GE':([35,36,37,38,39,43,44,45,46,89,95,96,97,98,99,104,],[-45,-50,67,-40,-33,67,-49,-48,-47,-46,-42,-44,-43,-39,-41,-38,]),'$end':([3,4,6,7,26,32,49,77,88,108,121,],[0,-2,-3,-1,-9,-7,-6,-10,-8,-4,-5,]),'IS':([35,36,38,43,44,45,46,89,95,96,97,98,99,104,],[-45,-50,-40,82,-49,-48,-47,-46,-42,-44,-43,-39,-41,-38,]),'ASTERISK':([2,35,36,38,44,45,46,89,95,96,97,99,104,],[14,-45,-50,75,-49,-48,-47,-46,-42,-44,-43,-41,75,]),'VALUES':([16,57,],[21,87,]),'DELETE':([0,],[5,]),'LT':([35,36,37,38,39,43,44,45,46,89,95,96,97,98,99,104,],[-45,-50,63,-40,-33,63,-49,-48,-47,-46,-42,-44,-43,-39,-41,-38,]),'DIVIDE_INT':([35,36,38,44,45,46,89,95,96,97,99,104,],[-45,-50,73,-49,-48,-47,-46,-42,-44,-43,-41,73,]),'AND':([35,36,38,44,45,46,89,95,96,97,98,99,102,104,],[-45,-50,-40,-49,-48,-47,-46,-42,-44,-43,-39,-41,114,-38,]),'WHERE':([19,24,],[25,31,]),'FROM':([5,11,12,13,14,23,],[15,-15,-14,18,-13,-16,]),'STRCMP':([25,31,60,],[40,40,40,]),'MODULO':([35,36,38,44,45,46,89,95,96,97,99,104,],[-45,-50,72,-49,-48,-47,-46,-42,-44,-43,-41,72,]),'LE':([35,36,37,38,39,43,44,45,46,89,95,96,97,98,99,104,],[-45,-50,62,-40,-33,62,-49,-48,-47,-46,-42,-44,-43,-39,-41,-38,]),'COLUMN_NAME':([2,17,20,22,25,31,33,48,60,61,62,63,65,66,67,68,71,72,73,74,75,78,79,81,114,],[11,23,28,11,36,36,36,83,36,-52,-53,-54,-56,-55,-51,-57,36,36,36,36,36,36,36,36,36,]),'STRING_LIT':([25,29,31,50,60,61,62,63,64,65,66,67,68,70,76,85,93,106,109,113,],[39,51,39,51,39,-52,-53,-54,39,-56,-55,-51,-57,39,39,51,39,51,51,39,]),'NE':([35,36,37,38,39,43,44,45,46,89,95,96,97,98,99,104,],[-45,-50,66,-40,-33,66,-49,-48,-47,-46,-42,-44,-43,-39,-41,-38,]),'BETWEEN':([35,36,38,43,44,45,46,89,95,96,97,98,99,104,],[-45,-50,-40,79,-49,-48,-47,-46,-42,-44,-43,-39,-41,-38,]),'ADD':([35,36,38,43,44,45,46,59,89,95,96,97,98,99,101,102,104,118,],[-45,-50,-40,81,-49,-48,-47,81,-46,-42,-44,-43,-39,-41,81,81,-38,81,]),'CLOSEPAR':([11,23,30,35,36,38,39,44,45,46,51,52,53,54,55,56,59,89,90,91,92,94,95,96,97,98,99,101,103,104,105,107,112,116,117,118,120,],[-15,-16,57,-45,-50,-40,-33,-49,-48,-47,-21,-22,86,-24,-23,-19,89,-46,110,111,-31,-29,-42,-44,-43,-39,-41,-34,-36,-38,-37,-20,-30,119,120,-35,-32,]),'LIKE':([37,39,69,],[70,-33,93,]),'NULL':([29,50,80,82,85,106,109,],[54,54,103,105,54,54,54,]),'GT':([35,36,37,38,39,43,44,45,46,89,95,96,97,98,99,104,],[-45,-50,61,-40,-33,61,-49,-48,-47,-46,-42,-44,-43,-39,-41,-38,]),'DOUBLE_LIT':([25,29,31,33,50,60,61,62,63,65,66,67,68,71,72,73,74,75,78,79,81,85,106,109,114,],[44,55,44,44,55,44,-52,-53,-54,-56,-55,-51,-57,44,44,44,44,44,44,44,44,55,55,55,44,]),'EQUAL':([28,35,36,37,38,39,43,44,45,46,83,89,95,96,97,98,99,104,],[50,-45,-50,65,-40,-33,65,-49,-48,-47,106,-46,-42,-44,-43,-39,-41,-38,]),'INT_LIT':([25,29,31,33,50,60,61,62,63,65,66,67,68,71,72,73,74,75,78,79,81,85,106,109,114,],[45,52,45,45,52,45,-52,-53,-54,-56,-55,-51,-57,45,45,45,45,45,45,45,45,52,52,52,45,]),'NOT':([25,31,35,36,37,38,39,43,44,45,46,89,95,96,97,98,99,104,],[34,34,-45,-50,69,-40,-33,80,-49,-48,-47,-46,-42,-44,-43,-39,-41,-38,]),'EQUAL_NULL':([35,36,37,38,39,43,44,45,46,89,95,96,97,98,99,104,],[-45,-50,68,-40,-33,68,-49,-48,-47,-46,-42,-44,-43,-39,-41,-38,]),'DIVIDE':([35,36,38,44,45,46,89,95,96,97,99,104,],[-45,-50,71,-49,-48,-47,-46,-42,-44,-43,-41,71,]),'SEMICOLON':([19,24,27,35,36,38,39,41,42,44,45,46,47,51,52,54,55,58,84,86,89,92,94,95,96,97,98,99,101,103,104,105,110,111,112,115,118,119,120,],[26,32,49,-45,-50,-40,-33,-25,77,-49,-48,-47,-26,-21,-22,-24,-23,88,-17,108,-46,-31,-29,-42,-44,-43,-39,-41,-34,-36,-38,-37,-28,-27,-30,-18,-35,121,-32,]),'INTO':([1,],[10,]),'SET':([16,],[20,]),'OPENPAR':([16,21,25,31,33,34,40,60,61,62,63,65,66,67,68,71,72,73,74,75,78,79,81,87,114,],[22,29,33,33,33,60,76,33,-52,-53,-54,-56,-55,-51,-57,33,33,33,33,33,33,33,33,109,33,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'assignment_list':([20,],[27,]),'empty':([1,],[8,]),'into_kw':([1,],[9,]),'column_name':([2,22,],[12,30,]),'statement':([0,],[3,]),'columns':([2,],[13,]),'select_statement':([0,],[4,]),'num_exp':([25,31,33,60,74,78,79,114,],[43,43,59,43,98,101,102,118,]),'delete_statement':([0,],[6,]),'num_term':([25,31,33,60,71,72,73,74,75,78,79,81,114,],[35,35,35,35,95,96,97,35,99,35,35,35,35,]),'comparison_op':([37,43,],[64,78,]),'literals':([29,50,85,106,109,],[56,84,107,115,56,]),'num_val':([25,31,33,60,71,72,73,74,75,78,79,81,114,],[46,46,46,46,46,46,46,46,46,46,46,46,46,]),'insert_statement':([0,],[7,]),'num_factor':([25,31,33,60,74,78,79,81,114,],[38,38,38,38,38,38,38,104,38,]),'string_exp':([25,31,60,64,70,76,93,113,],[37,37,37,92,94,100,112,117,]),'num_cond':([25,31,60,],[47,47,90,]),'value_list':([29,109,],[53,116,]),'condition':([25,31,],[42,58,]),'string_cond':([25,31,60,],[41,41,91,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> insert_statement','statement',1,'p_statement','mysqlparse.py',25),
  ('statement -> select_statement','statement',1,'p_statement','mysqlparse.py',26),
  ('statement -> delete_statement','statement',1,'p_statement','mysqlparse.py',27),
  ('insert_statement -> INSERT into_kw TABLE_NAME VALUES OPENPAR value_list CLOSEPAR SEMICOLON','insert_statement',8,'p_insert_statement','mysqlparse.py',30),
  ('insert_statement -> INSERT into_kw TABLE_NAME OPENPAR column_name CLOSEPAR VALUES OPENPAR value_list CLOSEPAR SEMICOLON','insert_statement',11,'p_insert_statement','mysqlparse.py',31),
  ('insert_statement -> INSERT into_kw TABLE_NAME SET assignment_list SEMICOLON','insert_statement',6,'p_insert_statement','mysqlparse.py',32),
  ('select_statement -> SELECT columns FROM TABLE_NAME SEMICOLON','select_statement',5,'p_select_statement','mysqlparse.py',66),
  ('select_statement -> SELECT columns FROM TABLE_NAME WHERE condition SEMICOLON','select_statement',7,'p_select_statement','mysqlparse.py',67),
  ('delete_statement -> DELETE FROM TABLE_NAME SEMICOLON','delete_statement',4,'p_delete_statement','mysqlparse.py',109),
  ('delete_statement -> DELETE FROM TABLE_NAME WHERE condition SEMICOLON','delete_statement',6,'p_delete_statement','mysqlparse.py',110),
  ('into_kw -> INTO','into_kw',1,'p_into_kw','mysqlparse.py',141),
  ('into_kw -> empty','into_kw',1,'p_into_kw','mysqlparse.py',142),
  ('columns -> ASTERISK','columns',1,'p_columns','mysqlparse.py',157),
  ('columns -> column_name','columns',1,'p_columns','mysqlparse.py',158),
  ('column_name -> COLUMN_NAME','column_name',1,'p_column_name','mysqlparse.py',162),
  ('column_name -> column_name COMMA COLUMN_NAME','column_name',3,'p_column_name','mysqlparse.py',163),
  ('assignment_list -> COLUMN_NAME EQUAL literals','assignment_list',3,'p_assignment_list','mysqlparse.py',172),
  ('assignment_list -> assignment_list COMMA COLUMN_NAME EQUAL literals','assignment_list',5,'p_assignment_list','mysqlparse.py',173),
  ('value_list -> literals','value_list',1,'p_value_list','mysqlparse.py',183),
  ('value_list -> value_list COMMA literals','value_list',3,'p_value_list','mysqlparse.py',184),
  ('literals -> STRING_LIT','literals',1,'p_literals','mysqlparse.py',194),
  ('literals -> INT_LIT','literals',1,'p_literals','mysqlparse.py',195),
  ('literals -> DOUBLE_LIT','literals',1,'p_literals','mysqlparse.py',196),
  ('literals -> NULL','literals',1,'p_literals','mysqlparse.py',197),
  ('condition -> string_cond','condition',1,'p_condition','mysqlparse.py',201),
  ('condition -> num_cond','condition',1,'p_condition','mysqlparse.py',202),
  ('condition -> NOT OPENPAR string_cond CLOSEPAR','condition',4,'p_condition','mysqlparse.py',203),
  ('condition -> NOT OPENPAR num_cond CLOSEPAR','condition',4,'p_condition','mysqlparse.py',204),
  ('string_cond -> string_exp LIKE string_exp','string_cond',3,'p_string_cond','mysqlparse.py',212),
  ('string_cond -> string_exp NOT LIKE string_exp','string_cond',4,'p_string_cond','mysqlparse.py',213),
  ('string_cond -> string_exp comparison_op string_exp','string_cond',3,'p_string_cond','mysqlparse.py',214),
  ('string_cond -> STRCMP OPENPAR string_exp COMMA string_exp CLOSEPAR','string_cond',6,'p_string_cond','mysqlparse.py',215),
  ('string_exp -> STRING_LIT','string_exp',1,'p_string_exp','mysqlparse.py',223),
  ('num_cond -> num_exp comparison_op num_exp','num_cond',3,'p_num_cond','mysqlparse.py',229),
  ('num_cond -> num_exp BETWEEN num_exp AND num_exp','num_cond',5,'p_num_cond','mysqlparse.py',230),
  ('num_cond -> num_exp NOT NULL','num_cond',3,'p_num_cond','mysqlparse.py',231),
  ('num_cond -> num_exp IS NULL','num_cond',3,'p_num_cond','mysqlparse.py',232),
  ('num_exp -> num_exp ADD num_factor','num_exp',3,'p_num_exp','mysqlparse.py',287),
  ('num_exp -> num_factor SUBTRACT num_exp','num_exp',3,'p_num_exp','mysqlparse.py',288),
  ('num_exp -> num_factor','num_exp',1,'p_num_exp','mysqlparse.py',289),
  ('num_factor -> num_factor ASTERISK num_term','num_factor',3,'p_num_factor','mysqlparse.py',303),
  ('num_factor -> num_factor DIVIDE num_term','num_factor',3,'p_num_factor','mysqlparse.py',304),
  ('num_factor -> num_factor DIVIDE_INT num_term','num_factor',3,'p_num_factor','mysqlparse.py',305),
  ('num_factor -> num_factor MODULO num_term','num_factor',3,'p_num_factor','mysqlparse.py',306),
  ('num_factor -> num_term','num_factor',1,'p_num_factor','mysqlparse.py',307),
  ('num_term -> OPENPAR num_exp CLOSEPAR','num_term',3,'p_num_term','mysqlparse.py',324),
  ('num_term -> num_val','num_term',1,'p_num_term','mysqlparse.py',325),
  ('num_val -> INT_LIT','num_val',1,'p_num_val','mysqlparse.py',335),
  ('num_val -> DOUBLE_LIT','num_val',1,'p_num_val','mysqlparse.py',336),
  ('num_val -> COLUMN_NAME','num_val',1,'p_num_val','mysqlparse.py',337),
  ('comparison_op -> GE','comparison_op',1,'p_comparison_op','mysqlparse.py',346),
  ('comparison_op -> GT','comparison_op',1,'p_comparison_op','mysqlparse.py',347),
  ('comparison_op -> LE','comparison_op',1,'p_comparison_op','mysqlparse.py',348),
  ('comparison_op -> LT','comparison_op',1,'p_comparison_op','mysqlparse.py',349),
  ('comparison_op -> NE','comparison_op',1,'p_comparison_op','mysqlparse.py',350),
  ('comparison_op -> EQUAL','comparison_op',1,'p_comparison_op','mysqlparse.py',351),
  ('comparison_op -> EQUAL_NULL','comparison_op',1,'p_comparison_op','mysqlparse.py',352),
  ('empty -> <empty>','empty',0,'p_empty','mysqlparse.py',357),
]
