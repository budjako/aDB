
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftADDSUBTRACTleftASTERISKDIVIDEDIVIDE_INTINSERT INTO VALUES SET SELECT DELETE INT_LIT DOUBLE_LIT STRING_LIT ADD SUBTRACT DIVIDE DIVIDE_INT MODULO EQUAL EQUAL_NULL GT GE LT LE NE NOT COLUMN_NAME TABLE_NAME ASTERISK COMMA SEMICOLON OPENPAR CLOSEPAR FROM WHERE LIKE STRCMP IS NULL BETWEEN ANDstatement : insert_statement\n            | select_statement\n            | delete_statementinsert_statement : INSERT into_kw TABLE_NAME VALUES OPENPAR value_list CLOSEPAR SEMICOLON\n            | INSERT into_kw TABLE_NAME OPENPAR column_name CLOSEPAR VALUES OPENPAR value_list CLOSEPAR SEMICOLON\n            | INSERT into_kw TABLE_NAME SET assignment_list SEMICOLONselect_statement : SELECT columns FROM TABLE_NAME SEMICOLON\n            | SELECT columns FROM TABLE_NAME WHERE condition SEMICOLONdelete_statement : DELETE FROM TABLE_NAME SEMICOLON\n            | DELETE FROM TABLE_NAME WHERE condition SEMICOLONinto_kw : INTO\n            | emptycolumns : ASTERISK\n            | column_namecolumn_name : COLUMN_NAME\n            | column_name COMMA COLUMN_NAMEassignment_list : COLUMN_NAME EQUAL literals\n            | assignment_list COMMA COLUMN_NAME EQUAL literalsvalue_list : literals\n            | value_list COMMA literalsliterals : STRING_LIT\n            | INT_LIT\n            | DOUBLE_LIT\n            | NULLcondition : string_cond\n            | num_cond\n            | NOT OPENPAR string_cond CLOSEPAR\n            | NOT OPENPAR num_cond CLOSEPARstring_cond : string_exp LIKE string_exp\n            | string_exp NOT LIKE string_exp\n            | STRCMP OPENPAR string_exp COMMA string_exp CLOSEPARstring_exp : STRING_LITnum_cond : num_exp comparison_op num_exp\n            | num_exp BETWEEN num_exp AND num_exp\n            | num_exp NOT NULL\n            | num_exp IS NULLnum_exp : num_exp ADD num_factor\n            |  num_factor SUBTRACT num_exp\n            | num_factornum_factor : num_factor ASTERISK num_term\n            | num_factor DIVIDE num_term\n            | num_factor DIVIDE_INT num_term\n            | num_factor MODULO num_term\n            | num_termnum_term : OPENPAR num_exp CLOSEPAR\n            | num_valnum_val : INT_LIT\n            | DOUBLE_LIT\n            | COLUMN_NAMEcomparison_op : GE\n            | GT\n            | LE\n            | LT\n            | NE\n            | EQUAL\n            | EQUAL_NULLempty : '
    
_lr_action_items = {'ASTERISK':([7,34,35,38,39,41,45,87,93,95,97,98,99,],[12,-47,-48,-44,-49,72,-46,-45,72,-40,-41,-42,-43,]),'DIVIDE_INT':([34,35,38,39,41,45,87,93,95,97,98,99,],[-47,-48,-44,-49,75,-46,-45,75,-40,-41,-42,-43,]),'WHERE':([17,25,],[24,47,]),'$end':([1,3,4,6,23,46,50,80,103,105,119,],[-3,0,-2,-1,-9,-7,-6,-10,-8,-4,-5,]),'OPENPAR':([16,21,24,31,33,42,47,59,60,61,63,64,65,66,67,68,69,71,72,73,74,75,76,86,110,],[22,29,31,31,59,77,31,31,31,-50,31,-52,-51,-55,-53,31,-56,-54,31,31,31,31,31,107,31,]),'STRING_LIT':([24,29,47,48,59,77,79,85,101,104,107,111,],[32,52,32,52,32,32,32,52,32,52,52,32,]),'NOT':([24,32,34,35,36,38,39,41,43,45,47,87,93,95,96,97,98,99,],[33,-32,-47,-48,62,-44,-49,-39,78,-46,33,-45,-37,-40,-38,-41,-42,-43,]),'FROM':([5,12,13,14,15,26,],[11,-13,-15,18,-14,-16,]),'MODULO':([34,35,38,39,41,45,87,93,95,97,98,99,],[-47,-48,-44,-49,76,-46,-45,76,-40,-41,-42,-43,]),'AND':([34,35,38,39,41,45,87,90,93,95,96,97,98,99,],[-47,-48,-44,-49,-39,-46,-45,110,-37,-40,-38,-41,-42,-43,]),'NULL':([29,48,62,70,85,104,107,],[55,55,91,94,55,55,55,]),'GT':([34,35,36,38,39,41,45,87,93,95,96,97,98,99,],[-47,-48,65,-44,-49,-39,-46,-45,-37,-40,-38,-41,-42,-43,]),'DOUBLE_LIT':([24,29,31,47,48,59,60,61,63,64,65,66,67,68,69,71,72,73,74,75,76,85,104,107,110,],[35,53,35,35,53,35,35,-50,35,-52,-51,-55,-53,35,-56,-54,35,35,35,35,35,53,53,53,35,]),'DELETE':([0,],[5,]),'SELECT':([0,],[7,]),'LE':([34,35,36,38,39,41,45,87,93,95,96,97,98,99,],[-47,-48,64,-44,-49,-39,-46,-45,-37,-40,-38,-41,-42,-43,]),'TABLE_NAME':([2,8,9,10,11,18,],[-57,-12,-11,16,17,25,]),'EQUAL':([27,34,35,36,38,39,41,45,83,87,93,95,96,97,98,99,],[48,-47,-48,66,-44,-49,-39,-46,104,-45,-37,-40,-38,-41,-42,-43,]),'NE':([34,35,36,38,39,41,45,87,93,95,96,97,98,99,],[-47,-48,71,-44,-49,-39,-46,-45,-37,-40,-38,-41,-42,-43,]),'COLUMN_NAME':([7,19,20,22,24,31,47,49,59,60,61,63,64,65,66,67,68,69,71,72,73,74,75,76,110,],[13,26,27,13,39,39,39,83,39,39,-50,39,-52,-51,-55,-53,39,-56,-54,39,39,39,39,39,39,]),'INT_LIT':([24,29,31,47,48,59,60,61,63,64,65,66,67,68,69,71,72,73,74,75,76,85,104,107,110,],[34,51,34,34,51,34,34,-50,34,-52,-51,-55,-53,34,-56,-54,34,34,34,34,34,51,51,51,34,]),'GE':([34,35,36,38,39,41,45,87,93,95,96,97,98,99,],[-47,-48,61,-44,-49,-39,-46,-45,-37,-40,-38,-41,-42,-43,]),'BETWEEN':([34,35,36,38,39,41,45,87,93,95,96,97,98,99,],[-47,-48,60,-44,-49,-39,-46,-45,-37,-40,-38,-41,-42,-43,]),'SUBTRACT':([34,35,38,39,41,45,87,95,97,98,99,],[-47,-48,-44,-49,73,-46,-45,-40,-41,-42,-43,]),'INTO':([2,],[9,]),'INSERT':([0,],[2,]),'STRCMP':([24,47,59,],[42,42,42,]),'EQUAL_NULL':([34,35,36,38,39,41,45,87,93,95,96,97,98,99,],[-47,-48,69,-44,-49,-39,-46,-45,-37,-40,-38,-41,-42,-43,]),'LIKE':([32,43,78,],[-32,79,101,]),'SEMICOLON':([17,25,28,32,34,35,37,38,39,40,41,44,45,51,52,53,55,81,82,84,87,91,92,93,94,95,96,97,98,99,102,108,109,112,113,115,117,118,],[23,46,50,-32,-47,-48,-25,-44,-49,-26,-39,80,-46,-22,-21,-23,-24,103,-17,105,-45,-35,-33,-37,-36,-40,-38,-41,-42,-43,-29,-27,-28,-30,-18,-34,119,-31,]),'CLOSEPAR':([13,26,30,32,34,35,38,39,41,45,51,52,53,54,55,56,58,87,88,89,91,92,93,94,95,96,97,98,99,102,106,112,114,115,116,118,],[-15,-16,57,-32,-47,-48,-44,-49,-39,-46,-22,-21,-23,-19,-24,84,87,-45,108,109,-35,-33,-37,-36,-40,-38,-41,-42,-43,-29,-20,-30,117,-34,118,-31,]),'COMMA':([13,15,26,28,30,32,51,52,53,54,55,56,82,100,106,113,114,],[-15,19,-16,49,19,-32,-22,-21,-23,-19,-24,85,-17,111,-20,-18,85,]),'VALUES':([16,57,],[21,86,]),'DIVIDE':([34,35,38,39,41,45,87,93,95,97,98,99,],[-47,-48,-44,-49,74,-46,-45,74,-40,-41,-42,-43,]),'LT':([34,35,36,38,39,41,45,87,93,95,96,97,98,99,],[-47,-48,67,-44,-49,-39,-46,-45,-37,-40,-38,-41,-42,-43,]),'ADD':([34,35,36,38,39,41,45,58,87,90,92,93,95,96,97,98,99,115,],[-47,-48,68,-44,-49,-39,-46,68,-45,68,68,-37,-40,-38,-41,-42,-43,68,]),'IS':([34,35,36,38,39,41,45,87,93,95,96,97,98,99,],[-47,-48,70,-44,-49,-39,-46,-45,-37,-40,-38,-41,-42,-43,]),'SET':([16,],[20,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'string_cond':([24,47,59,],[37,37,88,]),'num_cond':([24,47,59,],[40,40,89,]),'num_term':([24,31,47,59,60,63,68,72,73,74,75,76,110,],[38,38,38,38,38,38,38,95,38,97,98,99,38,]),'delete_statement':([0,],[1,]),'string_exp':([24,47,59,77,79,101,111,],[43,43,43,100,102,112,116,]),'value_list':([29,107,],[56,114,]),'num_factor':([24,31,47,59,60,63,68,73,110,],[41,41,41,41,41,41,93,41,41,]),'statement':([0,],[3,]),'column_name':([7,22,],[15,30,]),'literals':([29,48,85,104,107,],[54,82,106,113,54,]),'into_kw':([2,],[10,]),'num_val':([24,31,47,59,60,63,68,72,73,74,75,76,110,],[45,45,45,45,45,45,45,45,45,45,45,45,45,]),'num_exp':([24,31,47,59,60,63,73,110,],[36,58,36,36,90,92,96,115,]),'empty':([2,],[8,]),'insert_statement':([0,],[6,]),'comparison_op':([36,],[63,]),'columns':([7,],[14,]),'condition':([24,47,],[44,81,]),'select_statement':([0,],[4,]),'assignment_list':([20,],[28,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> insert_statement','statement',1,'p_statement','mysqlparse.py',25),
  ('statement -> select_statement','statement',1,'p_statement','mysqlparse.py',26),
  ('statement -> delete_statement','statement',1,'p_statement','mysqlparse.py',27),
  ('insert_statement -> INSERT into_kw TABLE_NAME VALUES OPENPAR value_list CLOSEPAR SEMICOLON','insert_statement',8,'p_insert_statement','mysqlparse.py',30),
  ('insert_statement -> INSERT into_kw TABLE_NAME OPENPAR column_name CLOSEPAR VALUES OPENPAR value_list CLOSEPAR SEMICOLON','insert_statement',11,'p_insert_statement','mysqlparse.py',31),
  ('insert_statement -> INSERT into_kw TABLE_NAME SET assignment_list SEMICOLON','insert_statement',6,'p_insert_statement','mysqlparse.py',32),
  ('select_statement -> SELECT columns FROM TABLE_NAME SEMICOLON','select_statement',5,'p_select_statement','mysqlparse.py',66),
  ('select_statement -> SELECT columns FROM TABLE_NAME WHERE condition SEMICOLON','select_statement',7,'p_select_statement','mysqlparse.py',67),
  ('delete_statement -> DELETE FROM TABLE_NAME SEMICOLON','delete_statement',4,'p_delete_statement','mysqlparse.py',108),
  ('delete_statement -> DELETE FROM TABLE_NAME WHERE condition SEMICOLON','delete_statement',6,'p_delete_statement','mysqlparse.py',109),
  ('into_kw -> INTO','into_kw',1,'p_into_kw','mysqlparse.py',140),
  ('into_kw -> empty','into_kw',1,'p_into_kw','mysqlparse.py',141),
  ('columns -> ASTERISK','columns',1,'p_columns','mysqlparse.py',156),
  ('columns -> column_name','columns',1,'p_columns','mysqlparse.py',157),
  ('column_name -> COLUMN_NAME','column_name',1,'p_column_name','mysqlparse.py',161),
  ('column_name -> column_name COMMA COLUMN_NAME','column_name',3,'p_column_name','mysqlparse.py',162),
  ('assignment_list -> COLUMN_NAME EQUAL literals','assignment_list',3,'p_assignment_list','mysqlparse.py',171),
  ('assignment_list -> assignment_list COMMA COLUMN_NAME EQUAL literals','assignment_list',5,'p_assignment_list','mysqlparse.py',172),
  ('value_list -> literals','value_list',1,'p_value_list','mysqlparse.py',182),
  ('value_list -> value_list COMMA literals','value_list',3,'p_value_list','mysqlparse.py',183),
  ('literals -> STRING_LIT','literals',1,'p_literals','mysqlparse.py',193),
  ('literals -> INT_LIT','literals',1,'p_literals','mysqlparse.py',194),
  ('literals -> DOUBLE_LIT','literals',1,'p_literals','mysqlparse.py',195),
  ('literals -> NULL','literals',1,'p_literals','mysqlparse.py',196),
  ('condition -> string_cond','condition',1,'p_condition','mysqlparse.py',200),
  ('condition -> num_cond','condition',1,'p_condition','mysqlparse.py',201),
  ('condition -> NOT OPENPAR string_cond CLOSEPAR','condition',4,'p_condition','mysqlparse.py',202),
  ('condition -> NOT OPENPAR num_cond CLOSEPAR','condition',4,'p_condition','mysqlparse.py',203),
  ('string_cond -> string_exp LIKE string_exp','string_cond',3,'p_string_cond','mysqlparse.py',211),
  ('string_cond -> string_exp NOT LIKE string_exp','string_cond',4,'p_string_cond','mysqlparse.py',212),
  ('string_cond -> STRCMP OPENPAR string_exp COMMA string_exp CLOSEPAR','string_cond',6,'p_string_cond','mysqlparse.py',213),
  ('string_exp -> STRING_LIT','string_exp',1,'p_string_exp','mysqlparse.py',221),
  ('num_cond -> num_exp comparison_op num_exp','num_cond',3,'p_num_cond','mysqlparse.py',227),
  ('num_cond -> num_exp BETWEEN num_exp AND num_exp','num_cond',5,'p_num_cond','mysqlparse.py',228),
  ('num_cond -> num_exp NOT NULL','num_cond',3,'p_num_cond','mysqlparse.py',229),
  ('num_cond -> num_exp IS NULL','num_cond',3,'p_num_cond','mysqlparse.py',230),
  ('num_exp -> num_exp ADD num_factor','num_exp',3,'p_num_exp','mysqlparse.py',285),
  ('num_exp -> num_factor SUBTRACT num_exp','num_exp',3,'p_num_exp','mysqlparse.py',286),
  ('num_exp -> num_factor','num_exp',1,'p_num_exp','mysqlparse.py',287),
  ('num_factor -> num_factor ASTERISK num_term','num_factor',3,'p_num_factor','mysqlparse.py',301),
  ('num_factor -> num_factor DIVIDE num_term','num_factor',3,'p_num_factor','mysqlparse.py',302),
  ('num_factor -> num_factor DIVIDE_INT num_term','num_factor',3,'p_num_factor','mysqlparse.py',303),
  ('num_factor -> num_factor MODULO num_term','num_factor',3,'p_num_factor','mysqlparse.py',304),
  ('num_factor -> num_term','num_factor',1,'p_num_factor','mysqlparse.py',305),
  ('num_term -> OPENPAR num_exp CLOSEPAR','num_term',3,'p_num_term','mysqlparse.py',322),
  ('num_term -> num_val','num_term',1,'p_num_term','mysqlparse.py',323),
  ('num_val -> INT_LIT','num_val',1,'p_num_val','mysqlparse.py',333),
  ('num_val -> DOUBLE_LIT','num_val',1,'p_num_val','mysqlparse.py',334),
  ('num_val -> COLUMN_NAME','num_val',1,'p_num_val','mysqlparse.py',335),
  ('comparison_op -> GE','comparison_op',1,'p_comparison_op','mysqlparse.py',344),
  ('comparison_op -> GT','comparison_op',1,'p_comparison_op','mysqlparse.py',345),
  ('comparison_op -> LE','comparison_op',1,'p_comparison_op','mysqlparse.py',346),
  ('comparison_op -> LT','comparison_op',1,'p_comparison_op','mysqlparse.py',347),
  ('comparison_op -> NE','comparison_op',1,'p_comparison_op','mysqlparse.py',348),
  ('comparison_op -> EQUAL','comparison_op',1,'p_comparison_op','mysqlparse.py',349),
  ('comparison_op -> EQUAL_NULL','comparison_op',1,'p_comparison_op','mysqlparse.py',350),
  ('empty -> <empty>','empty',0,'p_empty','mysqlparse.py',355),
]
