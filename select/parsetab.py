
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftADDSUBTRACTleftMULTIPLYDIVIDEDIVIDE_INTINSERT INTO VALUES SET SELECT DELETE INT_LIT DOUBLE_LIT STRING_LIT DATE_LIT ADD SUBTRACT MULTIPLY DIVIDE DIVIDE_INT MODULO EQUAL EQUAL_NULL GT GE LT LE NE NOT ADDDATE CURDATE CURRENT_DATE DATEDIFF DAY DAYNAME DAYOFMONTH DAYOFWEEK DAYOFYEAR LAST_DAY MAKEDATE MONTH MONTHNAME SUBDATE INTERVAL YEAR COLUMN_NAME TABLE_NAME FILTER_ROWS ASTERISK DATE_UNIT COMMA SEMICOLON OPENPAR CLOSEPAR FROM WHERE LIKE STRCMP IS NULL BETWEEN ANDstatement : insert_statement\n            | select_statement\n            | delete_statementinsert_statement : INSERT into_kw TABLE_NAME VALUES OPENPAR value_list CLOSEPAR\n            | INSERT into_kw TABLE_NAME OPENPAR column_name CLOSEPAR VALUES OPENPAR value_list CLOSEPAR\n            | INSERT into_kw TABLE_NAME SET assignment_listselect_statement : SELECT filter_rows_op columns FROM TABLE_NAME SEMICOLON\n            | SELECT filter_rows_op columns FROM TABLE_NAME WHERE condition SEMICOLONdelete_statement : DELETE FROM TABLE_NAME SEMICOLON\n            | DELETE FROM TABLE_NAME WHERE condition SEMICOLONinto_kw : INTO\n            | emptyfilter_rows_op : FILTER_ROWS\n            | emptycolumns : ASTERISK\n            | column_namecolumn_name : COLUMN_NAME\n            | column_name COMMA COLUMN_NAMEassignment_list : COLUMN_NAME EQUAL literals\n            | assignment_list COMMA COLUMN_NAME EQUAL literalsvalue_list : literals\n            | value_list COMMA literalsliterals : STRING_LIT\n            | INT_LIT\n            | DOUBLE_LIT\n            | DATE_LITcondition : string_cond\n            | num_cond\n            | date_cond\n            | NOT OPENPAR string_cond CLOSEPAR\n            | NOT OPENPAR num_cond CLOSEPAR\n            | NOT OPENPAR date_cond CLOSEPARstring_cond : string_exp LIKE string_exp\n            | string_exp NOT LIKE string_exp\n            | STRCMP OPENPAR string_exp COMMA string_exp CLOSEPARstring_exp : STRING_LITnum_cond : num_exp comparison_op num_exp\n            | num_exp BETWEEN num_exp AND num_exp\n            | num_exp NOT NULL\n            | num_exp IS NULLnum_exp : num_exp ADD num_factor\n            | num_exp SUBTRACT num_factor\n            | num_factornum_factor : num_factor MULTIPLY num_term\n            | num_factor DIVIDE num_term\n            | num_factor DIVIDE_INT num_term\n            | num_factor MODULO num_term\n            | num_termnum_term : OPENPAR num_val CLOSEPAR\n            | num_valnum_val : INT_LIT\n            | DOUBLE_LIT\n            | COLUMN_NAMEdate_cond : date_exp comparison_op date_exp\n            | date_expdate_exp : date_function\n            | DATE_LITdate_function : ADDDATE OPENPAR date_exp COMMA date_exp CLOSEPAR\n             | CURDATE OPENPAR CLOSEPAR\n             | CURRENT_DATE OPENPAR CLOSEPAR\n             | CURRENT_DATE\n             | DATEDIFF OPENPAR date_exp COMMA date_exp CLOSEPAR\n             | DAY OPENPAR date_exp CLOSEPAR\n             | DAYNAME OPENPAR date_exp CLOSEPAR\n             | DAYOFMONTH OPENPAR date_exp CLOSEPAR\n             | DAYOFWEEK OPENPAR date_exp CLOSEPAR\n             | DAYOFYEAR OPENPAR date_exp CLOSEPAR\n             | LAST_DAY OPENPAR date_exp CLOSEPAR\n             | MAKEDATE OPENPAR num_exp COMMA num_exp CLOSEPAR\n             | MONTH OPENPAR date_exp CLOSEPAR\n             | MONTHNAME OPENPAR date_exp CLOSEPAR\n             | SUBDATE OPENPAR date_exp COMMA INTERVAL num_exp DATE_UNIT CLOSEPAR\n             | YEAR OPENPAR date_exp CLOSEPARcomparison_op : GE\n            | GT\n            | LE\n            | LT\n            | NE\n            | EQUAL\n            | EQUAL_NULLempty : '
    
_lr_action_items = {'EQUAL':([32,34,39,40,41,44,45,46,50,52,54,67,119,128,129,130,131,132,135,139,140,155,157,159,165,167,168,170,172,174,175,188,191,192,195,],[-50,80,-53,-43,-52,-48,-61,-57,80,-51,-56,117,-59,-49,-45,-46,-44,-47,-60,-42,-41,179,-73,-70,-65,-64,-67,-71,-66,-68,-63,-58,-62,-69,-72,]),'MONTHNAME':([21,68,73,74,75,76,77,78,79,80,81,82,83,90,92,93,94,101,102,103,105,106,107,160,171,],[51,51,51,-76,-78,-80,-75,-77,-74,-79,51,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'CLOSEPAR':([18,32,34,37,39,40,41,44,45,46,52,54,62,64,69,84,91,110,111,112,113,114,115,118,119,121,122,123,125,126,127,128,129,130,131,132,134,135,137,138,139,140,141,143,144,145,147,149,150,157,158,159,165,167,168,170,172,174,175,178,180,181,183,184,185,186,188,189,191,192,194,195,],[-17,-50,-55,-36,-53,-43,-52,-48,-61,-57,-51,-56,-18,109,119,128,135,154,-21,-24,-26,-25,-23,157,-59,-33,159,-54,161,162,163,-49,-45,-46,-44,-47,165,-60,167,168,-42,-41,-37,-40,-39,170,172,174,175,-73,-34,-70,-65,-64,-67,-71,-66,-68,-63,-22,188,189,-38,191,192,193,-58,-35,-62,-69,195,-72,]),'GE':([32,34,39,40,41,44,45,46,50,52,54,119,128,129,130,131,132,135,139,140,157,159,165,167,168,170,172,174,175,188,191,192,195,],[-50,79,-53,-43,-52,-48,-61,-57,79,-51,-56,-59,-49,-45,-46,-44,-47,-60,-42,-41,-73,-70,-65,-64,-67,-71,-66,-68,-63,-58,-62,-69,-72,]),'CURDATE':([21,68,73,74,75,76,77,78,79,80,81,82,83,90,92,93,94,101,102,103,105,106,107,160,171,],[29,29,29,-76,-78,-80,-75,-77,-74,-79,29,29,29,29,29,29,29,29,29,29,29,29,29,29,29,]),'YEAR':([21,68,73,74,75,76,77,78,79,80,81,82,83,90,92,93,94,101,102,103,105,106,107,160,171,],[28,28,28,-76,-78,-80,-75,-77,-74,-79,28,28,28,28,28,28,28,28,28,28,28,28,28,28,28,]),'VALUES':([20,109,],[26,152,]),'MONTH':([21,68,73,74,75,76,77,78,79,80,81,82,83,90,92,93,94,101,102,103,105,106,107,160,171,],[33,33,33,-76,-78,-80,-75,-77,-74,-79,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'ASTERISK':([4,9,10,11,],[-81,17,-14,-13,]),'ADDDATE':([21,68,73,74,75,76,77,78,79,80,81,82,83,90,92,93,94,101,102,103,105,106,107,160,171,],[35,35,35,-76,-78,-80,-75,-77,-74,-79,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'NOT':([21,31,32,37,39,40,41,44,50,52,107,128,129,130,131,132,139,140,],[36,71,-50,-36,-53,-43,-52,-48,100,-51,36,-49,-45,-46,-44,-47,-42,-41,]),'INSERT':([0,],[5,]),'STRING_LIT':([21,65,72,83,89,107,117,120,153,164,177,179,],[37,115,37,37,37,37,115,37,115,37,115,115,]),'DAYNAME':([21,68,73,74,75,76,77,78,79,80,81,82,83,90,92,93,94,101,102,103,105,106,107,160,171,],[48,48,48,-76,-78,-80,-75,-77,-74,-79,48,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'SELECT':([0,],[4,]),'INTO':([5,],[14,]),'COLUMN_NAME':([4,9,10,11,21,23,25,27,38,74,75,76,77,78,79,80,83,85,86,87,88,95,96,97,98,104,107,116,169,173,182,],[-81,18,-14,-13,39,62,18,67,39,-76,-78,-80,-75,-77,-74,-79,39,39,39,39,39,39,39,39,39,39,39,155,39,39,39,]),'GT':([32,34,39,40,41,44,45,46,50,52,54,119,128,129,130,131,132,135,139,140,157,159,165,167,168,170,172,174,175,188,191,192,195,],[-50,77,-53,-43,-52,-48,-61,-57,77,-51,-56,-59,-49,-45,-46,-44,-47,-60,-42,-41,-73,-70,-65,-64,-67,-71,-66,-68,-63,-58,-62,-69,-72,]),'DOUBLE_LIT':([21,38,65,74,75,76,77,78,79,80,83,85,86,87,88,95,96,97,98,104,107,117,153,169,173,177,179,182,],[41,41,114,-76,-78,-80,-75,-77,-74,-79,41,41,41,41,41,41,41,41,41,41,41,114,114,41,41,114,114,41,]),'NULL':([99,100,],[143,144,]),'STRCMP':([21,83,107,],[42,42,42,]),'DAYOFMONTH':([21,68,73,74,75,76,77,78,79,80,81,82,83,90,92,93,94,101,102,103,105,106,107,160,171,],[43,43,43,-76,-78,-80,-75,-77,-74,-79,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'WHERE':([15,63,],[21,107,]),'CURRENT_DATE':([21,68,73,74,75,76,77,78,79,80,81,82,83,90,92,93,94,101,102,103,105,106,107,160,171,],[45,45,45,-76,-78,-80,-75,-77,-74,-79,45,45,45,45,45,45,45,45,45,45,45,45,45,45,45,]),'INTERVAL':([166,],[182,]),'DATE_LIT':([21,65,68,73,74,75,76,77,78,79,80,81,82,83,90,92,93,94,101,102,103,105,106,107,117,153,160,171,177,179,],[46,113,46,46,-76,-78,-80,-75,-77,-74,-79,46,46,46,46,46,46,46,46,46,46,46,46,46,113,113,46,46,113,113,]),'MULTIPLY':([32,39,40,41,44,52,128,129,130,131,132,139,140,],[-50,-53,87,-52,-48,-51,-49,-45,-46,-44,-47,87,87,]),'SEMICOLON':([15,30,32,34,37,39,40,41,44,45,46,52,53,54,60,61,63,119,121,123,128,129,130,131,132,135,139,140,141,143,144,151,157,158,159,161,162,163,165,167,168,170,172,174,175,183,188,189,191,192,195,],[22,70,-50,-55,-36,-53,-43,-52,-48,-61,-57,-51,-29,-56,-27,-28,108,-59,-33,-54,-49,-45,-46,-44,-47,-60,-42,-41,-37,-40,-39,176,-73,-34,-70,-32,-30,-31,-65,-64,-67,-71,-66,-68,-63,-38,-58,-35,-62,-69,-72,]),'SUBDATE':([21,68,73,74,75,76,77,78,79,80,81,82,83,90,92,93,94,101,102,103,105,106,107,160,171,],[47,47,47,-76,-78,-80,-75,-77,-74,-79,47,47,47,47,47,47,47,47,47,47,47,47,47,47,47,]),'INT_LIT':([21,38,65,74,75,76,77,78,79,80,83,85,86,87,88,95,96,97,98,104,107,117,153,169,173,177,179,182,],[52,52,112,-76,-78,-80,-75,-77,-74,-79,52,52,52,52,52,52,52,52,52,52,52,112,112,52,52,112,112,52,]),'OPENPAR':([20,21,26,28,29,33,35,36,42,43,45,47,48,49,51,55,56,57,58,59,74,75,76,77,78,79,80,83,85,86,87,88,95,96,97,98,104,107,152,169,173,182,],[25,38,65,68,69,73,82,83,89,90,91,92,93,94,101,102,103,104,105,106,-76,-78,-80,-75,-77,-74,-79,38,38,38,38,38,38,38,38,38,38,38,177,38,38,38,]),'DAYOFYEAR':([21,68,73,74,75,76,77,78,79,80,81,82,83,90,92,93,94,101,102,103,105,106,107,160,171,],[49,49,49,-76,-78,-80,-75,-77,-74,-79,49,49,49,49,49,49,49,49,49,49,49,49,49,49,49,]),'LIKE':([31,37,71,],[72,-36,120,]),'FROM':([1,16,17,18,19,62,],[8,-16,-15,-17,24,-18,]),'LE':([32,34,39,40,41,44,45,46,50,52,54,119,128,129,130,131,132,135,139,140,157,159,165,167,168,170,172,174,175,188,191,192,195,],[-50,74,-53,-43,-52,-48,-61,-57,74,-51,-56,-59,-49,-45,-46,-44,-47,-60,-42,-41,-73,-70,-65,-64,-67,-71,-66,-68,-63,-58,-62,-69,-72,]),'NE':([32,34,39,40,41,44,45,46,50,52,54,119,128,129,130,131,132,135,139,140,157,159,165,167,168,170,172,174,175,188,191,192,195,],[-50,75,-53,-43,-52,-48,-61,-57,75,-51,-56,-59,-49,-45,-46,-44,-47,-60,-42,-41,-73,-70,-65,-64,-67,-71,-66,-68,-63,-58,-62,-69,-72,]),'$end':([2,3,6,7,22,66,70,108,112,113,114,115,154,156,176,187,193,],[-2,-3,-1,0,-9,-6,-10,-7,-24,-26,-25,-23,-4,-19,-8,-20,-5,]),'COMMA':([16,18,32,37,39,40,41,44,45,46,52,54,62,64,66,110,111,112,113,114,115,119,124,128,129,130,131,132,133,135,136,139,140,146,148,156,157,159,165,167,168,170,172,174,175,178,186,187,188,191,192,195,],[23,-17,-50,-36,-53,-43,-52,-48,-61,-57,-51,-56,-18,23,116,153,-21,-24,-26,-25,-23,-59,160,-49,-45,-46,-44,-47,164,-60,166,-42,-41,171,173,-19,-73,-70,-65,-64,-67,-71,-66,-68,-63,-22,153,-20,-58,-62,-69,-72,]),'SET':([20,],[27,]),'ADD':([32,39,40,41,44,50,52,128,129,130,131,132,139,140,141,142,148,183,185,190,],[-50,-53,-43,-52,-48,96,-51,-49,-45,-46,-44,-47,-42,-41,96,96,96,96,96,96,]),'DATEDIFF':([21,68,73,74,75,76,77,78,79,80,81,82,83,90,92,93,94,101,102,103,105,106,107,160,171,],[55,55,55,-76,-78,-80,-75,-77,-74,-79,55,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'DIVIDE':([32,39,40,41,44,52,128,129,130,131,132,139,140,],[-50,-53,85,-52,-48,-51,-49,-45,-46,-44,-47,85,85,]),'BETWEEN':([32,39,40,41,44,50,52,128,129,130,131,132,139,140,],[-50,-53,-43,-52,-48,98,-51,-49,-45,-46,-44,-47,-42,-41,]),'DELETE':([0,],[1,]),'SUBTRACT':([32,39,40,41,44,50,52,128,129,130,131,132,139,140,141,142,148,183,185,190,],[-50,-53,-43,-52,-48,95,-51,-49,-45,-46,-44,-47,-42,-41,95,95,95,95,95,95,]),'DIVIDE_INT':([32,39,40,41,44,52,128,129,130,131,132,139,140,],[-50,-53,86,-52,-48,-51,-49,-45,-46,-44,-47,86,86,]),'EQUAL_NULL':([32,34,39,40,41,44,45,46,50,52,54,119,128,129,130,131,132,135,139,140,157,159,165,167,168,170,172,174,175,188,191,192,195,],[-50,76,-53,-43,-52,-48,-61,-57,76,-51,-56,-59,-49,-45,-46,-44,-47,-60,-42,-41,-73,-70,-65,-64,-67,-71,-66,-68,-63,-58,-62,-69,-72,]),'DAYOFWEEK':([21,68,73,74,75,76,77,78,79,80,81,82,83,90,92,93,94,101,102,103,105,106,107,160,171,],[56,56,56,-76,-78,-80,-75,-77,-74,-79,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'MAKEDATE':([21,68,73,74,75,76,77,78,79,80,81,82,83,90,92,93,94,101,102,103,105,106,107,160,171,],[57,57,57,-76,-78,-80,-75,-77,-74,-79,57,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'LAST_DAY':([21,68,73,74,75,76,77,78,79,80,81,82,83,90,92,93,94,101,102,103,105,106,107,160,171,],[58,58,58,-76,-78,-80,-75,-77,-74,-79,58,58,58,58,58,58,58,58,58,58,58,58,58,58,58,]),'TABLE_NAME':([5,8,12,13,14,24,],[-81,15,-12,20,-11,63,]),'DAY':([21,68,73,74,75,76,77,78,79,80,81,82,83,90,92,93,94,101,102,103,105,106,107,160,171,],[59,59,59,-76,-78,-80,-75,-77,-74,-79,59,59,59,59,59,59,59,59,59,59,59,59,59,59,59,]),'LT':([32,34,39,40,41,44,45,46,50,52,54,119,128,129,130,131,132,135,139,140,157,159,165,167,168,170,172,174,175,188,191,192,195,],[-50,78,-53,-43,-52,-48,-61,-57,78,-51,-56,-59,-49,-45,-46,-44,-47,-60,-42,-41,-73,-70,-65,-64,-67,-71,-66,-68,-63,-58,-62,-69,-72,]),'AND':([32,39,40,41,44,52,128,129,130,131,132,139,140,142,],[-50,-53,-43,-52,-48,-51,-49,-45,-46,-44,-47,-42,-41,169,]),'IS':([32,39,40,41,44,50,52,128,129,130,131,132,139,140,],[-50,-53,-43,-52,-48,99,-51,-49,-45,-46,-44,-47,-42,-41,]),'FILTER_ROWS':([4,],[11,]),'DATE_UNIT':([32,39,40,41,44,52,128,129,130,131,132,139,140,190,],[-50,-53,-43,-52,-48,-51,-49,-45,-46,-44,-47,-42,-41,194,]),'MODULO':([32,39,40,41,44,52,128,129,130,131,132,139,140,],[-50,-53,88,-52,-48,-51,-49,-45,-46,-44,-47,88,88,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'column_name':([9,25,],[16,64,]),'literals':([65,117,153,177,179,],[111,156,178,111,187,]),'num_exp':([21,83,97,98,104,107,169,173,182,],[50,50,141,142,148,50,183,185,190,]),'condition':([21,107,],[30,151,]),'num_val':([21,38,83,85,86,87,88,95,96,97,98,104,107,169,173,182,],[32,84,32,32,32,32,32,32,32,32,32,32,32,32,32,32,]),'date_function':([21,68,73,81,82,83,90,92,93,94,101,102,103,105,106,107,160,171,],[54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,54,]),'date_exp':([21,68,73,81,82,83,90,92,93,94,101,102,103,105,106,107,160,171,],[34,118,122,123,124,34,134,136,137,138,145,146,147,149,150,34,180,184,]),'select_statement':([0,],[2,]),'comparison_op':([34,50,],[81,97,]),'date_cond':([21,83,107,],[53,125,53,]),'filter_rows_op':([4,],[9,]),'delete_statement':([0,],[3,]),'value_list':([65,177,],[110,186,]),'num_factor':([21,83,95,96,97,98,104,107,169,173,182,],[40,40,139,140,40,40,40,40,40,40,40,]),'columns':([9,],[19,]),'empty':([4,5,],[10,12,]),'assignment_list':([27,],[66,]),'num_term':([21,83,85,86,87,88,95,96,97,98,104,107,169,173,182,],[44,44,129,130,131,132,44,44,44,44,44,44,44,44,44,]),'insert_statement':([0,],[6,]),'into_kw':([5,],[13,]),'statement':([0,],[7,]),'string_cond':([21,83,107,],[60,126,60,]),'string_exp':([21,72,83,89,107,120,164,],[31,121,31,133,31,158,181,]),'num_cond':([21,83,107,],[61,127,61,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> insert_statement','statement',1,'p_statement','select.py',156),
  ('statement -> select_statement','statement',1,'p_statement','select.py',157),
  ('statement -> delete_statement','statement',1,'p_statement','select.py',158),
  ('insert_statement -> INSERT into_kw TABLE_NAME VALUES OPENPAR value_list CLOSEPAR','insert_statement',7,'p_insert_statement','select.py',161),
  ('insert_statement -> INSERT into_kw TABLE_NAME OPENPAR column_name CLOSEPAR VALUES OPENPAR value_list CLOSEPAR','insert_statement',10,'p_insert_statement','select.py',162),
  ('insert_statement -> INSERT into_kw TABLE_NAME SET assignment_list','insert_statement',5,'p_insert_statement','select.py',163),
  ('select_statement -> SELECT filter_rows_op columns FROM TABLE_NAME SEMICOLON','select_statement',6,'p_select_statement','select.py',166),
  ('select_statement -> SELECT filter_rows_op columns FROM TABLE_NAME WHERE condition SEMICOLON','select_statement',8,'p_select_statement','select.py',167),
  ('delete_statement -> DELETE FROM TABLE_NAME SEMICOLON','delete_statement',4,'p_delete_statement','select.py',170),
  ('delete_statement -> DELETE FROM TABLE_NAME WHERE condition SEMICOLON','delete_statement',6,'p_delete_statement','select.py',171),
  ('into_kw -> INTO','into_kw',1,'p_into_kw','select.py',174),
  ('into_kw -> empty','into_kw',1,'p_into_kw','select.py',175),
  ('filter_rows_op -> FILTER_ROWS','filter_rows_op',1,'p_filter_rows_op','select.py',178),
  ('filter_rows_op -> empty','filter_rows_op',1,'p_filter_rows_op','select.py',179),
  ('columns -> ASTERISK','columns',1,'p_columns','select.py',182),
  ('columns -> column_name','columns',1,'p_columns','select.py',183),
  ('column_name -> COLUMN_NAME','column_name',1,'p_column_name','select.py',187),
  ('column_name -> column_name COMMA COLUMN_NAME','column_name',3,'p_column_name','select.py',188),
  ('assignment_list -> COLUMN_NAME EQUAL literals','assignment_list',3,'p_assignment_list','select.py',191),
  ('assignment_list -> assignment_list COMMA COLUMN_NAME EQUAL literals','assignment_list',5,'p_assignment_list','select.py',192),
  ('value_list -> literals','value_list',1,'p_value_list','select.py',195),
  ('value_list -> value_list COMMA literals','value_list',3,'p_value_list','select.py',196),
  ('literals -> STRING_LIT','literals',1,'p_literals','select.py',199),
  ('literals -> INT_LIT','literals',1,'p_literals','select.py',200),
  ('literals -> DOUBLE_LIT','literals',1,'p_literals','select.py',201),
  ('literals -> DATE_LIT','literals',1,'p_literals','select.py',202),
  ('condition -> string_cond','condition',1,'p_condition','select.py',205),
  ('condition -> num_cond','condition',1,'p_condition','select.py',206),
  ('condition -> date_cond','condition',1,'p_condition','select.py',207),
  ('condition -> NOT OPENPAR string_cond CLOSEPAR','condition',4,'p_condition','select.py',208),
  ('condition -> NOT OPENPAR num_cond CLOSEPAR','condition',4,'p_condition','select.py',209),
  ('condition -> NOT OPENPAR date_cond CLOSEPAR','condition',4,'p_condition','select.py',210),
  ('string_cond -> string_exp LIKE string_exp','string_cond',3,'p_string_cond','select.py',214),
  ('string_cond -> string_exp NOT LIKE string_exp','string_cond',4,'p_string_cond','select.py',215),
  ('string_cond -> STRCMP OPENPAR string_exp COMMA string_exp CLOSEPAR','string_cond',6,'p_string_cond','select.py',216),
  ('string_exp -> STRING_LIT','string_exp',1,'p_string_exp','select.py',221),
  ('num_cond -> num_exp comparison_op num_exp','num_cond',3,'p_num_cond','select.py',226),
  ('num_cond -> num_exp BETWEEN num_exp AND num_exp','num_cond',5,'p_num_cond','select.py',227),
  ('num_cond -> num_exp NOT NULL','num_cond',3,'p_num_cond','select.py',228),
  ('num_cond -> num_exp IS NULL','num_cond',3,'p_num_cond','select.py',229),
  ('num_exp -> num_exp ADD num_factor','num_exp',3,'p_num_exp','select.py',232),
  ('num_exp -> num_exp SUBTRACT num_factor','num_exp',3,'p_num_exp','select.py',233),
  ('num_exp -> num_factor','num_exp',1,'p_num_exp','select.py',234),
  ('num_factor -> num_factor MULTIPLY num_term','num_factor',3,'p_num_factor','select.py',237),
  ('num_factor -> num_factor DIVIDE num_term','num_factor',3,'p_num_factor','select.py',238),
  ('num_factor -> num_factor DIVIDE_INT num_term','num_factor',3,'p_num_factor','select.py',239),
  ('num_factor -> num_factor MODULO num_term','num_factor',3,'p_num_factor','select.py',240),
  ('num_factor -> num_term','num_factor',1,'p_num_factor','select.py',241),
  ('num_term -> OPENPAR num_val CLOSEPAR','num_term',3,'p_num_term','select.py',244),
  ('num_term -> num_val','num_term',1,'p_num_term','select.py',245),
  ('num_val -> INT_LIT','num_val',1,'p_num_val','select.py',248),
  ('num_val -> DOUBLE_LIT','num_val',1,'p_num_val','select.py',249),
  ('num_val -> COLUMN_NAME','num_val',1,'p_num_val','select.py',250),
  ('date_cond -> date_exp comparison_op date_exp','date_cond',3,'p_date_cond','select.py',253),
  ('date_cond -> date_exp','date_cond',1,'p_date_cond','select.py',254),
  ('date_exp -> date_function','date_exp',1,'p_date_exp','select.py',257),
  ('date_exp -> DATE_LIT','date_exp',1,'p_date_exp','select.py',258),
  ('date_function -> ADDDATE OPENPAR date_exp COMMA date_exp CLOSEPAR','date_function',6,'p_date_function','select.py',261),
  ('date_function -> CURDATE OPENPAR CLOSEPAR','date_function',3,'p_date_function','select.py',262),
  ('date_function -> CURRENT_DATE OPENPAR CLOSEPAR','date_function',3,'p_date_function','select.py',263),
  ('date_function -> CURRENT_DATE','date_function',1,'p_date_function','select.py',264),
  ('date_function -> DATEDIFF OPENPAR date_exp COMMA date_exp CLOSEPAR','date_function',6,'p_date_function','select.py',265),
  ('date_function -> DAY OPENPAR date_exp CLOSEPAR','date_function',4,'p_date_function','select.py',266),
  ('date_function -> DAYNAME OPENPAR date_exp CLOSEPAR','date_function',4,'p_date_function','select.py',267),
  ('date_function -> DAYOFMONTH OPENPAR date_exp CLOSEPAR','date_function',4,'p_date_function','select.py',268),
  ('date_function -> DAYOFWEEK OPENPAR date_exp CLOSEPAR','date_function',4,'p_date_function','select.py',269),
  ('date_function -> DAYOFYEAR OPENPAR date_exp CLOSEPAR','date_function',4,'p_date_function','select.py',270),
  ('date_function -> LAST_DAY OPENPAR date_exp CLOSEPAR','date_function',4,'p_date_function','select.py',271),
  ('date_function -> MAKEDATE OPENPAR num_exp COMMA num_exp CLOSEPAR','date_function',6,'p_date_function','select.py',272),
  ('date_function -> MONTH OPENPAR date_exp CLOSEPAR','date_function',4,'p_date_function','select.py',273),
  ('date_function -> MONTHNAME OPENPAR date_exp CLOSEPAR','date_function',4,'p_date_function','select.py',274),
  ('date_function -> SUBDATE OPENPAR date_exp COMMA INTERVAL num_exp DATE_UNIT CLOSEPAR','date_function',8,'p_date_function','select.py',275),
  ('date_function -> YEAR OPENPAR date_exp CLOSEPAR','date_function',4,'p_date_function','select.py',276),
  ('comparison_op -> GE','comparison_op',1,'p_comparison_op','select.py',279),
  ('comparison_op -> GT','comparison_op',1,'p_comparison_op','select.py',280),
  ('comparison_op -> LE','comparison_op',1,'p_comparison_op','select.py',281),
  ('comparison_op -> LT','comparison_op',1,'p_comparison_op','select.py',282),
  ('comparison_op -> NE','comparison_op',1,'p_comparison_op','select.py',283),
  ('comparison_op -> EQUAL','comparison_op',1,'p_comparison_op','select.py',284),
  ('comparison_op -> EQUAL_NULL','comparison_op',1,'p_comparison_op','select.py',285),
  ('empty -> <empty>','empty',0,'p_empty','select.py',296),
]
