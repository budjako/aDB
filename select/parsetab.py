
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftADDSUBTRACTleftMULTIPLYDIVIDEDIVIDE_INTINSERT INTO VALUES SET SELECT DELETE INT_LIT DOUBLE_LIT STRING_LIT ADD SUBTRACT MULTIPLY DIVIDE DIVIDE_INT MODULO EQUAL EQUAL_NULL GT GE LT LE NE NOT COLUMN_NAME TABLE_NAME FILTER_ROWS ASTERISK COMMA SEMICOLON OPENPAR CLOSEPAR FROM WHERE LIKE STRCMP IS NULL BETWEEN ANDstatement : insert_statement\n            | select_statement\n            | delete_statementinsert_statement : INSERT into_kw TABLE_NAME VALUES OPENPAR value_list CLOSEPAR SEMICOLON\n            | INSERT into_kw TABLE_NAME OPENPAR column_name CLOSEPAR VALUES OPENPAR value_list CLOSEPAR SEMICOLON\n            | INSERT into_kw TABLE_NAME SET assignment_list SEMICOLONselect_statement : SELECT filter_rows_op columns FROM TABLE_NAME SEMICOLON\n            | SELECT filter_rows_op columns FROM TABLE_NAME WHERE condition SEMICOLONdelete_statement : DELETE FROM TABLE_NAME SEMICOLON\n            | DELETE FROM TABLE_NAME WHERE condition SEMICOLONinto_kw : INTO\n            | emptyfilter_rows_op : FILTER_ROWS\n            | emptycolumns : ASTERISK\n            | column_namecolumn_name : COLUMN_NAME\n            | column_name COMMA COLUMN_NAMEassignment_list : COLUMN_NAME EQUAL literals\n            | assignment_list COMMA COLUMN_NAME EQUAL literalsvalue_list : literals\n            | value_list COMMA literalsliterals : STRING_LIT\n            | INT_LIT\n            | DOUBLE_LITcondition : string_cond\n            | num_cond\n            | NOT OPENPAR string_cond CLOSEPAR\n            | NOT OPENPAR num_cond CLOSEPARstring_cond : string_exp LIKE string_exp\n            | string_exp NOT LIKE string_exp\n            | STRCMP OPENPAR string_exp COMMA string_exp CLOSEPARstring_exp : STRING_LITnum_cond : num_exp comparison_op num_exp\n            | num_exp BETWEEN num_exp AND num_exp\n            | num_exp NOT NULL\n            | num_exp IS NULLnum_exp : num_exp ADD num_factor\n            | num_exp SUBTRACT num_factor\n            | num_factornum_factor : num_factor MULTIPLY num_term\n            | num_factor DIVIDE num_term\n            | num_factor DIVIDE_INT num_term\n            | num_factor MODULO num_term\n            | num_termnum_term : OPENPAR num_val CLOSEPAR\n            | num_valnum_val : INT_LIT\n            | DOUBLE_LIT\n            | COLUMN_NAMEcomparison_op : GE\n            | GT\n            | LE\n            | LT\n            | NE\n            | EQUAL\n            | EQUAL_NULLempty : '
    
_lr_action_items = {'EQUAL_NULL':([36,37,38,40,42,45,46,89,94,97,99,100,101,102,],[-47,-49,-45,66,-50,-40,-48,-46,-38,-39,-44,-42,-43,-41,]),'EQUAL':([31,36,37,38,40,42,45,46,84,89,94,97,99,100,101,102,],[53,-47,-49,-45,67,-50,-40,-48,106,-46,-38,-39,-44,-42,-43,-41,]),'OPENPAR':([19,25,27,41,48,50,63,64,65,66,67,69,70,71,72,73,75,78,79,80,81,82,86,111,],[24,33,34,76,82,34,34,-52,-55,-57,-56,-51,-54,34,-53,34,34,34,34,34,34,34,107,34,]),'TABLE_NAME':([2,11,12,13,14,21,],[-58,-11,19,-12,20,28,]),'MULTIPLY':([36,37,38,42,45,46,89,94,97,99,100,101,102,],[-47,-49,-45,-50,81,-48,-46,81,81,-44,-42,-43,-41,]),'NULL':([68,74,],[93,96,]),'SUBTRACT':([36,37,38,40,42,45,46,89,92,94,95,97,99,100,101,102,117,],[-47,-49,-45,75,-50,-40,-48,-46,75,-38,75,-39,-44,-42,-43,-41,75,]),'SELECT':([0,],[1,]),'IS':([36,37,38,40,42,45,46,89,94,97,99,100,101,102,],[-47,-49,-45,68,-50,-40,-48,-46,-38,-39,-44,-42,-43,-41,]),'INSERT':([0,],[2,]),'SET':([19,],[23,]),'SEMICOLON':([20,28,30,36,37,38,39,42,43,44,45,46,47,57,58,59,83,85,88,89,91,92,93,94,96,97,99,100,101,102,110,113,114,115,117,119,120,],[26,49,51,-47,-49,-45,-26,-50,77,-27,-40,-48,-33,-25,-24,-23,105,-19,109,-46,-30,-34,-37,-38,-36,-39,-44,-42,-43,-41,-31,-28,-29,-20,-35,121,-32,]),'DOUBLE_LIT':([27,33,34,50,53,63,64,65,66,67,69,70,71,72,73,75,78,79,80,81,82,87,106,107,111,],[37,57,37,37,57,37,-52,-55,-57,-56,-51,-54,37,-53,37,37,37,37,37,37,37,57,57,57,37,]),'NE':([36,37,38,40,42,45,46,89,94,97,99,100,101,102,],[-47,-49,-45,65,-50,-40,-48,-46,-38,-39,-44,-42,-43,-41,]),'LT':([36,37,38,40,42,45,46,89,94,97,99,100,101,102,],[-47,-49,-45,70,-50,-40,-48,-46,-38,-39,-44,-42,-43,-41,]),'COMMA':([16,18,29,30,32,47,55,56,57,58,59,85,98,108,115,116,],[-17,22,-18,52,22,-33,-21,87,-25,-24,-23,-19,112,-22,-20,87,]),'STRCMP':([27,50,82,],[41,41,41,]),'$end':([3,4,5,6,26,49,51,77,105,109,121,],[-1,-3,0,-2,-9,-7,-6,-10,-8,-4,-5,]),'GT':([36,37,38,40,42,45,46,89,94,97,99,100,101,102,],[-47,-49,-45,64,-50,-40,-48,-46,-38,-39,-44,-42,-43,-41,]),'MODULO':([36,37,38,42,45,46,89,94,97,99,100,101,102,],[-47,-49,-45,-50,78,-48,-46,78,78,-44,-42,-43,-41,]),'DIVIDE':([36,37,38,42,45,46,89,94,97,99,100,101,102,],[-47,-49,-45,-50,79,-48,-46,79,79,-44,-42,-43,-41,]),'INTO':([2,],[11,]),'ASTERISK':([1,8,9,10,],[-58,-14,15,-13,]),'GE':([36,37,38,40,42,45,46,89,94,97,99,100,101,102,],[-47,-49,-45,69,-50,-40,-48,-46,-38,-39,-44,-42,-43,-41,]),'LE':([36,37,38,40,42,45,46,89,94,97,99,100,101,102,],[-47,-49,-45,72,-50,-40,-48,-46,-38,-39,-44,-42,-43,-41,]),'BETWEEN':([36,37,38,40,42,45,46,89,94,97,99,100,101,102,],[-47,-49,-45,73,-50,-40,-48,-46,-38,-39,-44,-42,-43,-41,]),'WHERE':([20,28,],[27,50,]),'CLOSEPAR':([16,29,32,36,37,38,42,45,46,47,55,56,57,58,59,60,89,91,92,93,94,96,97,99,100,101,102,103,104,108,110,116,117,118,120,],[-17,-18,54,-47,-49,-45,-50,-40,-48,-33,-21,88,-25,-24,-23,89,-46,-30,-34,-37,-38,-36,-39,-44,-42,-43,-41,113,114,-22,-31,119,-35,120,-32,]),'AND':([36,37,38,42,45,46,89,94,95,97,99,100,101,102,],[-47,-49,-45,-50,-40,-48,-46,-38,111,-39,-44,-42,-43,-41,]),'FROM':([7,15,16,17,18,29,],[14,-15,-17,21,-16,-18,]),'LIKE':([35,47,61,],[62,-33,90,]),'ADD':([36,37,38,40,42,45,46,89,92,94,95,97,99,100,101,102,117,],[-47,-49,-45,71,-50,-40,-48,-46,71,-38,71,-39,-44,-42,-43,-41,71,]),'INT_LIT':([27,33,34,50,53,63,64,65,66,67,69,70,71,72,73,75,78,79,80,81,82,87,106,107,111,],[46,58,46,46,58,46,-52,-55,-57,-56,-51,-54,46,-53,46,46,46,46,46,46,46,58,58,58,46,]),'DIVIDE_INT':([36,37,38,42,45,46,89,94,97,99,100,101,102,],[-47,-49,-45,-50,80,-48,-46,80,80,-44,-42,-43,-41,]),'VALUES':([19,54,],[25,86,]),'STRING_LIT':([27,33,50,53,62,76,82,87,90,106,107,112,],[47,59,47,59,47,47,47,59,47,59,59,47,]),'NOT':([27,35,36,37,38,40,42,45,46,47,50,89,94,97,99,100,101,102,],[48,61,-47,-49,-45,74,-50,-40,-48,-33,48,-46,-38,-39,-44,-42,-43,-41,]),'COLUMN_NAME':([1,8,9,10,22,23,24,27,34,50,52,63,64,65,66,67,69,70,71,72,73,75,78,79,80,81,82,111,],[-58,-14,16,-13,29,31,16,42,42,42,84,42,-52,-55,-57,-56,-51,-54,42,-53,42,42,42,42,42,42,42,42,]),'FILTER_ROWS':([1,],[10,]),'DELETE':([0,],[7,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'condition':([27,50,],[43,83,]),'comparison_op':([40,],[63,]),'assignment_list':([23,],[30,]),'literals':([33,53,87,106,107,],[55,85,108,115,55,]),'filter_rows_op':([1,],[9,]),'string_exp':([27,50,62,76,82,90,112,],[35,35,91,98,35,110,118,]),'into_kw':([2,],[12,]),'num_term':([27,50,63,71,73,75,78,79,80,81,82,111,],[38,38,38,38,38,38,99,100,101,102,38,38,]),'num_cond':([27,50,82,],[44,44,104,]),'num_factor':([27,50,63,71,73,75,82,111,],[45,45,45,94,45,97,45,45,]),'string_cond':([27,50,82,],[39,39,103,]),'select_statement':([0,],[6,]),'delete_statement':([0,],[4,]),'columns':([9,],[17,]),'statement':([0,],[5,]),'num_exp':([27,50,63,73,82,111,],[40,40,92,95,40,117,]),'value_list':([33,107,],[56,116,]),'num_val':([27,34,50,63,71,73,75,78,79,80,81,82,111,],[36,60,36,36,36,36,36,36,36,36,36,36,36,]),'insert_statement':([0,],[3,]),'empty':([1,2,],[8,13,]),'column_name':([9,24,],[18,32,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> insert_statement','statement',1,'p_statement','select.py',124),
  ('statement -> select_statement','statement',1,'p_statement','select.py',125),
  ('statement -> delete_statement','statement',1,'p_statement','select.py',126),
  ('insert_statement -> INSERT into_kw TABLE_NAME VALUES OPENPAR value_list CLOSEPAR SEMICOLON','insert_statement',8,'p_insert_statement','select.py',129),
  ('insert_statement -> INSERT into_kw TABLE_NAME OPENPAR column_name CLOSEPAR VALUES OPENPAR value_list CLOSEPAR SEMICOLON','insert_statement',11,'p_insert_statement','select.py',130),
  ('insert_statement -> INSERT into_kw TABLE_NAME SET assignment_list SEMICOLON','insert_statement',6,'p_insert_statement','select.py',131),
  ('select_statement -> SELECT filter_rows_op columns FROM TABLE_NAME SEMICOLON','select_statement',6,'p_select_statement','select.py',134),
  ('select_statement -> SELECT filter_rows_op columns FROM TABLE_NAME WHERE condition SEMICOLON','select_statement',8,'p_select_statement','select.py',135),
  ('delete_statement -> DELETE FROM TABLE_NAME SEMICOLON','delete_statement',4,'p_delete_statement','select.py',138),
  ('delete_statement -> DELETE FROM TABLE_NAME WHERE condition SEMICOLON','delete_statement',6,'p_delete_statement','select.py',139),
  ('into_kw -> INTO','into_kw',1,'p_into_kw','select.py',142),
  ('into_kw -> empty','into_kw',1,'p_into_kw','select.py',143),
  ('filter_rows_op -> FILTER_ROWS','filter_rows_op',1,'p_filter_rows_op','select.py',146),
  ('filter_rows_op -> empty','filter_rows_op',1,'p_filter_rows_op','select.py',147),
  ('columns -> ASTERISK','columns',1,'p_columns','select.py',150),
  ('columns -> column_name','columns',1,'p_columns','select.py',151),
  ('column_name -> COLUMN_NAME','column_name',1,'p_column_name','select.py',155),
  ('column_name -> column_name COMMA COLUMN_NAME','column_name',3,'p_column_name','select.py',156),
  ('assignment_list -> COLUMN_NAME EQUAL literals','assignment_list',3,'p_assignment_list','select.py',159),
  ('assignment_list -> assignment_list COMMA COLUMN_NAME EQUAL literals','assignment_list',5,'p_assignment_list','select.py',160),
  ('value_list -> literals','value_list',1,'p_value_list','select.py',163),
  ('value_list -> value_list COMMA literals','value_list',3,'p_value_list','select.py',164),
  ('literals -> STRING_LIT','literals',1,'p_literals','select.py',167),
  ('literals -> INT_LIT','literals',1,'p_literals','select.py',168),
  ('literals -> DOUBLE_LIT','literals',1,'p_literals','select.py',169),
  ('condition -> string_cond','condition',1,'p_condition','select.py',172),
  ('condition -> num_cond','condition',1,'p_condition','select.py',173),
  ('condition -> NOT OPENPAR string_cond CLOSEPAR','condition',4,'p_condition','select.py',174),
  ('condition -> NOT OPENPAR num_cond CLOSEPAR','condition',4,'p_condition','select.py',175),
  ('string_cond -> string_exp LIKE string_exp','string_cond',3,'p_string_cond','select.py',179),
  ('string_cond -> string_exp NOT LIKE string_exp','string_cond',4,'p_string_cond','select.py',180),
  ('string_cond -> STRCMP OPENPAR string_exp COMMA string_exp CLOSEPAR','string_cond',6,'p_string_cond','select.py',181),
  ('string_exp -> STRING_LIT','string_exp',1,'p_string_exp','select.py',186),
  ('num_cond -> num_exp comparison_op num_exp','num_cond',3,'p_num_cond','select.py',191),
  ('num_cond -> num_exp BETWEEN num_exp AND num_exp','num_cond',5,'p_num_cond','select.py',192),
  ('num_cond -> num_exp NOT NULL','num_cond',3,'p_num_cond','select.py',193),
  ('num_cond -> num_exp IS NULL','num_cond',3,'p_num_cond','select.py',194),
  ('num_exp -> num_exp ADD num_factor','num_exp',3,'p_num_exp','select.py',198),
  ('num_exp -> num_exp SUBTRACT num_factor','num_exp',3,'p_num_exp','select.py',199),
  ('num_exp -> num_factor','num_exp',1,'p_num_exp','select.py',200),
  ('num_factor -> num_factor MULTIPLY num_term','num_factor',3,'p_num_factor','select.py',205),
  ('num_factor -> num_factor DIVIDE num_term','num_factor',3,'p_num_factor','select.py',206),
  ('num_factor -> num_factor DIVIDE_INT num_term','num_factor',3,'p_num_factor','select.py',207),
  ('num_factor -> num_factor MODULO num_term','num_factor',3,'p_num_factor','select.py',208),
  ('num_factor -> num_term','num_factor',1,'p_num_factor','select.py',209),
  ('num_term -> OPENPAR num_val CLOSEPAR','num_term',3,'p_num_term','select.py',213),
  ('num_term -> num_val','num_term',1,'p_num_term','select.py',214),
  ('num_val -> INT_LIT','num_val',1,'p_num_val','select.py',217),
  ('num_val -> DOUBLE_LIT','num_val',1,'p_num_val','select.py',218),
  ('num_val -> COLUMN_NAME','num_val',1,'p_num_val','select.py',219),
  ('comparison_op -> GE','comparison_op',1,'p_comparison_op','select.py',223),
  ('comparison_op -> GT','comparison_op',1,'p_comparison_op','select.py',224),
  ('comparison_op -> LE','comparison_op',1,'p_comparison_op','select.py',225),
  ('comparison_op -> LT','comparison_op',1,'p_comparison_op','select.py',226),
  ('comparison_op -> NE','comparison_op',1,'p_comparison_op','select.py',227),
  ('comparison_op -> EQUAL','comparison_op',1,'p_comparison_op','select.py',228),
  ('comparison_op -> EQUAL_NULL','comparison_op',1,'p_comparison_op','select.py',229),
  ('empty -> <empty>','empty',0,'p_empty','select.py',240),
]
