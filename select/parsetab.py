
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftADDSUBTRACTleftASTERISKDIVIDEDIVIDE_INTINSERT INTO VALUES SET SELECT DELETE INT_LIT DOUBLE_LIT STRING_LIT ADD SUBTRACT DIVIDE DIVIDE_INT MODULO EQUAL EQUAL_NULL GT GE LT LE NE NOT COLUMN_NAME TABLE_NAME ASTERISK COMMA SEMICOLON OPENPAR CLOSEPAR FROM WHERE LIKE STRCMP IS NULL BETWEEN ANDstatement : insert_statement\n            | select_statement\n            | delete_statementinsert_statement : INSERT into_kw TABLE_NAME VALUES OPENPAR value_list CLOSEPAR SEMICOLON\n            | INSERT into_kw TABLE_NAME OPENPAR column_name CLOSEPAR VALUES OPENPAR value_list CLOSEPAR SEMICOLON\n            | INSERT into_kw TABLE_NAME SET assignment_list SEMICOLONselect_statement : SELECT columns FROM TABLE_NAME SEMICOLON\n            | SELECT columns FROM TABLE_NAME WHERE condition SEMICOLONdelete_statement : DELETE FROM TABLE_NAME SEMICOLON\n            | DELETE FROM TABLE_NAME WHERE condition SEMICOLONinto_kw : INTO\n            | emptycolumns : ASTERISK\n            | column_namecolumn_name : COLUMN_NAME\n            | column_name COMMA COLUMN_NAMEassignment_list : COLUMN_NAME EQUAL literals\n            | assignment_list COMMA COLUMN_NAME EQUAL literalsvalue_list : literals\n            | value_list COMMA literalsliterals : STRING_LIT\n            | INT_LIT\n            | DOUBLE_LITcondition : string_cond\n            | num_cond\n            | NOT OPENPAR string_cond CLOSEPAR\n            | NOT OPENPAR num_cond CLOSEPARstring_cond : string_exp LIKE string_exp\n            | string_exp NOT LIKE string_exp\n            | STRCMP OPENPAR string_exp COMMA string_exp CLOSEPARstring_exp : STRING_LITnum_cond : num_exp comparison_op num_exp\n            | num_exp BETWEEN num_exp AND num_exp\n            | num_exp NOT NULL\n            | num_exp IS NULLnum_exp : num_exp ADD num_factor\n            |  num_factor SUBTRACT num_exp\n            | num_factornum_factor : num_factor ASTERISK num_term\n            | num_factor DIVIDE num_term\n            | num_factor DIVIDE_INT num_term\n            | num_factor MODULO num_term\n            | num_termnum_term : OPENPAR num_exp CLOSEPAR\n            | num_valnum_val : INT_LIT\n            | DOUBLE_LIT\n            | COLUMN_NAMEcomparison_op : GE\n            | GT\n            | LE\n            | LT\n            | NE\n            | EQUAL\n            | EQUAL_NULLempty : '
    
_lr_action_items = {'DOUBLE_LIT':([25,27,31,37,51,61,62,63,65,66,67,68,69,70,71,73,76,77,78,79,80,84,103,106,110,],[33,33,52,33,52,33,-54,-53,33,-50,-51,-55,33,-52,-49,33,33,33,33,33,33,52,52,52,33,]),'LE':([33,35,39,41,43,45,47,88,92,98,99,100,101,102,],[-47,-45,-48,-46,-43,67,-38,-44,-36,-37,-39,-42,-41,-40,]),'INTO':([4,],[13,]),'TABLE_NAME':([4,12,13,14,15,17,],[-56,-12,-11,18,19,21,]),'GE':([33,35,39,41,43,45,47,88,92,98,99,100,101,102,],[-47,-45,-48,-46,-43,71,-38,-44,-36,-37,-39,-42,-41,-40,]),'$end':([1,2,5,7,26,28,50,60,81,105,118,],[-2,0,-3,-1,-9,-7,-6,-10,-8,-4,-5,]),'SEMICOLON':([19,21,29,33,35,36,38,39,41,42,43,44,47,48,52,53,54,83,85,88,91,92,94,95,96,98,99,100,101,102,108,109,111,112,115,116,117,],[26,28,50,-47,-45,-31,60,-48,-46,-25,-43,-24,-38,81,-23,-22,-21,-17,105,-44,-34,-36,-35,-32,-28,-37,-39,-42,-41,-40,-27,-26,-29,-18,-33,118,-30,]),'SET':([18,],[22,]),'DIVIDE':([33,35,39,41,43,47,88,92,99,100,101,102,],[-47,-45,-48,-46,-43,80,-44,80,-39,-42,-41,-40,]),'STRING_LIT':([25,27,31,51,58,61,74,84,97,103,106,107,],[36,36,54,54,36,36,36,54,36,54,54,36,]),'INSERT':([0,],[4,]),'VALUES':([18,57,],[23,86,]),'MODULO':([33,35,39,41,43,47,88,92,99,100,101,102,],[-47,-45,-48,-46,-43,78,-44,78,-39,-42,-41,-40,]),'EQUAL':([30,33,35,39,41,43,45,47,82,88,92,98,99,100,101,102,],[51,-47,-45,-48,-46,-43,62,-38,103,-44,-36,-37,-39,-42,-41,-40,]),'IS':([33,35,39,41,43,45,47,88,92,98,99,100,101,102,],[-47,-45,-48,-46,-43,72,-38,-44,-36,-37,-39,-42,-41,-40,]),'NE':([33,35,39,41,43,45,47,88,92,98,99,100,101,102,],[-47,-45,-48,-46,-43,63,-38,-44,-36,-37,-39,-42,-41,-40,]),'COLUMN_NAME':([3,16,22,24,25,27,37,49,61,62,63,65,66,67,68,69,70,71,73,76,77,78,79,80,110,],[10,20,30,10,39,39,39,82,39,-54,-53,39,-50,-51,-55,39,-52,-49,39,39,39,39,39,39,39,]),'DELETE':([0,],[6,]),'DIVIDE_INT':([33,35,39,41,43,47,88,92,99,100,101,102,],[-47,-45,-48,-46,-43,79,-44,79,-39,-42,-41,-40,]),'NOT':([25,27,33,35,36,39,41,43,45,46,47,88,92,98,99,100,101,102,],[40,40,-47,-45,-31,-48,-46,-43,64,75,-38,-44,-36,-37,-39,-42,-41,-40,]),'ADD':([33,35,39,41,43,45,47,59,88,92,93,95,98,99,100,101,102,115,],[-47,-45,-48,-46,-43,65,-38,65,-44,-36,65,65,-37,-39,-42,-41,-40,65,]),'LIKE':([36,46,75,],[-31,74,97,]),'GT':([33,35,39,41,43,45,47,88,92,98,99,100,101,102,],[-47,-45,-48,-46,-43,66,-38,-44,-36,-37,-39,-42,-41,-40,]),'STRCMP':([25,27,61,],[34,34,34,]),'INT_LIT':([25,27,31,37,51,61,62,63,65,66,67,68,69,70,71,73,76,77,78,79,80,84,103,106,110,],[41,41,53,41,53,41,-54,-53,41,-50,-51,-55,41,-52,-49,41,41,41,41,41,41,53,53,53,41,]),'SELECT':([0,],[3,]),'BETWEEN':([33,35,39,41,43,45,47,88,92,98,99,100,101,102,],[-47,-45,-48,-46,-43,69,-38,-44,-36,-37,-39,-42,-41,-40,]),'NULL':([64,72,],[91,94,]),'SUBTRACT':([33,35,39,41,43,47,88,99,100,101,102,],[-47,-45,-48,-46,-43,76,-44,-39,-42,-41,-40,]),'WHERE':([19,21,],[25,27,]),'ASTERISK':([3,33,35,39,41,43,47,88,92,99,100,101,102,],[9,-47,-45,-48,-46,-43,77,-44,77,-39,-42,-41,-40,]),'EQUAL_NULL':([33,35,39,41,43,45,47,88,92,98,99,100,101,102,],[-47,-45,-48,-46,-43,68,-38,-44,-36,-37,-39,-42,-41,-40,]),'OPENPAR':([18,23,25,27,34,37,40,61,62,63,65,66,67,68,69,70,71,73,76,77,78,79,80,86,110,],[24,31,37,37,58,37,61,37,-54,-53,37,-50,-51,-55,37,-52,-49,37,37,37,37,37,37,106,37,]),'LT':([33,35,39,41,43,45,47,88,92,98,99,100,101,102,],[-47,-45,-48,-46,-43,70,-38,-44,-36,-37,-39,-42,-41,-40,]),'COMMA':([8,10,20,29,32,36,52,53,54,55,56,83,87,104,112,113,],[16,-15,-16,49,16,-31,-23,-22,-21,84,-19,-17,107,-20,-18,84,]),'CLOSEPAR':([10,20,32,33,35,36,39,41,43,47,52,53,54,55,56,59,88,89,90,91,92,94,95,96,98,99,100,101,102,104,111,113,114,115,117,],[-15,-16,57,-47,-45,-31,-48,-46,-43,-38,-23,-22,-21,85,-19,88,-44,108,109,-34,-36,-35,-32,-28,-37,-39,-42,-41,-40,-20,-29,116,117,-33,-30,]),'FROM':([6,8,9,10,11,20,],[15,-14,-13,-15,17,-16,]),'AND':([33,35,39,41,43,47,88,92,93,98,99,100,101,102,],[-47,-45,-48,-46,-43,-38,-44,-36,110,-37,-39,-42,-41,-40,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'select_statement':([0,],[1,]),'condition':([25,27,],[38,48,]),'empty':([4,],[12,]),'statement':([0,],[2,]),'num_val':([25,27,37,61,65,69,73,76,77,78,79,80,110,],[35,35,35,35,35,35,35,35,35,35,35,35,35,]),'num_exp':([25,27,37,61,69,73,76,110,],[45,45,59,45,93,95,98,115,]),'column_name':([3,24,],[8,32,]),'literals':([31,51,84,103,106,],[56,83,104,112,56,]),'assignment_list':([22,],[29,]),'num_cond':([25,27,61,],[42,42,89,]),'delete_statement':([0,],[5,]),'num_term':([25,27,37,61,65,69,73,76,77,78,79,80,110,],[43,43,43,43,43,43,43,43,99,100,101,102,43,]),'string_cond':([25,27,61,],[44,44,90,]),'into_kw':([4,],[14,]),'string_exp':([25,27,58,61,74,97,107,],[46,46,87,46,96,111,114,]),'num_factor':([25,27,37,61,65,69,73,76,110,],[47,47,47,47,92,47,47,47,47,]),'columns':([3,],[11,]),'comparison_op':([45,],[73,]),'value_list':([31,106,],[55,113,]),'insert_statement':([0,],[7,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> insert_statement','statement',1,'p_statement','select.py',128),
  ('statement -> select_statement','statement',1,'p_statement','select.py',129),
  ('statement -> delete_statement','statement',1,'p_statement','select.py',130),
  ('insert_statement -> INSERT into_kw TABLE_NAME VALUES OPENPAR value_list CLOSEPAR SEMICOLON','insert_statement',8,'p_insert_statement','select.py',133),
  ('insert_statement -> INSERT into_kw TABLE_NAME OPENPAR column_name CLOSEPAR VALUES OPENPAR value_list CLOSEPAR SEMICOLON','insert_statement',11,'p_insert_statement','select.py',134),
  ('insert_statement -> INSERT into_kw TABLE_NAME SET assignment_list SEMICOLON','insert_statement',6,'p_insert_statement','select.py',135),
  ('select_statement -> SELECT columns FROM TABLE_NAME SEMICOLON','select_statement',5,'p_select_statement','select.py',147),
  ('select_statement -> SELECT columns FROM TABLE_NAME WHERE condition SEMICOLON','select_statement',7,'p_select_statement','select.py',148),
  ('delete_statement -> DELETE FROM TABLE_NAME SEMICOLON','delete_statement',4,'p_delete_statement','select.py',162),
  ('delete_statement -> DELETE FROM TABLE_NAME WHERE condition SEMICOLON','delete_statement',6,'p_delete_statement','select.py',163),
  ('into_kw -> INTO','into_kw',1,'p_into_kw','select.py',175),
  ('into_kw -> empty','into_kw',1,'p_into_kw','select.py',176),
  ('columns -> ASTERISK','columns',1,'p_columns','select.py',191),
  ('columns -> column_name','columns',1,'p_columns','select.py',192),
  ('column_name -> COLUMN_NAME','column_name',1,'p_column_name','select.py',196),
  ('column_name -> column_name COMMA COLUMN_NAME','column_name',3,'p_column_name','select.py',197),
  ('assignment_list -> COLUMN_NAME EQUAL literals','assignment_list',3,'p_assignment_list','select.py',204),
  ('assignment_list -> assignment_list COMMA COLUMN_NAME EQUAL literals','assignment_list',5,'p_assignment_list','select.py',205),
  ('value_list -> literals','value_list',1,'p_value_list','select.py',213),
  ('value_list -> value_list COMMA literals','value_list',3,'p_value_list','select.py',214),
  ('literals -> STRING_LIT','literals',1,'p_literals','select.py',222),
  ('literals -> INT_LIT','literals',1,'p_literals','select.py',223),
  ('literals -> DOUBLE_LIT','literals',1,'p_literals','select.py',224),
  ('condition -> string_cond','condition',1,'p_condition','select.py',228),
  ('condition -> num_cond','condition',1,'p_condition','select.py',229),
  ('condition -> NOT OPENPAR string_cond CLOSEPAR','condition',4,'p_condition','select.py',230),
  ('condition -> NOT OPENPAR num_cond CLOSEPAR','condition',4,'p_condition','select.py',231),
  ('string_cond -> string_exp LIKE string_exp','string_cond',3,'p_string_cond','select.py',240),
  ('string_cond -> string_exp NOT LIKE string_exp','string_cond',4,'p_string_cond','select.py',241),
  ('string_cond -> STRCMP OPENPAR string_exp COMMA string_exp CLOSEPAR','string_cond',6,'p_string_cond','select.py',242),
  ('string_exp -> STRING_LIT','string_exp',1,'p_string_exp','select.py',262),
  ('num_cond -> num_exp comparison_op num_exp','num_cond',3,'p_num_cond','select.py',268),
  ('num_cond -> num_exp BETWEEN num_exp AND num_exp','num_cond',5,'p_num_cond','select.py',269),
  ('num_cond -> num_exp NOT NULL','num_cond',3,'p_num_cond','select.py',270),
  ('num_cond -> num_exp IS NULL','num_cond',3,'p_num_cond','select.py',271),
  ('num_exp -> num_exp ADD num_factor','num_exp',3,'p_num_exp','select.py',291),
  ('num_exp -> num_factor SUBTRACT num_exp','num_exp',3,'p_num_exp','select.py',292),
  ('num_exp -> num_factor','num_exp',1,'p_num_exp','select.py',293),
  ('num_factor -> num_factor ASTERISK num_term','num_factor',3,'p_num_factor','select.py',307),
  ('num_factor -> num_factor DIVIDE num_term','num_factor',3,'p_num_factor','select.py',308),
  ('num_factor -> num_factor DIVIDE_INT num_term','num_factor',3,'p_num_factor','select.py',309),
  ('num_factor -> num_factor MODULO num_term','num_factor',3,'p_num_factor','select.py',310),
  ('num_factor -> num_term','num_factor',1,'p_num_factor','select.py',311),
  ('num_term -> OPENPAR num_exp CLOSEPAR','num_term',3,'p_num_term','select.py',328),
  ('num_term -> num_val','num_term',1,'p_num_term','select.py',329),
  ('num_val -> INT_LIT','num_val',1,'p_num_val','select.py',339),
  ('num_val -> DOUBLE_LIT','num_val',1,'p_num_val','select.py',340),
  ('num_val -> COLUMN_NAME','num_val',1,'p_num_val','select.py',341),
  ('comparison_op -> GE','comparison_op',1,'p_comparison_op','select.py',350),
  ('comparison_op -> GT','comparison_op',1,'p_comparison_op','select.py',351),
  ('comparison_op -> LE','comparison_op',1,'p_comparison_op','select.py',352),
  ('comparison_op -> LT','comparison_op',1,'p_comparison_op','select.py',353),
  ('comparison_op -> NE','comparison_op',1,'p_comparison_op','select.py',354),
  ('comparison_op -> EQUAL','comparison_op',1,'p_comparison_op','select.py',355),
  ('comparison_op -> EQUAL_NULL','comparison_op',1,'p_comparison_op','select.py',356),
  ('empty -> <empty>','empty',0,'p_empty','select.py',360),
]
