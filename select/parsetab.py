
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftADDSUBTRACTleftASTERISKDIVIDEDIVIDE_INTINSERT INTO VALUES SET SELECT DELETE INT_LIT DOUBLE_LIT STRING_LIT ADD SUBTRACT DIVIDE DIVIDE_INT MODULO EQUAL EQUAL_NULL GT GE LT LE NE NOT COLUMN_NAME TABLE_NAME ASTERISK COMMA SEMICOLON OPENPAR CLOSEPAR FROM WHERE LIKE STRCMP IS NULL BETWEEN ANDstatement : insert_statement\n            | select_statement\n            | delete_statementinsert_statement : INSERT into_kw TABLE_NAME VALUES OPENPAR value_list CLOSEPAR SEMICOLON\n            | INSERT into_kw TABLE_NAME OPENPAR column_name CLOSEPAR VALUES OPENPAR value_list CLOSEPAR SEMICOLON\n            | INSERT into_kw TABLE_NAME SET assignment_list SEMICOLONselect_statement : SELECT columns FROM TABLE_NAME SEMICOLON\n            | SELECT columns FROM TABLE_NAME WHERE condition SEMICOLONdelete_statement : DELETE FROM TABLE_NAME SEMICOLON\n            | DELETE FROM TABLE_NAME WHERE condition SEMICOLONinto_kw : INTO\n            | emptycolumns : ASTERISK\n            | column_namecolumn_name : COLUMN_NAME\n            | column_name COMMA COLUMN_NAMEassignment_list : COLUMN_NAME EQUAL literals\n            | assignment_list COMMA COLUMN_NAME EQUAL literalsvalue_list : literals\n            | value_list COMMA literalsliterals : STRING_LIT\n            | INT_LIT\n            | DOUBLE_LITcondition : string_cond\n            | num_cond\n            | NOT OPENPAR string_cond CLOSEPAR\n            | NOT OPENPAR num_cond CLOSEPARstring_cond : string_exp LIKE string_exp\n            | string_exp NOT LIKE string_exp\n            | STRCMP OPENPAR string_exp COMMA string_exp CLOSEPARstring_exp : STRING_LIT\n             | COLUMN_NAMEnum_cond : num_exp comparison_op num_exp\n            | num_exp BETWEEN num_exp AND num_exp\n            | num_exp NOT NULL\n            | num_exp IS NULLnum_exp : num_exp ADD num_factor\n            |  num_factor SUBTRACT num_exp\n            | num_factornum_factor : num_factor ASTERISK num_term\n            | num_factor DIVIDE num_term\n            | num_factor DIVIDE_INT num_term\n            | num_factor MODULO num_term\n            | num_termnum_term : OPENPAR num_exp CLOSEPAR\n            | num_valnum_val : INT_LIT\n            | DOUBLE_LIT\n            | COLUMN_NAMEcomparison_op : GE\n            | GT\n            | LE\n            | LT\n            | NE\n            | EQUAL\n            | EQUAL_NULLempty : '
    
_lr_action_items = {'EQUAL_NULL':([33,34,35,37,39,42,43,58,87,93,97,98,99,100,101,],[-46,-48,-44,64,-49,-39,-47,-49,-45,-37,-43,-41,-40,-42,-38,]),'EQUAL':([28,33,34,35,37,39,42,43,58,82,87,93,97,98,99,100,101,],[50,-46,-48,-44,65,-49,-39,-47,-49,105,-45,-37,-43,-41,-40,-42,-38,]),'OPENPAR':([16,22,24,31,38,45,47,61,62,63,64,65,67,68,69,70,71,75,76,77,78,79,80,84,110,],[21,30,31,31,73,80,31,31,-51,-54,-56,-55,-50,-53,31,-52,31,31,31,31,31,31,31,106,31,]),'TABLE_NAME':([1,8,9,10,11,18,],[-57,-11,16,-12,17,25,]),'NULL':([66,72,],[92,95,]),'SUBTRACT':([33,34,35,39,42,43,58,87,97,98,99,100,],[-46,-48,-44,-49,79,-47,-49,-45,-43,-41,-40,-42,]),'SELECT':([0,],[7,]),'IS':([33,34,35,37,39,42,43,58,87,93,97,98,99,100,101,],[-46,-48,-44,66,-49,-39,-47,-49,-45,-37,-43,-41,-40,-42,-38,]),'INSERT':([0,],[1,]),'SET':([16,],[20,]),'SEMICOLON':([17,25,27,33,34,35,36,40,41,42,43,44,54,55,56,58,81,83,86,87,89,90,91,92,93,95,97,98,99,100,101,109,112,113,114,116,118,119,],[23,46,48,-46,-48,-44,-24,74,-25,-39,-47,-31,-23,-22,-21,-49,104,-17,108,-45,-32,-28,-33,-36,-37,-35,-43,-41,-40,-42,-38,-29,-26,-27,-18,-34,120,-30,]),'DOUBLE_LIT':([24,30,31,47,50,61,62,63,64,65,67,68,69,70,71,75,76,77,78,79,80,85,105,106,110,],[34,54,34,34,54,34,-51,-54,-56,-55,-50,-53,34,-52,34,34,34,34,34,34,34,54,54,54,34,]),'NE':([33,34,35,37,39,42,43,58,87,93,97,98,99,100,101,],[-46,-48,-44,63,-49,-39,-47,-49,-45,-37,-43,-41,-40,-42,-38,]),'LT':([33,34,35,37,39,42,43,58,87,93,97,98,99,100,101,],[-46,-48,-44,68,-49,-39,-47,-49,-45,-37,-43,-41,-40,-42,-38,]),'COMMA':([13,15,26,27,29,44,52,53,54,55,56,83,89,96,107,114,115,],[-15,19,-16,49,19,-31,-19,85,-23,-22,-21,-17,-32,111,-20,-18,85,]),'STRCMP':([24,47,80,],[38,38,38,]),'COLUMN_NAME':([7,19,20,21,24,31,47,49,60,61,62,63,64,65,67,68,69,70,71,73,75,76,77,78,79,80,88,110,111,],[13,26,28,13,39,58,39,82,89,58,-51,-54,-56,-55,-50,-53,58,-52,58,89,58,58,58,58,58,39,89,58,89,]),'GT':([33,34,35,37,39,42,43,58,87,93,97,98,99,100,101,],[-46,-48,-44,62,-49,-39,-47,-49,-45,-37,-43,-41,-40,-42,-38,]),'MODULO':([33,34,35,39,42,43,58,87,93,97,98,99,100,],[-46,-48,-44,-49,75,-47,-49,-45,75,-43,-41,-40,-42,]),'DIVIDE':([33,34,35,39,42,43,58,87,93,97,98,99,100,],[-46,-48,-44,-49,76,-47,-49,-45,76,-43,-41,-40,-42,]),'INTO':([1,],[8,]),'ASTERISK':([7,33,34,35,39,42,43,58,87,93,97,98,99,100,],[12,-46,-48,-44,-49,77,-47,-49,-45,77,-43,-41,-40,-42,]),'GE':([33,34,35,37,39,42,43,58,87,93,97,98,99,100,101,],[-46,-48,-44,67,-49,-39,-47,-49,-45,-37,-43,-41,-40,-42,-38,]),'LE':([33,34,35,37,39,42,43,58,87,93,97,98,99,100,101,],[-46,-48,-44,70,-49,-39,-47,-49,-45,-37,-43,-41,-40,-42,-38,]),'BETWEEN':([33,34,35,37,39,42,43,58,87,93,97,98,99,100,101,],[-46,-48,-44,71,-49,-39,-47,-49,-45,-37,-43,-41,-40,-42,-38,]),'WHERE':([17,25,],[24,47,]),'CLOSEPAR':([13,26,29,33,34,35,42,43,44,52,53,54,55,56,57,58,87,89,90,91,92,93,95,97,98,99,100,101,102,103,107,109,115,116,117,119,],[-15,-16,51,-46,-48,-44,-39,-47,-31,-19,86,-23,-22,-21,87,-49,-45,-32,-28,-33,-36,-37,-35,-43,-41,-40,-42,-38,112,113,-20,-29,118,-34,119,-30,]),'AND':([33,34,35,42,43,58,87,93,94,97,98,99,100,101,],[-46,-48,-44,-39,-47,-49,-45,-37,110,-43,-41,-40,-42,-38,]),'FROM':([5,12,13,14,15,26,],[11,-13,-15,18,-14,-16,]),'LIKE':([32,39,44,59,],[60,-32,-31,88,]),'ADD':([33,34,35,37,39,42,43,57,58,87,91,93,94,97,98,99,100,101,116,],[-46,-48,-44,69,-49,-39,-47,69,-49,-45,69,-37,69,-43,-41,-40,-42,-38,69,]),'INT_LIT':([24,30,31,47,50,61,62,63,64,65,67,68,69,70,71,75,76,77,78,79,80,85,105,106,110,],[43,55,43,43,55,43,-51,-54,-56,-55,-50,-53,43,-52,43,43,43,43,43,43,43,55,55,55,43,]),'DIVIDE_INT':([33,34,35,39,42,43,58,87,93,97,98,99,100,],[-46,-48,-44,-49,78,-47,-49,-45,78,-43,-41,-40,-42,]),'VALUES':([16,51,],[22,84,]),'STRING_LIT':([24,30,47,50,60,73,80,85,88,105,106,111,],[44,56,44,56,44,44,44,56,44,56,56,44,]),'NOT':([24,32,33,34,35,37,39,42,43,44,47,58,87,93,97,98,99,100,101,],[45,59,-46,-48,-44,72,-32,-39,-47,-31,45,-49,-45,-37,-43,-41,-40,-42,-38,]),'$end':([2,3,4,6,23,46,48,74,104,108,120,],[-2,-3,0,-1,-9,-7,-6,-10,-8,-4,-5,]),'DELETE':([0,],[5,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'condition':([24,47,],[40,81,]),'comparison_op':([37,],[61,]),'assignment_list':([20,],[27,]),'literals':([30,50,85,105,106,],[52,83,107,114,52,]),'string_exp':([24,47,60,73,80,88,111,],[32,32,90,96,32,109,117,]),'into_kw':([1,],[9,]),'num_term':([24,31,47,61,69,71,75,76,77,78,79,80,110,],[35,35,35,35,35,35,97,98,99,100,35,35,35,]),'num_cond':([24,47,80,],[41,41,103,]),'num_factor':([24,31,47,61,69,71,79,80,110,],[42,42,42,42,93,42,42,42,42,]),'string_cond':([24,47,80,],[36,36,102,]),'select_statement':([0,],[2,]),'delete_statement':([0,],[3,]),'columns':([7,],[14,]),'statement':([0,],[4,]),'num_exp':([24,31,47,61,71,79,80,110,],[37,57,37,91,94,101,37,116,]),'value_list':([30,106,],[53,115,]),'num_val':([24,31,47,61,69,71,75,76,77,78,79,80,110,],[33,33,33,33,33,33,33,33,33,33,33,33,33,]),'insert_statement':([0,],[6,]),'empty':([1,],[10,]),'column_name':([7,21,],[15,29,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> insert_statement','statement',1,'p_statement','select.py',139),
  ('statement -> select_statement','statement',1,'p_statement','select.py',140),
  ('statement -> delete_statement','statement',1,'p_statement','select.py',141),
  ('insert_statement -> INSERT into_kw TABLE_NAME VALUES OPENPAR value_list CLOSEPAR SEMICOLON','insert_statement',8,'p_insert_statement','select.py',144),
  ('insert_statement -> INSERT into_kw TABLE_NAME OPENPAR column_name CLOSEPAR VALUES OPENPAR value_list CLOSEPAR SEMICOLON','insert_statement',11,'p_insert_statement','select.py',145),
  ('insert_statement -> INSERT into_kw TABLE_NAME SET assignment_list SEMICOLON','insert_statement',6,'p_insert_statement','select.py',146),
  ('select_statement -> SELECT columns FROM TABLE_NAME SEMICOLON','select_statement',5,'p_select_statement','select.py',178),
  ('select_statement -> SELECT columns FROM TABLE_NAME WHERE condition SEMICOLON','select_statement',7,'p_select_statement','select.py',179),
  ('delete_statement -> DELETE FROM TABLE_NAME SEMICOLON','delete_statement',4,'p_delete_statement','select.py',220),
  ('delete_statement -> DELETE FROM TABLE_NAME WHERE condition SEMICOLON','delete_statement',6,'p_delete_statement','select.py',221),
  ('into_kw -> INTO','into_kw',1,'p_into_kw','select.py',252),
  ('into_kw -> empty','into_kw',1,'p_into_kw','select.py',253),
  ('columns -> ASTERISK','columns',1,'p_columns','select.py',268),
  ('columns -> column_name','columns',1,'p_columns','select.py',269),
  ('column_name -> COLUMN_NAME','column_name',1,'p_column_name','select.py',273),
  ('column_name -> column_name COMMA COLUMN_NAME','column_name',3,'p_column_name','select.py',274),
  ('assignment_list -> COLUMN_NAME EQUAL literals','assignment_list',3,'p_assignment_list','select.py',283),
  ('assignment_list -> assignment_list COMMA COLUMN_NAME EQUAL literals','assignment_list',5,'p_assignment_list','select.py',284),
  ('value_list -> literals','value_list',1,'p_value_list','select.py',294),
  ('value_list -> value_list COMMA literals','value_list',3,'p_value_list','select.py',295),
  ('literals -> STRING_LIT','literals',1,'p_literals','select.py',305),
  ('literals -> INT_LIT','literals',1,'p_literals','select.py',306),
  ('literals -> DOUBLE_LIT','literals',1,'p_literals','select.py',307),
  ('condition -> string_cond','condition',1,'p_condition','select.py',311),
  ('condition -> num_cond','condition',1,'p_condition','select.py',312),
  ('condition -> NOT OPENPAR string_cond CLOSEPAR','condition',4,'p_condition','select.py',313),
  ('condition -> NOT OPENPAR num_cond CLOSEPAR','condition',4,'p_condition','select.py',314),
  ('string_cond -> string_exp LIKE string_exp','string_cond',3,'p_string_cond','select.py',322),
  ('string_cond -> string_exp NOT LIKE string_exp','string_cond',4,'p_string_cond','select.py',323),
  ('string_cond -> STRCMP OPENPAR string_exp COMMA string_exp CLOSEPAR','string_cond',6,'p_string_cond','select.py',324),
  ('string_exp -> STRING_LIT','string_exp',1,'p_string_exp','select.py',332),
  ('string_exp -> COLUMN_NAME','string_exp',1,'p_string_exp','select.py',333),
  ('num_cond -> num_exp comparison_op num_exp','num_cond',3,'p_num_cond','select.py',338),
  ('num_cond -> num_exp BETWEEN num_exp AND num_exp','num_cond',5,'p_num_cond','select.py',339),
  ('num_cond -> num_exp NOT NULL','num_cond',3,'p_num_cond','select.py',340),
  ('num_cond -> num_exp IS NULL','num_cond',3,'p_num_cond','select.py',341),
  ('num_exp -> num_exp ADD num_factor','num_exp',3,'p_num_exp','select.py',396),
  ('num_exp -> num_factor SUBTRACT num_exp','num_exp',3,'p_num_exp','select.py',397),
  ('num_exp -> num_factor','num_exp',1,'p_num_exp','select.py',398),
  ('num_factor -> num_factor ASTERISK num_term','num_factor',3,'p_num_factor','select.py',412),
  ('num_factor -> num_factor DIVIDE num_term','num_factor',3,'p_num_factor','select.py',413),
  ('num_factor -> num_factor DIVIDE_INT num_term','num_factor',3,'p_num_factor','select.py',414),
  ('num_factor -> num_factor MODULO num_term','num_factor',3,'p_num_factor','select.py',415),
  ('num_factor -> num_term','num_factor',1,'p_num_factor','select.py',416),
  ('num_term -> OPENPAR num_exp CLOSEPAR','num_term',3,'p_num_term','select.py',433),
  ('num_term -> num_val','num_term',1,'p_num_term','select.py',434),
  ('num_val -> INT_LIT','num_val',1,'p_num_val','select.py',444),
  ('num_val -> DOUBLE_LIT','num_val',1,'p_num_val','select.py',445),
  ('num_val -> COLUMN_NAME','num_val',1,'p_num_val','select.py',446),
  ('comparison_op -> GE','comparison_op',1,'p_comparison_op','select.py',455),
  ('comparison_op -> GT','comparison_op',1,'p_comparison_op','select.py',456),
  ('comparison_op -> LE','comparison_op',1,'p_comparison_op','select.py',457),
  ('comparison_op -> LT','comparison_op',1,'p_comparison_op','select.py',458),
  ('comparison_op -> NE','comparison_op',1,'p_comparison_op','select.py',459),
  ('comparison_op -> EQUAL','comparison_op',1,'p_comparison_op','select.py',460),
  ('comparison_op -> EQUAL_NULL','comparison_op',1,'p_comparison_op','select.py',461),
  ('empty -> <empty>','empty',0,'p_empty','select.py',466),
]
