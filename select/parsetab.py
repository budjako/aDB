
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftADDSUBTRACTleftASTERISKDIVIDEDIVIDE_INTINSERT INTO VALUES SET SELECT DELETE INT_LIT DOUBLE_LIT STRING_LIT ADD SUBTRACT DIVIDE DIVIDE_INT MODULO EQUAL EQUAL_NULL GT GE LT LE NE NOT COLUMN_NAME TABLE_NAME FILTER_ROWS ASTERISK COMMA SEMICOLON OPENPAR CLOSEPAR FROM WHERE LIKE STRCMP IS NULL BETWEEN ANDstatement : insert_statement\n            | select_statement\n            | delete_statementinsert_statement : INSERT into_kw TABLE_NAME VALUES OPENPAR value_list CLOSEPAR SEMICOLON\n            | INSERT into_kw TABLE_NAME OPENPAR column_name CLOSEPAR VALUES OPENPAR value_list CLOSEPAR SEMICOLON\n            | INSERT into_kw TABLE_NAME SET assignment_list SEMICOLONselect_statement : SELECT filter_rows_op columns FROM TABLE_NAME SEMICOLON\n            | SELECT filter_rows_op columns FROM TABLE_NAME WHERE condition SEMICOLONdelete_statement : DELETE FROM TABLE_NAME SEMICOLON\n            | DELETE FROM TABLE_NAME WHERE condition SEMICOLONinto_kw : INTO\n            | emptyfilter_rows_op : FILTER_ROWS\n            | emptycolumns : ASTERISK\n            | column_namecolumn_name : COLUMN_NAME\n            | column_name COMMA COLUMN_NAMEassignment_list : COLUMN_NAME EQUAL literals\n            | assignment_list COMMA COLUMN_NAME EQUAL literalsvalue_list : literals\n            | value_list COMMA literalsliterals : STRING_LIT\n            | INT_LIT\n            | DOUBLE_LITcondition : string_cond\n            | num_cond\n            | NOT OPENPAR string_cond CLOSEPAR\n            | NOT OPENPAR num_cond CLOSEPARstring_cond : string_exp LIKE string_exp\n            | string_exp NOT LIKE string_exp\n            | STRCMP OPENPAR string_exp COMMA string_exp CLOSEPARstring_exp : STRING_LITnum_cond : num_exp comparison_op num_exp\n            | num_exp BETWEEN num_exp AND num_exp\n            | num_exp NOT NULL\n            | num_exp IS NULLnum_exp : num_exp ADD num_factor\n            |  num_factor SUBTRACT num_exp\n            | num_factornum_factor : num_factor ASTERISK num_term\n            | num_factor DIVIDE num_term\n            | num_factor DIVIDE_INT num_term\n            | num_factor MODULO num_term\n            | num_termnum_term : OPENPAR num_exp CLOSEPAR\n            | num_valnum_val : INT_LIT\n            | DOUBLE_LIT\n            | COLUMN_NAMEcomparison_op : GE\n            | GT\n            | LE\n            | LT\n            | NE\n            | EQUAL\n            | EQUAL_NULLempty : '
    
_lr_action_items = {'INTO':([1,],[10,]),'COLUMN_NAME':([4,12,13,14,21,23,25,26,35,49,59,60,61,62,63,64,65,66,67,69,75,76,77,78,79,80,81,109,],[-58,-13,-14,17,29,17,34,47,34,83,34,-53,-52,-55,-56,34,-51,-54,-57,34,34,34,34,34,34,34,34,34,]),'NE':([33,34,36,37,42,45,46,88,90,99,100,101,102,103,],[-48,-50,62,-49,-40,-47,-45,-46,-38,-39,-42,-43,-41,-44,]),'SELECT':([0,],[4,]),'INSERT':([0,],[1,]),'INT_LIT':([25,30,35,51,59,60,61,62,63,64,65,66,67,69,75,76,77,78,79,80,81,85,105,108,109,],[33,53,33,53,33,-53,-52,-55,-56,33,-51,-54,-57,33,33,33,33,33,33,33,33,53,53,53,33,]),'GT':([33,34,36,37,42,45,46,88,90,99,100,101,102,103,],[-48,-50,61,-49,-40,-47,-45,-46,-38,-39,-42,-43,-41,-44,]),'SET':([15,],[21,]),'NULL':([68,70,],[91,93,]),'OPENPAR':([15,22,25,35,39,41,59,60,61,62,63,64,65,66,67,69,75,76,77,78,79,80,81,87,109,],[23,30,35,35,72,75,35,-53,-52,-55,-56,35,-51,-54,-57,35,35,35,35,35,35,35,35,108,35,]),'LE':([33,34,36,37,42,45,46,88,90,99,100,101,102,103,],[-48,-50,60,-49,-40,-47,-45,-46,-38,-39,-42,-43,-41,-44,]),'$end':([2,5,6,7,24,50,71,82,107,114,121,],[-2,-1,-3,0,-9,-6,-10,-7,-4,-8,-5,]),'LT':([33,34,36,37,42,45,46,88,90,99,100,101,102,103,],[-48,-50,66,-49,-40,-47,-45,-46,-38,-39,-42,-43,-41,-44,]),'STRCMP':([25,75,81,],[39,39,39,]),'SUBTRACT':([33,34,37,42,45,46,88,100,101,102,103,],[-48,-50,-49,76,-47,-45,-46,-42,-43,-41,-44,]),'EQUAL_NULL':([33,34,36,37,42,45,46,88,90,99,100,101,102,103,],[-48,-50,67,-49,-40,-47,-45,-46,-38,-39,-42,-43,-41,-44,]),'NOT':([25,33,34,36,37,40,42,44,45,46,81,88,90,99,100,101,102,103,],[41,-48,-50,68,-49,73,-40,-33,-47,-45,41,-46,-38,-39,-42,-43,-41,-44,]),'DOUBLE_LIT':([25,30,35,51,59,60,61,62,63,64,65,66,67,69,75,76,77,78,79,80,81,85,105,108,109,],[37,55,37,55,37,-53,-52,-55,-56,37,-51,-54,-57,37,37,37,37,37,37,37,37,55,55,55,37,]),'ASTERISK':([4,12,13,14,33,34,37,42,45,46,88,90,100,101,102,103,],[-58,-13,-14,19,-48,-50,-49,79,-47,-45,-46,79,-42,-43,-41,-44,]),'FILTER_ROWS':([4,],[12,]),'IS':([33,34,36,37,42,45,46,88,90,99,100,101,102,103,],[-48,-50,70,-49,-40,-47,-45,-46,-38,-39,-42,-43,-41,-44,]),'VALUES':([15,57,],[22,87,]),'TABLE_NAME':([1,8,9,10,11,27,],[-58,-12,15,-11,16,48,]),'BETWEEN':([33,34,36,37,42,45,46,88,90,99,100,101,102,103,],[-48,-50,59,-49,-40,-47,-45,-46,-38,-39,-42,-43,-41,-44,]),'DIVIDE':([33,34,37,42,45,46,88,90,100,101,102,103,],[-48,-50,-49,77,-47,-45,-46,77,-42,-43,-41,-44,]),'DELETE':([0,],[3,]),'FROM':([3,17,18,19,20,47,],[11,-17,-16,-15,27,-18,]),'SEMICOLON':([16,28,32,33,34,37,38,42,43,44,45,46,48,53,55,56,84,86,88,90,91,92,93,96,99,100,101,102,103,104,111,112,113,115,117,119,120,],[24,50,-26,-48,-50,-49,71,-40,-27,-33,-47,-45,82,-24,-25,-23,-19,107,-46,-38,-36,-34,-37,-30,-39,-42,-43,-41,-44,114,-31,-28,-29,-20,-35,121,-32,]),'WHERE':([16,48,],[25,81,]),'ADD':([33,34,36,37,42,45,46,58,88,89,90,92,99,100,101,102,103,117,],[-48,-50,64,-49,-40,-47,-45,64,-46,64,-38,64,-39,-42,-43,-41,-44,64,]),'EQUAL':([29,33,34,36,37,42,45,46,83,88,90,99,100,101,102,103,],[51,-48,-50,63,-49,-40,-47,-45,105,-46,-38,-39,-42,-43,-41,-44,]),'GE':([33,34,36,37,42,45,46,88,90,99,100,101,102,103,],[-48,-50,65,-49,-40,-47,-45,-46,-38,-39,-42,-43,-41,-44,]),'COMMA':([17,18,28,31,44,47,52,53,54,55,56,84,94,106,115,116,],[-17,26,49,26,-33,-18,85,-24,-21,-25,-23,-19,110,-22,-20,85,]),'STRING_LIT':([25,30,51,72,74,75,81,85,95,105,108,110,],[44,56,56,44,44,44,44,56,44,56,56,44,]),'MODULO':([33,34,37,42,45,46,88,90,100,101,102,103,],[-48,-50,-49,80,-47,-45,-46,80,-42,-43,-41,-44,]),'DIVIDE_INT':([33,34,37,42,45,46,88,90,100,101,102,103,],[-48,-50,-49,78,-47,-45,-46,78,-42,-43,-41,-44,]),'CLOSEPAR':([17,31,33,34,37,42,44,45,46,47,52,53,54,55,56,58,88,90,91,92,93,96,97,98,99,100,101,102,103,106,111,116,117,118,120,],[-17,57,-48,-50,-49,-40,-33,-47,-45,-18,86,-24,-21,-25,-23,88,-46,-38,-36,-34,-37,-30,112,113,-39,-42,-43,-41,-44,-22,-31,119,-35,120,-32,]),'LIKE':([40,44,73,],[74,-33,95,]),'AND':([33,34,37,42,45,46,88,89,90,99,100,101,102,103,],[-48,-50,-49,-40,-47,-45,-46,109,-38,-39,-42,-43,-41,-44,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'assignment_list':([21,],[28,]),'num_factor':([25,35,59,64,69,75,76,81,109,],[42,42,42,90,42,42,42,42,42,]),'value_list':([30,108,],[52,116,]),'literals':([30,51,85,105,108,],[54,84,106,115,54,]),'string_cond':([25,75,81,],[32,97,32,]),'num_cond':([25,75,81,],[43,98,43,]),'select_statement':([0,],[2,]),'empty':([1,4,],[8,13,]),'num_val':([25,35,59,64,69,75,76,77,78,79,80,81,109,],[45,45,45,45,45,45,45,45,45,45,45,45,45,]),'condition':([25,81,],[38,104,]),'column_name':([14,23,],[18,31,]),'string_exp':([25,72,74,75,81,95,110,],[40,94,96,40,40,111,118,]),'num_term':([25,35,59,64,69,75,76,77,78,79,80,81,109,],[46,46,46,46,46,46,46,100,101,102,103,46,46,]),'delete_statement':([0,],[6,]),'into_kw':([1,],[9,]),'filter_rows_op':([4,],[14,]),'insert_statement':([0,],[5,]),'comparison_op':([36,],[69,]),'columns':([14,],[20,]),'statement':([0,],[7,]),'num_exp':([25,35,59,69,75,76,81,109,],[36,58,89,92,36,99,36,117,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> insert_statement','statement',1,'p_statement','select.py',123),
  ('statement -> select_statement','statement',1,'p_statement','select.py',124),
  ('statement -> delete_statement','statement',1,'p_statement','select.py',125),
  ('insert_statement -> INSERT into_kw TABLE_NAME VALUES OPENPAR value_list CLOSEPAR SEMICOLON','insert_statement',8,'p_insert_statement','select.py',128),
  ('insert_statement -> INSERT into_kw TABLE_NAME OPENPAR column_name CLOSEPAR VALUES OPENPAR value_list CLOSEPAR SEMICOLON','insert_statement',11,'p_insert_statement','select.py',129),
  ('insert_statement -> INSERT into_kw TABLE_NAME SET assignment_list SEMICOLON','insert_statement',6,'p_insert_statement','select.py',130),
  ('select_statement -> SELECT filter_rows_op columns FROM TABLE_NAME SEMICOLON','select_statement',6,'p_select_statement','select.py',141),
  ('select_statement -> SELECT filter_rows_op columns FROM TABLE_NAME WHERE condition SEMICOLON','select_statement',8,'p_select_statement','select.py',142),
  ('delete_statement -> DELETE FROM TABLE_NAME SEMICOLON','delete_statement',4,'p_delete_statement','select.py',153),
  ('delete_statement -> DELETE FROM TABLE_NAME WHERE condition SEMICOLON','delete_statement',6,'p_delete_statement','select.py',154),
  ('into_kw -> INTO','into_kw',1,'p_into_kw','select.py',164),
  ('into_kw -> empty','into_kw',1,'p_into_kw','select.py',165),
  ('filter_rows_op -> FILTER_ROWS','filter_rows_op',1,'p_filter_rows_op','select.py',172),
  ('filter_rows_op -> empty','filter_rows_op',1,'p_filter_rows_op','select.py',173),
  ('columns -> ASTERISK','columns',1,'p_columns','select.py',180),
  ('columns -> column_name','columns',1,'p_columns','select.py',181),
  ('column_name -> COLUMN_NAME','column_name',1,'p_column_name','select.py',185),
  ('column_name -> column_name COMMA COLUMN_NAME','column_name',3,'p_column_name','select.py',186),
  ('assignment_list -> COLUMN_NAME EQUAL literals','assignment_list',3,'p_assignment_list','select.py',193),
  ('assignment_list -> assignment_list COMMA COLUMN_NAME EQUAL literals','assignment_list',5,'p_assignment_list','select.py',194),
  ('value_list -> literals','value_list',1,'p_value_list','select.py',202),
  ('value_list -> value_list COMMA literals','value_list',3,'p_value_list','select.py',203),
  ('literals -> STRING_LIT','literals',1,'p_literals','select.py',211),
  ('literals -> INT_LIT','literals',1,'p_literals','select.py',212),
  ('literals -> DOUBLE_LIT','literals',1,'p_literals','select.py',213),
  ('condition -> string_cond','condition',1,'p_condition','select.py',217),
  ('condition -> num_cond','condition',1,'p_condition','select.py',218),
  ('condition -> NOT OPENPAR string_cond CLOSEPAR','condition',4,'p_condition','select.py',219),
  ('condition -> NOT OPENPAR num_cond CLOSEPAR','condition',4,'p_condition','select.py',220),
  ('string_cond -> string_exp LIKE string_exp','string_cond',3,'p_string_cond','select.py',228),
  ('string_cond -> string_exp NOT LIKE string_exp','string_cond',4,'p_string_cond','select.py',229),
  ('string_cond -> STRCMP OPENPAR string_exp COMMA string_exp CLOSEPAR','string_cond',6,'p_string_cond','select.py',230),
  ('string_exp -> STRING_LIT','string_exp',1,'p_string_exp','select.py',238),
  ('num_cond -> num_exp comparison_op num_exp','num_cond',3,'p_num_cond','select.py',244),
  ('num_cond -> num_exp BETWEEN num_exp AND num_exp','num_cond',5,'p_num_cond','select.py',245),
  ('num_cond -> num_exp NOT NULL','num_cond',3,'p_num_cond','select.py',246),
  ('num_cond -> num_exp IS NULL','num_cond',3,'p_num_cond','select.py',247),
  ('num_exp -> num_exp ADD num_factor','num_exp',3,'p_num_exp','select.py',255),
  ('num_exp -> num_factor SUBTRACT num_exp','num_exp',3,'p_num_exp','select.py',256),
  ('num_exp -> num_factor','num_exp',1,'p_num_exp','select.py',257),
  ('num_factor -> num_factor ASTERISK num_term','num_factor',3,'p_num_factor','select.py',275),
  ('num_factor -> num_factor DIVIDE num_term','num_factor',3,'p_num_factor','select.py',276),
  ('num_factor -> num_factor DIVIDE_INT num_term','num_factor',3,'p_num_factor','select.py',277),
  ('num_factor -> num_factor MODULO num_term','num_factor',3,'p_num_factor','select.py',278),
  ('num_factor -> num_term','num_factor',1,'p_num_factor','select.py',279),
  ('num_term -> OPENPAR num_exp CLOSEPAR','num_term',3,'p_num_term','select.py',293),
  ('num_term -> num_val','num_term',1,'p_num_term','select.py',294),
  ('num_val -> INT_LIT','num_val',1,'p_num_val','select.py',302),
  ('num_val -> DOUBLE_LIT','num_val',1,'p_num_val','select.py',303),
  ('num_val -> COLUMN_NAME','num_val',1,'p_num_val','select.py',304),
  ('comparison_op -> GE','comparison_op',1,'p_comparison_op','select.py',314),
  ('comparison_op -> GT','comparison_op',1,'p_comparison_op','select.py',315),
  ('comparison_op -> LE','comparison_op',1,'p_comparison_op','select.py',316),
  ('comparison_op -> LT','comparison_op',1,'p_comparison_op','select.py',317),
  ('comparison_op -> NE','comparison_op',1,'p_comparison_op','select.py',318),
  ('comparison_op -> EQUAL','comparison_op',1,'p_comparison_op','select.py',319),
  ('comparison_op -> EQUAL_NULL','comparison_op',1,'p_comparison_op','select.py',320),
  ('empty -> <empty>','empty',0,'p_empty','select.py',324),
]
