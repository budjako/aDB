
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'leftADDSUBTRACTleftMULTIPLYDIVIDEDIVIDE_INTINSERT INTO VALUES SET SELECT DELETE INT_LIT DOUBLE_LIT STRING_LIT DATE_LIT ADD SUBTRACT MULTIPLY DIVIDE DIVIDE_INT MODULO EQUAL EQUAL_NULL GT GE LT LE NE NOT ADDDATE CURDATE CURRENT_DATE DATEDIFF DAY DAYNAME DAYOFMONTH DAYOFWEEK DAYOFYEAR LAST_DAY MAKEDATE MONTH MONTHNAME SUBDATE INTERVAL YEAR COLUMN_NAME TABLE_NAME FILTER_ROWS ASTERISK DATE_UNIT COMMA SEMICOLON OPENPAR CLOSEPAR FROM WHERE LIKE STRCMP IS NULL BETWEEN ANDstatement : insert_statement\n            | select_statement\n            | delete_statementinsert_statement : INSERT into_kw TABLE_NAME VALUES OPENPAR value_list CLOSEPAR SEMICOLON\n            | INSERT into_kw TABLE_NAME OPENPAR column_name CLOSEPAR VALUES OPENPAR value_list CLOSEPAR SEMICOLON\n            | INSERT into_kw TABLE_NAME SET assignment_list SEMICOLONselect_statement : SELECT filter_rows_op columns FROM TABLE_NAME SEMICOLON\n            | SELECT filter_rows_op columns FROM TABLE_NAME WHERE condition SEMICOLONdelete_statement : DELETE FROM TABLE_NAME SEMICOLON\n            | DELETE FROM TABLE_NAME WHERE condition SEMICOLONinto_kw : INTO\n            | emptyfilter_rows_op : FILTER_ROWS\n            | emptycolumns : ASTERISK\n            | column_namecolumn_name : COLUMN_NAME\n            | column_name COMMA COLUMN_NAMEassignment_list : COLUMN_NAME EQUAL literals\n            | assignment_list COMMA COLUMN_NAME EQUAL literalsvalue_list : literals\n            | value_list COMMA literalsliterals : STRING_LIT\n            | INT_LIT\n            | DOUBLE_LIT\n            | DATE_LITcondition : string_cond\n            | num_cond\n            | date_cond\n            | NOT OPENPAR string_cond CLOSEPAR\n            | NOT OPENPAR num_cond CLOSEPAR\n            | NOT OPENPAR date_cond CLOSEPARstring_cond : string_exp LIKE string_exp\n            | string_exp NOT LIKE string_exp\n            | STRCMP OPENPAR string_exp COMMA string_exp CLOSEPARstring_exp : STRING_LITnum_cond : num_exp comparison_op num_exp\n            | num_exp BETWEEN num_exp AND num_exp\n            | num_exp NOT NULL\n            | num_exp IS NULLnum_exp : num_exp ADD num_factor\n            | num_exp SUBTRACT num_factor\n            | num_factornum_factor : num_factor MULTIPLY num_term\n            | num_factor DIVIDE num_term\n            | num_factor DIVIDE_INT num_term\n            | num_factor MODULO num_term\n            | num_termnum_term : OPENPAR num_val CLOSEPAR\n            | num_valnum_val : INT_LIT\n            | DOUBLE_LIT\n            | COLUMN_NAMEdate_cond : date_exp comparison_op date_exp\n            | date_expdate_exp : date_function\n            | DATE_LITdate_function : ADDDATE OPENPAR date_exp COMMA date_exp CLOSEPAR\n             | CURDATE OPENPAR CLOSEPAR\n             | CURRENT_DATE OPENPAR CLOSEPAR\n             | CURRENT_DATE\n             | DATEDIFF OPENPAR date_exp COMMA date_exp CLOSEPAR\n             | DAY OPENPAR date_exp CLOSEPAR\n             | DAYNAME OPENPAR date_exp CLOSEPAR\n             | DAYOFMONTH OPENPAR date_exp CLOSEPAR\n             | DAYOFWEEK OPENPAR date_exp CLOSEPAR\n             | DAYOFYEAR OPENPAR date_exp CLOSEPAR\n             | LAST_DAY OPENPAR date_exp CLOSEPAR\n             | MAKEDATE OPENPAR num_exp COMMA num_exp CLOSEPAR\n             | MONTH OPENPAR date_exp CLOSEPAR\n             | MONTHNAME OPENPAR date_exp CLOSEPAR\n             | SUBDATE OPENPAR date_exp COMMA INTERVAL num_exp DATE_UNIT CLOSEPAR\n             | YEAR OPENPAR date_exp CLOSEPARcomparison_op : GE\n            | GT\n            | LE\n            | LT\n            | NE\n            | EQUAL\n            | EQUAL_NULLempty : '
    
_lr_action_items = {'CURRENT_DATE':([26,68,81,82,83,84,85,86,87,88,89,94,95,98,99,100,101,103,105,106,116,117,118,166,181,],[34,34,34,-77,-78,-75,-80,-76,-79,34,-74,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'DAYNAME':([26,68,81,82,83,84,85,86,87,88,89,94,95,98,99,100,101,103,105,106,116,117,118,166,181,],[35,35,35,-77,-78,-75,-80,-76,-79,35,-74,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'SET':([19,],[23,]),'BETWEEN':([37,38,45,47,49,59,60,128,129,130,131,134,146,151,],[-43,-53,-48,-52,-51,110,-50,-47,-44,-46,-45,-49,-42,-41,]),'COLUMN_NAME':([4,8,9,10,21,23,25,26,41,68,70,82,83,84,85,86,87,89,90,91,92,93,99,107,110,111,112,115,176,178,186,],[-81,16,-14,-13,28,31,16,38,38,38,120,-77,-78,-75,-80,-76,-79,-74,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'COMMA':([15,16,28,30,33,34,37,38,45,47,49,53,56,60,65,73,74,75,76,77,78,121,125,128,129,130,131,134,135,141,143,145,146,151,154,157,161,163,164,165,170,171,172,174,179,180,182,183,191,194,195,198,],[21,-17,-18,70,21,-61,-43,-53,-48,-52,-51,-57,-56,-50,-36,-25,-23,-24,-21,-26,123,-19,-60,-47,-44,-46,-45,-49,166,-59,173,175,-42,-41,178,181,-22,-64,-68,-71,-73,-63,-65,-67,-66,-70,-20,123,-62,-69,-58,-72,]),'MULTIPLY':([37,38,45,47,49,60,128,129,130,131,134,146,151,],[91,-53,-48,-52,-51,-50,-47,-44,-46,-45,-49,91,91,]),'LAST_DAY':([26,68,81,82,83,84,85,86,87,88,89,94,95,98,99,100,101,103,105,106,116,117,118,166,181,],[39,39,39,-77,-78,-75,-80,-76,-79,39,-74,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'MONTHNAME':([26,68,81,82,83,84,85,86,87,88,89,94,95,98,99,100,101,103,105,106,116,117,118,166,181,],[40,40,40,-77,-78,-75,-80,-76,-79,40,-74,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'OPENPAR':([19,24,26,34,35,39,40,43,44,46,48,51,52,54,55,57,62,63,64,66,68,82,83,84,85,86,87,89,90,91,92,93,99,107,110,111,112,115,124,176,178,186,],[25,32,41,80,81,94,95,98,99,100,101,102,103,104,105,106,115,116,117,118,41,-77,-78,-75,-80,-76,-79,-74,41,41,41,41,41,41,41,41,41,41,162,41,41,41,]),'ASTERISK':([4,8,9,10,],[-81,18,-14,-13,]),'FILTER_ROWS':([4,],[10,]),'CLOSEPAR':([16,28,33,34,36,37,38,45,47,49,53,56,60,65,73,74,75,76,77,78,80,96,102,125,126,127,128,129,130,131,132,133,134,136,137,138,139,140,141,142,144,146,147,148,150,151,152,155,156,161,163,164,165,170,171,172,174,177,179,180,183,184,185,187,188,189,191,192,194,195,197,198,],[-17,-18,79,-61,-55,-43,-53,-48,-52,-51,-57,-56,-50,-36,-25,-23,-24,-21,-26,122,125,134,141,-60,163,-54,-47,-44,-46,-45,164,165,-49,167,168,169,170,171,-59,172,174,-42,-39,-40,-37,-41,-33,179,180,-22,-64,-68,-71,-73,-63,-65,-67,-34,-66,-70,190,191,192,-38,194,195,-62,-35,-69,-58,198,-72,]),'DATEDIFF':([26,68,81,82,83,84,85,86,87,88,89,94,95,98,99,100,101,103,105,106,116,117,118,166,181,],[43,43,43,-77,-78,-75,-80,-76,-79,43,-74,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'LIKE':([61,65,114,],[113,-36,153,]),'SUBTRACT':([37,38,45,47,49,59,60,128,129,130,131,134,146,149,150,151,154,187,188,193,],[-43,-53,-48,-52,-51,107,-50,-47,-44,-46,-45,-49,-42,107,107,-41,107,107,107,107,]),'NOT':([26,37,38,45,47,49,59,60,61,65,68,128,129,130,131,134,146,151,],[44,-43,-53,-48,-52,-51,108,-50,114,-36,44,-47,-44,-46,-45,-49,-42,-41,]),'INTERVAL':([175,],[186,]),'EQUAL_NULL':([34,36,37,38,45,47,49,53,56,59,60,125,128,129,130,131,134,141,146,151,163,164,165,170,171,172,174,179,180,191,194,195,198,],[-61,85,-43,-53,-48,-52,-51,-57,-56,85,-50,-60,-47,-44,-46,-45,-49,-59,-42,-41,-64,-68,-71,-73,-63,-65,-67,-66,-70,-62,-69,-58,-72,]),'YEAR':([26,68,81,82,83,84,85,86,87,88,89,94,95,98,99,100,101,103,105,106,116,117,118,166,181,],[46,46,46,-77,-78,-75,-80,-76,-79,46,-74,46,46,46,46,46,46,46,46,46,46,46,46,46,46,]),'STRING_LIT':([26,32,68,72,99,104,113,123,153,159,162,173,],[65,74,65,74,65,65,65,74,65,74,74,65,]),'DAY':([26,68,81,82,83,84,85,86,87,88,89,94,95,98,99,100,101,103,105,106,116,117,118,166,181,],[48,48,48,-77,-78,-75,-80,-76,-79,48,-74,48,48,48,48,48,48,48,48,48,48,48,48,48,48,]),'SEMICOLON':([20,29,30,34,36,37,38,42,45,47,49,50,53,56,58,60,65,67,73,74,75,77,119,121,122,125,127,128,129,130,131,134,141,146,147,148,150,151,152,163,164,165,167,168,169,170,171,172,174,177,179,180,182,187,190,191,192,194,195,198,],[27,69,71,-61,-55,-43,-53,97,-48,-52,-51,-28,-57,-56,-29,-50,-36,-27,-25,-23,-24,-26,158,-19,160,-60,-54,-47,-44,-46,-45,-49,-59,-42,-39,-40,-37,-41,-33,-64,-68,-71,-31,-32,-30,-73,-63,-65,-67,-34,-66,-70,-20,-38,196,-62,-35,-69,-58,-72,]),'SELECT':([0,],[4,]),'INT_LIT':([26,32,41,68,72,82,83,84,85,86,87,89,90,91,92,93,99,107,110,111,112,115,123,159,162,176,178,186,],[49,75,49,49,75,-77,-78,-75,-80,-76,-79,-74,49,49,49,49,49,49,49,49,49,49,75,75,75,49,49,49,]),'$end':([1,2,3,7,27,69,71,97,158,160,196,],[-3,0,-2,-1,-9,-7,-6,-10,-8,-4,-5,]),'CURDATE':([26,68,81,82,83,84,85,86,87,88,89,94,95,98,99,100,101,103,105,106,116,117,118,166,181,],[51,51,51,-77,-78,-75,-80,-76,-79,51,-74,51,51,51,51,51,51,51,51,51,51,51,51,51,51,]),'SUBDATE':([26,68,81,82,83,84,85,86,87,88,89,94,95,98,99,100,101,103,105,106,116,117,118,166,181,],[57,57,57,-77,-78,-75,-80,-76,-79,57,-74,57,57,57,57,57,57,57,57,57,57,57,57,57,57,]),'DELETE':([0,],[6,]),'DATE_LIT':([26,32,68,72,81,82,83,84,85,86,87,88,89,94,95,98,99,100,101,103,105,106,116,117,118,123,159,162,166,181,],[53,77,53,77,53,-77,-78,-75,-80,-76,-79,53,-74,53,53,53,53,53,53,53,53,53,53,53,53,77,77,77,53,53,]),'STRCMP':([26,68,99,],[54,54,54,]),'TABLE_NAME':([5,11,12,13,14,22,],[-81,-11,-12,19,20,29,]),'DAYOFYEAR':([26,68,81,82,83,84,85,86,87,88,89,94,95,98,99,100,101,103,105,106,116,117,118,166,181,],[55,55,55,-77,-78,-75,-80,-76,-79,55,-74,55,55,55,55,55,55,55,55,55,55,55,55,55,55,]),'EQUAL':([31,34,36,37,38,45,47,49,53,56,59,60,120,125,128,129,130,131,134,141,146,151,163,164,165,170,171,172,174,179,180,191,194,195,198,],[72,-61,87,-43,-53,-48,-52,-51,-57,-56,87,-50,159,-60,-47,-44,-46,-45,-49,-59,-42,-41,-64,-68,-71,-73,-63,-65,-67,-66,-70,-62,-69,-58,-72,]),'FROM':([6,15,16,17,18,28,],[14,-16,-17,22,-15,-18,]),'NULL':([108,109,],[147,148,]),'ADD':([37,38,45,47,49,59,60,128,129,130,131,134,146,149,150,151,154,187,188,193,],[-43,-53,-48,-52,-51,112,-50,-47,-44,-46,-45,-49,-42,112,112,-41,112,112,112,112,]),'LT':([34,36,37,38,45,47,49,53,56,59,60,125,128,129,130,131,134,141,146,151,163,164,165,170,171,172,174,179,180,191,194,195,198,],[-61,82,-43,-53,-48,-52,-51,-57,-56,82,-50,-60,-47,-44,-46,-45,-49,-59,-42,-41,-64,-68,-71,-73,-63,-65,-67,-66,-70,-62,-69,-58,-72,]),'WHERE':([20,29,],[26,68,]),'GT':([34,36,37,38,45,47,49,53,56,59,60,125,128,129,130,131,134,141,146,151,163,164,165,170,171,172,174,179,180,191,194,195,198,],[-61,84,-43,-53,-48,-52,-51,-57,-56,84,-50,-60,-47,-44,-46,-45,-49,-59,-42,-41,-64,-68,-71,-73,-63,-65,-67,-66,-70,-62,-69,-58,-72,]),'DIVIDE':([37,38,45,47,49,60,128,129,130,131,134,146,151,],[93,-53,-48,-52,-51,-50,-47,-44,-46,-45,-49,93,93,]),'GE':([34,36,37,38,45,47,49,53,56,59,60,125,128,129,130,131,134,141,146,151,163,164,165,170,171,172,174,179,180,191,194,195,198,],[-61,89,-43,-53,-48,-52,-51,-57,-56,89,-50,-60,-47,-44,-46,-45,-49,-59,-42,-41,-64,-68,-71,-73,-63,-65,-67,-66,-70,-62,-69,-58,-72,]),'DIVIDE_INT':([37,38,45,47,49,60,128,129,130,131,134,146,151,],[92,-53,-48,-52,-51,-50,-47,-44,-46,-45,-49,92,92,]),'LE':([34,36,37,38,45,47,49,53,56,59,60,125,128,129,130,131,134,141,146,151,163,164,165,170,171,172,174,179,180,191,194,195,198,],[-61,86,-43,-53,-48,-52,-51,-57,-56,86,-50,-60,-47,-44,-46,-45,-49,-59,-42,-41,-64,-68,-71,-73,-63,-65,-67,-66,-70,-62,-69,-58,-72,]),'NE':([34,36,37,38,45,47,49,53,56,59,60,125,128,129,130,131,134,141,146,151,163,164,165,170,171,172,174,179,180,191,194,195,198,],[-61,83,-43,-53,-48,-52,-51,-57,-56,83,-50,-60,-47,-44,-46,-45,-49,-59,-42,-41,-64,-68,-71,-73,-63,-65,-67,-66,-70,-62,-69,-58,-72,]),'DAYOFMONTH':([26,68,81,82,83,84,85,86,87,88,89,94,95,98,99,100,101,103,105,106,116,117,118,166,181,],[52,52,52,-77,-78,-75,-80,-76,-79,52,-74,52,52,52,52,52,52,52,52,52,52,52,52,52,52,]),'IS':([37,38,45,47,49,59,60,128,129,130,131,134,146,151,],[-43,-53,-48,-52,-51,109,-50,-47,-44,-46,-45,-49,-42,-41,]),'MAKEDATE':([26,68,81,82,83,84,85,86,87,88,89,94,95,98,99,100,101,103,105,106,116,117,118,166,181,],[62,62,62,-77,-78,-75,-80,-76,-79,62,-74,62,62,62,62,62,62,62,62,62,62,62,62,62,62,]),'DOUBLE_LIT':([26,32,41,68,72,82,83,84,85,86,87,89,90,91,92,93,99,107,110,111,112,115,123,159,162,176,178,186,],[47,73,47,47,73,-77,-78,-75,-80,-76,-79,-74,47,47,47,47,47,47,47,47,47,47,73,73,73,47,47,47,]),'INSERT':([0,],[5,]),'INTO':([5,],[11,]),'DAYOFWEEK':([26,68,81,82,83,84,85,86,87,88,89,94,95,98,99,100,101,103,105,106,116,117,118,166,181,],[63,63,63,-77,-78,-75,-80,-76,-79,63,-74,63,63,63,63,63,63,63,63,63,63,63,63,63,63,]),'MODULO':([37,38,45,47,49,60,128,129,130,131,134,146,151,],[90,-53,-48,-52,-51,-50,-47,-44,-46,-45,-49,90,90,]),'DATE_UNIT':([37,38,45,47,49,60,128,129,130,131,134,146,151,193,],[-43,-53,-48,-52,-51,-50,-47,-44,-46,-45,-49,-42,-41,197,]),'MONTH':([26,68,81,82,83,84,85,86,87,88,89,94,95,98,99,100,101,103,105,106,116,117,118,166,181,],[64,64,64,-77,-78,-75,-80,-76,-79,64,-74,64,64,64,64,64,64,64,64,64,64,64,64,64,64,]),'AND':([37,38,45,47,49,60,128,129,130,131,134,146,149,151,],[-43,-53,-48,-52,-51,-50,-47,-44,-46,-45,-49,-42,176,-41,]),'ADDDATE':([26,68,81,82,83,84,85,86,87,88,89,94,95,98,99,100,101,103,105,106,116,117,118,166,181,],[66,66,66,-77,-78,-75,-80,-76,-79,66,-74,66,66,66,66,66,66,66,66,66,66,66,66,66,66,]),'VALUES':([19,79,],[24,124,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'empty':([4,5,],[9,12,]),'num_term':([26,68,90,91,92,93,99,107,110,111,112,115,176,178,186,],[45,45,128,129,130,131,45,45,45,45,45,45,45,45,45,]),'date_exp':([26,68,81,88,94,95,98,99,100,101,103,105,106,116,117,118,166,181,],[36,36,126,127,132,133,135,36,139,140,142,144,145,155,156,157,184,189,]),'num_factor':([26,68,99,107,110,111,112,115,176,178,186,],[37,37,37,146,37,37,151,37,37,37,37,]),'date_function':([26,68,81,88,94,95,98,99,100,101,103,105,106,116,117,118,166,181,],[56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,56,]),'delete_statement':([0,],[1,]),'into_kw':([5,],[13,]),'date_cond':([26,68,99,],[58,58,137,]),'num_exp':([26,68,99,110,111,115,176,178,186,],[59,59,59,149,150,154,187,188,193,]),'condition':([26,68,],[42,119,]),'num_cond':([26,68,99,],[50,50,136,]),'value_list':([32,162,],[78,183,]),'statement':([0,],[2,]),'num_val':([26,41,68,90,91,92,93,99,107,110,111,112,115,176,178,186,],[60,96,60,60,60,60,60,60,60,60,60,60,60,60,60,60,]),'column_name':([8,25,],[15,33,]),'select_statement':([0,],[3,]),'string_exp':([26,68,99,104,113,153,173,],[61,61,61,143,152,177,185,]),'comparison_op':([36,59,],[88,111,]),'literals':([32,72,123,159,162,],[76,121,161,182,76,]),'assignment_list':([23,],[30,]),'filter_rows_op':([4,],[8,]),'columns':([8,],[17,]),'insert_statement':([0,],[7,]),'string_cond':([26,68,99,],[67,67,138,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> insert_statement','statement',1,'p_statement','select.py',156),
  ('statement -> select_statement','statement',1,'p_statement','select.py',157),
  ('statement -> delete_statement','statement',1,'p_statement','select.py',158),
  ('insert_statement -> INSERT into_kw TABLE_NAME VALUES OPENPAR value_list CLOSEPAR SEMICOLON','insert_statement',8,'p_insert_statement','select.py',161),
  ('insert_statement -> INSERT into_kw TABLE_NAME OPENPAR column_name CLOSEPAR VALUES OPENPAR value_list CLOSEPAR SEMICOLON','insert_statement',11,'p_insert_statement','select.py',162),
  ('insert_statement -> INSERT into_kw TABLE_NAME SET assignment_list SEMICOLON','insert_statement',6,'p_insert_statement','select.py',163),
  ('select_statement -> SELECT filter_rows_op columns FROM TABLE_NAME SEMICOLON','select_statement',6,'p_select_statement','select.py',168),
  ('select_statement -> SELECT filter_rows_op columns FROM TABLE_NAME WHERE condition SEMICOLON','select_statement',8,'p_select_statement','select.py',169),
  ('delete_statement -> DELETE FROM TABLE_NAME SEMICOLON','delete_statement',4,'p_delete_statement','select.py',174),
  ('delete_statement -> DELETE FROM TABLE_NAME WHERE condition SEMICOLON','delete_statement',6,'p_delete_statement','select.py',175),
  ('into_kw -> INTO','into_kw',1,'p_into_kw','select.py',179),
  ('into_kw -> empty','into_kw',1,'p_into_kw','select.py',180),
  ('filter_rows_op -> FILTER_ROWS','filter_rows_op',1,'p_filter_rows_op','select.py',187),
  ('filter_rows_op -> empty','filter_rows_op',1,'p_filter_rows_op','select.py',188),
  ('columns -> ASTERISK','columns',1,'p_columns','select.py',195),
  ('columns -> column_name','columns',1,'p_columns','select.py',196),
  ('column_name -> COLUMN_NAME','column_name',1,'p_column_name','select.py',204),
  ('column_name -> column_name COMMA COLUMN_NAME','column_name',3,'p_column_name','select.py',205),
  ('assignment_list -> COLUMN_NAME EQUAL literals','assignment_list',3,'p_assignment_list','select.py',208),
  ('assignment_list -> assignment_list COMMA COLUMN_NAME EQUAL literals','assignment_list',5,'p_assignment_list','select.py',209),
  ('value_list -> literals','value_list',1,'p_value_list','select.py',212),
  ('value_list -> value_list COMMA literals','value_list',3,'p_value_list','select.py',213),
  ('literals -> STRING_LIT','literals',1,'p_literals','select.py',220),
  ('literals -> INT_LIT','literals',1,'p_literals','select.py',221),
  ('literals -> DOUBLE_LIT','literals',1,'p_literals','select.py',222),
  ('literals -> DATE_LIT','literals',1,'p_literals','select.py',223),
  ('condition -> string_cond','condition',1,'p_condition','select.py',227),
  ('condition -> num_cond','condition',1,'p_condition','select.py',228),
  ('condition -> date_cond','condition',1,'p_condition','select.py',229),
  ('condition -> NOT OPENPAR string_cond CLOSEPAR','condition',4,'p_condition','select.py',230),
  ('condition -> NOT OPENPAR num_cond CLOSEPAR','condition',4,'p_condition','select.py',231),
  ('condition -> NOT OPENPAR date_cond CLOSEPAR','condition',4,'p_condition','select.py',232),
  ('string_cond -> string_exp LIKE string_exp','string_cond',3,'p_string_cond','select.py',236),
  ('string_cond -> string_exp NOT LIKE string_exp','string_cond',4,'p_string_cond','select.py',237),
  ('string_cond -> STRCMP OPENPAR string_exp COMMA string_exp CLOSEPAR','string_cond',6,'p_string_cond','select.py',238),
  ('string_exp -> STRING_LIT','string_exp',1,'p_string_exp','select.py',243),
  ('num_cond -> num_exp comparison_op num_exp','num_cond',3,'p_num_cond','select.py',249),
  ('num_cond -> num_exp BETWEEN num_exp AND num_exp','num_cond',5,'p_num_cond','select.py',250),
  ('num_cond -> num_exp NOT NULL','num_cond',3,'p_num_cond','select.py',251),
  ('num_cond -> num_exp IS NULL','num_cond',3,'p_num_cond','select.py',252),
  ('num_exp -> num_exp ADD num_factor','num_exp',3,'p_num_exp','select.py',255),
  ('num_exp -> num_exp SUBTRACT num_factor','num_exp',3,'p_num_exp','select.py',256),
  ('num_exp -> num_factor','num_exp',1,'p_num_exp','select.py',257),
  ('num_factor -> num_factor MULTIPLY num_term','num_factor',3,'p_num_factor','select.py',266),
  ('num_factor -> num_factor DIVIDE num_term','num_factor',3,'p_num_factor','select.py',267),
  ('num_factor -> num_factor DIVIDE_INT num_term','num_factor',3,'p_num_factor','select.py',268),
  ('num_factor -> num_factor MODULO num_term','num_factor',3,'p_num_factor','select.py',269),
  ('num_factor -> num_term','num_factor',1,'p_num_factor','select.py',270),
  ('num_term -> OPENPAR num_val CLOSEPAR','num_term',3,'p_num_term','select.py',283),
  ('num_term -> num_val','num_term',1,'p_num_term','select.py',284),
  ('num_val -> INT_LIT','num_val',1,'p_num_val','select.py',288),
  ('num_val -> DOUBLE_LIT','num_val',1,'p_num_val','select.py',289),
  ('num_val -> COLUMN_NAME','num_val',1,'p_num_val','select.py',290),
  ('date_cond -> date_exp comparison_op date_exp','date_cond',3,'p_date_cond','select.py',294),
  ('date_cond -> date_exp','date_cond',1,'p_date_cond','select.py',295),
  ('date_exp -> date_function','date_exp',1,'p_date_exp','select.py',298),
  ('date_exp -> DATE_LIT','date_exp',1,'p_date_exp','select.py',299),
  ('date_function -> ADDDATE OPENPAR date_exp COMMA date_exp CLOSEPAR','date_function',6,'p_date_function','select.py',303),
  ('date_function -> CURDATE OPENPAR CLOSEPAR','date_function',3,'p_date_function','select.py',304),
  ('date_function -> CURRENT_DATE OPENPAR CLOSEPAR','date_function',3,'p_date_function','select.py',305),
  ('date_function -> CURRENT_DATE','date_function',1,'p_date_function','select.py',306),
  ('date_function -> DATEDIFF OPENPAR date_exp COMMA date_exp CLOSEPAR','date_function',6,'p_date_function','select.py',307),
  ('date_function -> DAY OPENPAR date_exp CLOSEPAR','date_function',4,'p_date_function','select.py',308),
  ('date_function -> DAYNAME OPENPAR date_exp CLOSEPAR','date_function',4,'p_date_function','select.py',309),
  ('date_function -> DAYOFMONTH OPENPAR date_exp CLOSEPAR','date_function',4,'p_date_function','select.py',310),
  ('date_function -> DAYOFWEEK OPENPAR date_exp CLOSEPAR','date_function',4,'p_date_function','select.py',311),
  ('date_function -> DAYOFYEAR OPENPAR date_exp CLOSEPAR','date_function',4,'p_date_function','select.py',312),
  ('date_function -> LAST_DAY OPENPAR date_exp CLOSEPAR','date_function',4,'p_date_function','select.py',313),
  ('date_function -> MAKEDATE OPENPAR num_exp COMMA num_exp CLOSEPAR','date_function',6,'p_date_function','select.py',314),
  ('date_function -> MONTH OPENPAR date_exp CLOSEPAR','date_function',4,'p_date_function','select.py',315),
  ('date_function -> MONTHNAME OPENPAR date_exp CLOSEPAR','date_function',4,'p_date_function','select.py',316),
  ('date_function -> SUBDATE OPENPAR date_exp COMMA INTERVAL num_exp DATE_UNIT CLOSEPAR','date_function',8,'p_date_function','select.py',317),
  ('date_function -> YEAR OPENPAR date_exp CLOSEPAR','date_function',4,'p_date_function','select.py',318),
  ('comparison_op -> GE','comparison_op',1,'p_comparison_op','select.py',321),
  ('comparison_op -> GT','comparison_op',1,'p_comparison_op','select.py',322),
  ('comparison_op -> LE','comparison_op',1,'p_comparison_op','select.py',323),
  ('comparison_op -> LT','comparison_op',1,'p_comparison_op','select.py',324),
  ('comparison_op -> NE','comparison_op',1,'p_comparison_op','select.py',325),
  ('comparison_op -> EQUAL','comparison_op',1,'p_comparison_op','select.py',326),
  ('comparison_op -> EQUAL_NULL','comparison_op',1,'p_comparison_op','select.py',327),
  ('empty -> <empty>','empty',0,'p_empty','select.py',339),
]
