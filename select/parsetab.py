
# parsetab.py
# This file is automatically generated. Do not edit.
_tabversion = '3.10'

_lr_method = 'LALR'

_lr_signature = 'FROM WHERE SELECT LIKE STRCMP IS NULL BETWEEN AND ADDDATE CURDATE CURRENT_DATE DATEDIFF DAY DAYNAME DAYOFMONTH DAYOFWEEK DAYOFYEAR LAST_DAY MAKEDATE MONTH MONTHNAME SUBDATE INTERVAL YEAR COLUMN_NAME TABLE_NAME FILTER_ROWS INT_LIT DOUBLE_LIT STRING_LIT DATE_LIT ASTERISK DATE_UNIT COMMA SEMICOLON ADD SUBTRACT MULTIPLY DIVIDE DIVIDE_INT MODULO EQUAL EQUAL_NULL GT GE LT LE NE NOT OPENPAR CLOSEPARstatement : SELECT columns FROM TABLE_NAME SEMICOLON\n            | SELECT columns FROM TABLE_NAME WHERE condition SEMICOLONcolumns : ASTERISK\n            | column_namecolumn_name : COLUMN_NAME\n            | column_name COMMA COLUMN_NAMEcondition : string_cond\n            | num_cond\n            | date_cond\n            | NOT OPENPAR string_cond CLOSEPAR\n            | NOT OPENPAR num_cond CLOSEPAR\n            | NOT OPENPAR date_cond CLOSEPARstring_cond : string_exp LIKE string_exp\n            | string_exp EQUAL string_exp\n            | string_exp NOT LIKE string_exp\n            | STRCMP OPENPAR string_exp COMMA string_exp CLOSEPARstring_exp : STRING_LIT\n            | COLUMN_NAMEnum_cond : num_exp comparison_op num_exp\n            | num_exp BETWEEN num_exp AND num_exp\n            | num_exp NOT NULL\n            | num_exp IS NULLnum_exp : num_val arithmetic_op num_val\n            | num_valnum_val : INT_LIT\n            | DOUBLE_LIT\n            | COLUMN_NAMEdate_cond : date_exp comparison_op date_exp\n            | date_expdate_exp : date_function\n            | DATE_LITdate_function : ADDDATE OPENPAR date_exp COMMA date_exp CLOSEPAR\n             | CURDATE OPENPAR CLOSEPAR\n             | CURRENT_DATE OPENPAR CLOSEPAR\n             | CURRENT_DATE\n             | DATEDIFF OPENPAR date_exp COMMA date_exp CLOSEPAR\n             | DAY OPENPAR date_exp CLOSEPAR\n             | DAYNAME OPENPAR date_exp CLOSEPAR\n             | DAYOFMONTH OPENPAR date_exp CLOSEPAR\n             | DAYOFWEEK OPENPAR date_exp CLOSEPAR\n             | DAYOFYEAR OPENPAR date_exp CLOSEPAR\n             | LAST_DAY OPENPAR date_exp CLOSEPAR\n             | MAKEDATE OPENPAR num_exp COMMA num_exp CLOSEPAR\n             | MONTH OPENPAR date_exp CLOSEPAR\n             | MONTHNAME OPENPAR date_exp CLOSEPAR\n             | SUBDATE OPENPAR date_exp COMMA INTERVAL num_exp DATE_UNIT CLOSEPAR\n             | YEAR OPENPAR date_exp CLOSEPARcomparison_op : GE\n            | GT\n            | LE\n            | LT\n            | NE\n            | EQUAL\n            | EQUAL_NULLarithmetic_op : ADD\n            | SUBTRACT\n            | MULTIPLY\n            | DIVIDE\n            | DIVIDE_INT\n            | MODULOempty : '
    
_lr_action_items = {'MAKEDATE':([12,46,47,48,49,50,51,52,53,54,55,60,62,64,73,74,75,76,77,78,79,83,118,129,],[13,-51,13,-49,-54,-50,-48,-52,-53,13,13,13,13,13,13,13,13,13,13,13,13,13,13,13,]),'CURRENT_DATE':([12,46,47,48,49,50,51,52,53,54,55,60,62,64,73,74,75,76,77,78,79,83,118,129,],[14,-51,14,-49,-54,-50,-48,-52,-53,14,14,14,14,14,14,14,14,14,14,14,14,14,14,14,]),'NULL':([57,58,],[91,92,]),'DAY':([12,46,47,48,49,50,51,52,53,54,55,60,62,64,73,74,75,76,77,78,79,83,118,129,],[17,-51,17,-49,-54,-50,-48,-52,-53,17,17,17,17,17,17,17,17,17,17,17,17,17,17,17,]),'AND':([23,24,32,84,93,102,],[-26,-25,-24,-27,117,-23,]),'TABLE_NAME':([7,],[9,]),'DIVIDE_INT':([23,24,25,32,84,],[-26,-25,-27,68,-27,]),'STRING_LIT':([12,61,64,81,82,110,119,],[20,20,20,20,20,20,20,]),'$end':([2,11,63,],[0,-1,-2,]),'ADDDATE':([12,46,47,48,49,50,51,52,53,54,55,60,62,64,73,74,75,76,77,78,79,83,118,129,],[22,-51,22,-49,-54,-50,-48,-52,-53,22,22,22,22,22,22,22,22,22,22,22,22,22,22,22,]),'DOUBLE_LIT':([12,44,46,48,49,50,51,52,53,56,59,64,66,67,68,69,70,71,72,114,117,137,],[23,23,-51,-49,-54,-50,-48,-52,-53,23,23,23,-57,-60,-59,23,-56,-58,-55,23,23,23,]),'INT_LIT':([12,44,46,48,49,50,51,52,53,56,59,64,66,67,68,69,70,71,72,114,117,137,],[24,24,-51,-49,-54,-50,-48,-52,-53,24,24,24,-57,-60,-59,24,-56,-58,-55,24,24,24,]),'COLUMN_NAME':([1,8,12,44,46,48,49,50,51,52,53,56,59,61,64,66,67,68,69,70,71,72,81,82,110,114,117,119,137,],[3,10,25,84,-51,-49,-54,-50,-48,-52,-53,84,84,95,25,-57,-60,-59,84,-56,-58,-55,95,95,95,84,84,95,84,]),'WHERE':([9,],[12,]),'CLOSEPAR':([14,15,20,23,24,32,40,41,45,65,84,86,87,88,89,90,91,92,95,97,98,99,100,101,102,103,104,105,107,109,111,112,113,115,116,120,124,125,126,128,130,131,132,133,134,135,136,138,139,140,141,143,144,145,],[-35,-29,-17,-26,-25,-24,-31,-30,86,101,-27,-34,-28,115,116,-19,-22,-21,-18,120,121,122,123,-33,-23,124,125,126,128,130,-13,-14,132,-37,-39,-38,-47,-40,-44,-42,-41,-15,-45,139,-20,140,141,143,-43,-32,-16,-36,145,-46,]),'FROM':([3,4,5,6,10,],[-5,7,-3,-4,-6,]),'STRCMP':([12,64,],[26,26,]),'LT':([14,15,21,23,24,25,32,40,41,84,86,101,102,115,116,120,124,125,126,128,130,132,139,140,143,145,],[-35,46,46,-26,-25,-27,-24,-31,-30,-27,-34,-33,-23,-37,-39,-38,-47,-40,-44,-42,-41,-45,-43,-32,-36,-46,]),'DAYNAME':([12,46,47,48,49,50,51,52,53,54,55,60,62,64,73,74,75,76,77,78,79,83,118,129,],[27,-51,27,-49,-54,-50,-48,-52,-53,27,27,27,27,27,27,27,27,27,27,27,27,27,27,27,]),'EQUAL_NULL':([14,15,21,23,24,25,32,40,41,84,86,101,102,115,116,120,124,125,126,128,130,132,139,140,143,145,],[-35,49,49,-26,-25,-27,-24,-31,-30,-27,-34,-33,-23,-37,-39,-38,-47,-40,-44,-42,-41,-45,-43,-32,-36,-46,]),'MONTH':([12,46,47,48,49,50,51,52,53,54,55,60,62,64,73,74,75,76,77,78,79,83,118,129,],[35,-51,35,-49,-54,-50,-48,-52,-53,35,35,35,35,35,35,35,35,35,35,35,35,35,35,35,]),'CURDATE':([12,46,47,48,49,50,51,52,53,54,55,60,62,64,73,74,75,76,77,78,79,83,118,129,],[30,-51,30,-49,-54,-50,-48,-52,-53,30,30,30,30,30,30,30,30,30,30,30,30,30,30,30,]),'NE':([14,15,21,23,24,25,32,40,41,84,86,101,102,115,116,120,124,125,126,128,130,132,139,140,143,145,],[-35,52,52,-26,-25,-27,-24,-31,-30,-27,-34,-33,-23,-37,-39,-38,-47,-40,-44,-42,-41,-45,-43,-32,-36,-46,]),'YEAR':([12,46,47,48,49,50,51,52,53,54,55,60,62,64,73,74,75,76,77,78,79,83,118,129,],[33,-51,33,-49,-54,-50,-48,-52,-53,33,33,33,33,33,33,33,33,33,33,33,33,33,33,33,]),'INTERVAL':([127,],[137,]),'MULTIPLY':([23,24,25,32,84,],[-26,-25,-27,66,-27,]),'LIKE':([20,25,42,80,],[-17,-18,81,110,]),'DAYOFWEEK':([12,46,47,48,49,50,51,52,53,54,55,60,62,64,73,74,75,76,77,78,79,83,118,129,],[34,-51,34,-49,-54,-50,-48,-52,-53,34,34,34,34,34,34,34,34,34,34,34,34,34,34,34,]),'EQUAL':([14,15,20,21,23,24,25,32,40,41,42,84,86,101,102,115,116,120,124,125,126,128,130,132,139,140,143,145,],[-35,53,-17,53,-26,-25,-18,-24,-31,-30,82,-27,-34,-33,-23,-37,-39,-38,-47,-40,-44,-42,-41,-45,-43,-32,-36,-46,]),'ADD':([23,24,25,32,84,],[-26,-25,-27,72,-27,]),'NOT':([12,20,21,23,24,25,32,42,84,102,],[29,-17,58,-26,-25,-18,-24,80,-27,-23,]),'MODULO':([23,24,25,32,84,],[-26,-25,-27,67,-27,]),'GT':([14,15,21,23,24,25,32,40,41,84,86,101,102,115,116,120,124,125,126,128,130,132,139,140,143,145,],[-35,48,48,-26,-25,-27,-24,-31,-30,-27,-34,-33,-23,-37,-39,-38,-47,-40,-44,-42,-41,-45,-43,-32,-36,-46,]),'SUBDATE':([12,46,47,48,49,50,51,52,53,54,55,60,62,64,73,74,75,76,77,78,79,83,118,129,],[36,-51,36,-49,-54,-50,-48,-52,-53,36,36,36,36,36,36,36,36,36,36,36,36,36,36,36,]),'OPENPAR':([13,14,17,19,22,26,27,29,30,33,34,35,36,37,38,39,43,],[44,45,54,55,60,61,62,64,65,73,74,75,76,77,78,79,83,]),'DAYOFMONTH':([12,46,47,48,49,50,51,52,53,54,55,60,62,64,73,74,75,76,77,78,79,83,118,129,],[19,-51,19,-49,-54,-50,-48,-52,-53,19,19,19,19,19,19,19,19,19,19,19,19,19,19,19,]),'SUBTRACT':([23,24,25,32,84,],[-26,-25,-27,70,-27,]),'DATE_UNIT':([23,24,32,84,102,142,],[-26,-25,-24,-27,-23,144,]),'DIVIDE':([23,24,25,32,84,],[-26,-25,-27,71,-27,]),'LAST_DAY':([12,46,47,48,49,50,51,52,53,54,55,60,62,64,73,74,75,76,77,78,79,83,118,129,],[37,-51,37,-49,-54,-50,-48,-52,-53,37,37,37,37,37,37,37,37,37,37,37,37,37,37,37,]),'DATEDIFF':([12,46,47,48,49,50,51,52,53,54,55,60,62,64,73,74,75,76,77,78,79,83,118,129,],[38,-51,38,-49,-54,-50,-48,-52,-53,38,38,38,38,38,38,38,38,38,38,38,38,38,38,38,]),'GE':([14,15,21,23,24,25,32,40,41,84,86,101,102,115,116,120,124,125,126,128,130,132,139,140,143,145,],[-35,51,51,-26,-25,-27,-24,-31,-30,-27,-34,-33,-23,-37,-39,-38,-47,-40,-44,-42,-41,-45,-43,-32,-36,-46,]),'ASTERISK':([1,],[5,]),'COMMA':([3,6,10,14,20,23,24,32,40,41,84,85,86,94,95,96,101,102,106,108,115,116,120,124,125,126,128,130,132,139,140,143,145,],[-5,8,-6,-35,-17,-26,-25,-24,-31,-30,-27,114,-34,118,-18,119,-33,-23,127,129,-37,-39,-38,-47,-40,-44,-42,-41,-45,-43,-32,-36,-46,]),'DAYOFYEAR':([12,46,47,48,49,50,51,52,53,54,55,60,62,64,73,74,75,76,77,78,79,83,118,129,],[39,-51,39,-49,-54,-50,-48,-52,-53,39,39,39,39,39,39,39,39,39,39,39,39,39,39,39,]),'SELECT':([0,],[1,]),'IS':([21,23,24,25,32,84,102,],[57,-26,-25,-27,-24,-27,-23,]),'DATE_LIT':([12,46,47,48,49,50,51,52,53,54,55,60,62,64,73,74,75,76,77,78,79,83,118,129,],[40,-51,40,-49,-54,-50,-48,-52,-53,40,40,40,40,40,40,40,40,40,40,40,40,40,40,40,]),'SEMICOLON':([9,14,15,16,18,20,23,24,28,31,32,40,41,84,86,87,90,91,92,95,101,102,111,112,115,116,120,121,122,123,124,125,126,128,130,131,132,134,139,140,141,143,145,],[11,-35,-29,-9,-7,-17,-26,-25,63,-8,-24,-31,-30,-27,-34,-28,-19,-22,-21,-18,-33,-23,-13,-14,-37,-39,-38,-12,-10,-11,-47,-40,-44,-42,-41,-15,-45,-20,-43,-32,-16,-36,-46,]),'LE':([14,15,21,23,24,25,32,40,41,84,86,101,102,115,116,120,124,125,126,128,130,132,139,140,143,145,],[-35,50,50,-26,-25,-27,-24,-31,-30,-27,-34,-33,-23,-37,-39,-38,-47,-40,-44,-42,-41,-45,-43,-32,-36,-46,]),'MONTHNAME':([12,46,47,48,49,50,51,52,53,54,55,60,62,64,73,74,75,76,77,78,79,83,118,129,],[43,-51,43,-49,-54,-50,-48,-52,-53,43,43,43,43,43,43,43,43,43,43,43,43,43,43,43,]),'BETWEEN':([21,23,24,25,32,84,102,],[59,-26,-25,-27,-24,-27,-23,]),}

_lr_action = {}
for _k, _v in _lr_action_items.items():
   for _x,_y in zip(_v[0],_v[1]):
      if not _x in _lr_action:  _lr_action[_x] = {}
      _lr_action[_x][_k] = _y
del _lr_action_items

_lr_goto_items = {'statement':([0,],[2,]),'comparison_op':([15,21,],[47,56,]),'column_name':([1,],[6,]),'date_exp':([12,47,54,55,60,62,64,73,74,75,76,77,78,79,83,118,129,],[15,87,88,89,94,97,15,103,104,105,106,107,108,109,113,135,138,]),'arithmetic_op':([32,],[69,]),'date_cond':([12,64,],[16,98,]),'string_cond':([12,64,],[18,99,]),'columns':([1,],[4,]),'date_function':([12,47,54,55,60,62,64,73,74,75,76,77,78,79,83,118,129,],[41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,41,]),'num_exp':([12,44,56,59,64,114,117,137,],[21,85,90,93,21,133,134,142,]),'string_exp':([12,61,64,81,82,110,119,],[42,96,42,111,112,131,136,]),'num_val':([12,44,56,59,64,69,114,117,137,],[32,32,32,32,32,102,32,32,32,]),'num_cond':([12,64,],[31,100,]),'condition':([12,],[28,]),}

_lr_goto = {}
for _k, _v in _lr_goto_items.items():
   for _x, _y in zip(_v[0], _v[1]):
       if not _x in _lr_goto: _lr_goto[_x] = {}
       _lr_goto[_x][_k] = _y
del _lr_goto_items
_lr_productions = [
  ("S' -> statement","S'",1,None,None,None),
  ('statement -> SELECT columns FROM TABLE_NAME SEMICOLON','statement',5,'p_select_statement','select.py',140),
  ('statement -> SELECT columns FROM TABLE_NAME WHERE condition SEMICOLON','statement',7,'p_select_statement','select.py',141),
  ('columns -> ASTERISK','columns',1,'p_columns','select.py',151),
  ('columns -> column_name','columns',1,'p_columns','select.py',152),
  ('column_name -> COLUMN_NAME','column_name',1,'p_column_name','select.py',156),
  ('column_name -> column_name COMMA COLUMN_NAME','column_name',3,'p_column_name','select.py',157),
  ('condition -> string_cond','condition',1,'p_condition','select.py',160),
  ('condition -> num_cond','condition',1,'p_condition','select.py',161),
  ('condition -> date_cond','condition',1,'p_condition','select.py',162),
  ('condition -> NOT OPENPAR string_cond CLOSEPAR','condition',4,'p_condition','select.py',163),
  ('condition -> NOT OPENPAR num_cond CLOSEPAR','condition',4,'p_condition','select.py',164),
  ('condition -> NOT OPENPAR date_cond CLOSEPAR','condition',4,'p_condition','select.py',165),
  ('string_cond -> string_exp LIKE string_exp','string_cond',3,'p_string_cond','select.py',169),
  ('string_cond -> string_exp EQUAL string_exp','string_cond',3,'p_string_cond','select.py',170),
  ('string_cond -> string_exp NOT LIKE string_exp','string_cond',4,'p_string_cond','select.py',171),
  ('string_cond -> STRCMP OPENPAR string_exp COMMA string_exp CLOSEPAR','string_cond',6,'p_string_cond','select.py',172),
  ('string_exp -> STRING_LIT','string_exp',1,'p_string_exp','select.py',176),
  ('string_exp -> COLUMN_NAME','string_exp',1,'p_string_exp','select.py',177),
  ('num_cond -> num_exp comparison_op num_exp','num_cond',3,'p_num_cond','select.py',181),
  ('num_cond -> num_exp BETWEEN num_exp AND num_exp','num_cond',5,'p_num_cond','select.py',182),
  ('num_cond -> num_exp NOT NULL','num_cond',3,'p_num_cond','select.py',183),
  ('num_cond -> num_exp IS NULL','num_cond',3,'p_num_cond','select.py',184),
  ('num_exp -> num_val arithmetic_op num_val','num_exp',3,'p_num_exp','select.py',187),
  ('num_exp -> num_val','num_exp',1,'p_num_exp','select.py',188),
  ('num_val -> INT_LIT','num_val',1,'p_num_val','select.py',191),
  ('num_val -> DOUBLE_LIT','num_val',1,'p_num_val','select.py',192),
  ('num_val -> COLUMN_NAME','num_val',1,'p_num_val','select.py',193),
  ('date_cond -> date_exp comparison_op date_exp','date_cond',3,'p_date_cond','select.py',196),
  ('date_cond -> date_exp','date_cond',1,'p_date_cond','select.py',197),
  ('date_exp -> date_function','date_exp',1,'p_date_exp','select.py',200),
  ('date_exp -> DATE_LIT','date_exp',1,'p_date_exp','select.py',201),
  ('date_function -> ADDDATE OPENPAR date_exp COMMA date_exp CLOSEPAR','date_function',6,'p_date_function','select.py',204),
  ('date_function -> CURDATE OPENPAR CLOSEPAR','date_function',3,'p_date_function','select.py',205),
  ('date_function -> CURRENT_DATE OPENPAR CLOSEPAR','date_function',3,'p_date_function','select.py',206),
  ('date_function -> CURRENT_DATE','date_function',1,'p_date_function','select.py',207),
  ('date_function -> DATEDIFF OPENPAR date_exp COMMA date_exp CLOSEPAR','date_function',6,'p_date_function','select.py',208),
  ('date_function -> DAY OPENPAR date_exp CLOSEPAR','date_function',4,'p_date_function','select.py',209),
  ('date_function -> DAYNAME OPENPAR date_exp CLOSEPAR','date_function',4,'p_date_function','select.py',210),
  ('date_function -> DAYOFMONTH OPENPAR date_exp CLOSEPAR','date_function',4,'p_date_function','select.py',211),
  ('date_function -> DAYOFWEEK OPENPAR date_exp CLOSEPAR','date_function',4,'p_date_function','select.py',212),
  ('date_function -> DAYOFYEAR OPENPAR date_exp CLOSEPAR','date_function',4,'p_date_function','select.py',213),
  ('date_function -> LAST_DAY OPENPAR date_exp CLOSEPAR','date_function',4,'p_date_function','select.py',214),
  ('date_function -> MAKEDATE OPENPAR num_exp COMMA num_exp CLOSEPAR','date_function',6,'p_date_function','select.py',215),
  ('date_function -> MONTH OPENPAR date_exp CLOSEPAR','date_function',4,'p_date_function','select.py',216),
  ('date_function -> MONTHNAME OPENPAR date_exp CLOSEPAR','date_function',4,'p_date_function','select.py',217),
  ('date_function -> SUBDATE OPENPAR date_exp COMMA INTERVAL num_exp DATE_UNIT CLOSEPAR','date_function',8,'p_date_function','select.py',218),
  ('date_function -> YEAR OPENPAR date_exp CLOSEPAR','date_function',4,'p_date_function','select.py',219),
  ('comparison_op -> GE','comparison_op',1,'p_comparison_op','select.py',222),
  ('comparison_op -> GT','comparison_op',1,'p_comparison_op','select.py',223),
  ('comparison_op -> LE','comparison_op',1,'p_comparison_op','select.py',224),
  ('comparison_op -> LT','comparison_op',1,'p_comparison_op','select.py',225),
  ('comparison_op -> NE','comparison_op',1,'p_comparison_op','select.py',226),
  ('comparison_op -> EQUAL','comparison_op',1,'p_comparison_op','select.py',227),
  ('comparison_op -> EQUAL_NULL','comparison_op',1,'p_comparison_op','select.py',228),
  ('arithmetic_op -> ADD','arithmetic_op',1,'p_arithmetic_op','select.py',231),
  ('arithmetic_op -> SUBTRACT','arithmetic_op',1,'p_arithmetic_op','select.py',232),
  ('arithmetic_op -> MULTIPLY','arithmetic_op',1,'p_arithmetic_op','select.py',233),
  ('arithmetic_op -> DIVIDE','arithmetic_op',1,'p_arithmetic_op','select.py',234),
  ('arithmetic_op -> DIVIDE_INT','arithmetic_op',1,'p_arithmetic_op','select.py',235),
  ('arithmetic_op -> MODULO','arithmetic_op',1,'p_arithmetic_op','select.py',236),
  ('empty -> <empty>','empty',0,'p_empty','select.py',239),
]
