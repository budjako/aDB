Created by PLY version 3.10 (http://www.dabeaz.com/ply)

Unused terminals:

    FILTER_ROWS

Grammar

Rule 0     S' -> statement
Rule 1     statement -> SELECT columns FROM TABLE_NAME SEMICOLON
Rule 2     statement -> SELECT columns FROM TABLE_NAME WHERE condition SEMICOLON
Rule 3     columns -> ASTERISK
Rule 4     columns -> column_name
Rule 5     column_name -> COLUMN_NAME
Rule 6     column_name -> column_name COMMA COLUMN_NAME
Rule 7     condition -> string_cond
Rule 8     condition -> num_cond
Rule 9     condition -> date_cond
Rule 10    condition -> NOT OPENPAR string_cond CLOSEPAR
Rule 11    condition -> NOT OPENPAR num_cond CLOSEPAR
Rule 12    condition -> NOT OPENPAR date_cond CLOSEPAR
Rule 13    string_cond -> string_exp LIKE string_exp
Rule 14    string_cond -> string_exp EQUAL string_exp
Rule 15    string_cond -> string_exp NOT LIKE string_exp
Rule 16    string_cond -> STRCMP OPENPAR string_exp COMMA string_exp CLOSEPAR
Rule 17    string_exp -> STRING_LIT
Rule 18    string_exp -> COLUMN_NAME
Rule 19    num_cond -> num_exp comparison_op num_exp
Rule 20    num_cond -> num_exp BETWEEN num_exp AND num_exp
Rule 21    num_cond -> num_exp NOT NULL
Rule 22    num_cond -> num_exp IS NULL
Rule 23    num_exp -> num_val arithmetic_op num_val
Rule 24    num_exp -> num_val
Rule 25    num_val -> INT_LIT
Rule 26    num_val -> DOUBLE_LIT
Rule 27    num_val -> COLUMN_NAME
Rule 28    date_cond -> date_exp comparison_op date_exp
Rule 29    date_cond -> date_exp
Rule 30    date_exp -> date_function
Rule 31    date_exp -> DATE_LIT
Rule 32    date_function -> ADDDATE OPENPAR date_exp COMMA date_exp CLOSEPAR
Rule 33    date_function -> CURDATE OPENPAR CLOSEPAR
Rule 34    date_function -> CURRENT_DATE OPENPAR CLOSEPAR
Rule 35    date_function -> CURRENT_DATE
Rule 36    date_function -> DATEDIFF OPENPAR date_exp COMMA date_exp CLOSEPAR
Rule 37    date_function -> DAY OPENPAR date_exp CLOSEPAR
Rule 38    date_function -> DAYNAME OPENPAR date_exp CLOSEPAR
Rule 39    date_function -> DAYOFMONTH OPENPAR date_exp CLOSEPAR
Rule 40    date_function -> DAYOFWEEK OPENPAR date_exp CLOSEPAR
Rule 41    date_function -> DAYOFYEAR OPENPAR date_exp CLOSEPAR
Rule 42    date_function -> LAST_DAY OPENPAR date_exp CLOSEPAR
Rule 43    date_function -> MAKEDATE OPENPAR num_exp COMMA num_exp CLOSEPAR
Rule 44    date_function -> MONTH OPENPAR date_exp CLOSEPAR
Rule 45    date_function -> MONTHNAME OPENPAR date_exp CLOSEPAR
Rule 46    date_function -> SUBDATE OPENPAR date_exp COMMA INTERVAL num_exp DATE_UNIT CLOSEPAR
Rule 47    date_function -> YEAR OPENPAR date_exp CLOSEPAR
Rule 48    comparison_op -> GE
Rule 49    comparison_op -> GT
Rule 50    comparison_op -> LE
Rule 51    comparison_op -> LT
Rule 52    comparison_op -> NE
Rule 53    comparison_op -> EQUAL
Rule 54    comparison_op -> EQUAL_NULL
Rule 55    arithmetic_op -> ADD
Rule 56    arithmetic_op -> SUBTRACT
Rule 57    arithmetic_op -> MULTIPLY
Rule 58    arithmetic_op -> DIVIDE
Rule 59    arithmetic_op -> DIVIDE_INT
Rule 60    arithmetic_op -> MODULO
Rule 61    empty -> <empty>

Terminals, with rules where they appear

ADD                  : 55
ADDDATE              : 32
AND                  : 20
ASTERISK             : 3
BETWEEN              : 20
CLOSEPAR             : 10 11 12 16 32 33 34 36 37 38 39 40 41 42 43 44 45 46 47
COLUMN_NAME          : 5 6 18 27
COMMA                : 6 16 32 36 43 46
CURDATE              : 33
CURRENT_DATE         : 34 35
DATEDIFF             : 36
DATE_LIT             : 31
DATE_UNIT            : 46
DAY                  : 37
DAYNAME              : 38
DAYOFMONTH           : 39
DAYOFWEEK            : 40
DAYOFYEAR            : 41
DIVIDE               : 58
DIVIDE_INT           : 59
DOUBLE_LIT           : 26
EQUAL                : 14 53
EQUAL_NULL           : 54
FILTER_ROWS          : 
FROM                 : 1 2
GE                   : 48
GT                   : 49
INTERVAL             : 46
INT_LIT              : 25
IS                   : 22
LAST_DAY             : 42
LE                   : 50
LIKE                 : 13 15
LT                   : 51
MAKEDATE             : 43
MODULO               : 60
MONTH                : 44
MONTHNAME            : 45
MULTIPLY             : 57
NE                   : 52
NOT                  : 10 11 12 15 21
NULL                 : 21 22
OPENPAR              : 10 11 12 16 32 33 34 36 37 38 39 40 41 42 43 44 45 46 47
SELECT               : 1 2
SEMICOLON            : 1 2
STRCMP               : 16
STRING_LIT           : 17
SUBDATE              : 46
SUBTRACT             : 56
TABLE_NAME           : 1 2
WHERE                : 2
YEAR                 : 47
error                : 

Nonterminals, with rules where they appear

arithmetic_op        : 23
column_name          : 4 6
columns              : 1 2
comparison_op        : 19 28
condition            : 2
date_cond            : 9 12
date_exp             : 28 28 29 32 32 36 36 37 38 39 40 41 42 44 45 46 47
date_function        : 30
empty                : 
num_cond             : 8 11
num_exp              : 19 19 20 20 20 21 22 43 43 46
num_val              : 23 23 24
statement            : 0
string_cond          : 7 10
string_exp           : 13 13 14 14 15 15 16 16

Parsing method: LALR

state 0

    (0) S' -> . statement
    (1) statement -> . SELECT columns FROM TABLE_NAME SEMICOLON
    (2) statement -> . SELECT columns FROM TABLE_NAME WHERE condition SEMICOLON

    SELECT          shift and go to state 1

    statement                      shift and go to state 2

state 1

    (1) statement -> SELECT . columns FROM TABLE_NAME SEMICOLON
    (2) statement -> SELECT . columns FROM TABLE_NAME WHERE condition SEMICOLON
    (3) columns -> . ASTERISK
    (4) columns -> . column_name
    (5) column_name -> . COLUMN_NAME
    (6) column_name -> . column_name COMMA COLUMN_NAME

    ASTERISK        shift and go to state 5
    COLUMN_NAME     shift and go to state 3

    columns                        shift and go to state 4
    column_name                    shift and go to state 6

state 2

    (0) S' -> statement .



state 3

    (5) column_name -> COLUMN_NAME .

    COMMA           reduce using rule 5 (column_name -> COLUMN_NAME .)
    FROM            reduce using rule 5 (column_name -> COLUMN_NAME .)


state 4

    (1) statement -> SELECT columns . FROM TABLE_NAME SEMICOLON
    (2) statement -> SELECT columns . FROM TABLE_NAME WHERE condition SEMICOLON

    FROM            shift and go to state 7


state 5

    (3) columns -> ASTERISK .

    FROM            reduce using rule 3 (columns -> ASTERISK .)


state 6

    (4) columns -> column_name .
    (6) column_name -> column_name . COMMA COLUMN_NAME

    FROM            reduce using rule 4 (columns -> column_name .)
    COMMA           shift and go to state 8


state 7

    (1) statement -> SELECT columns FROM . TABLE_NAME SEMICOLON
    (2) statement -> SELECT columns FROM . TABLE_NAME WHERE condition SEMICOLON

    TABLE_NAME      shift and go to state 9


state 8

    (6) column_name -> column_name COMMA . COLUMN_NAME

    COLUMN_NAME     shift and go to state 10


state 9

    (1) statement -> SELECT columns FROM TABLE_NAME . SEMICOLON
    (2) statement -> SELECT columns FROM TABLE_NAME . WHERE condition SEMICOLON

    SEMICOLON       shift and go to state 11
    WHERE           shift and go to state 12


state 10

    (6) column_name -> column_name COMMA COLUMN_NAME .

    COMMA           reduce using rule 6 (column_name -> column_name COMMA COLUMN_NAME .)
    FROM            reduce using rule 6 (column_name -> column_name COMMA COLUMN_NAME .)


state 11

    (1) statement -> SELECT columns FROM TABLE_NAME SEMICOLON .

    $end            reduce using rule 1 (statement -> SELECT columns FROM TABLE_NAME SEMICOLON .)


state 12

    (2) statement -> SELECT columns FROM TABLE_NAME WHERE . condition SEMICOLON
    (7) condition -> . string_cond
    (8) condition -> . num_cond
    (9) condition -> . date_cond
    (10) condition -> . NOT OPENPAR string_cond CLOSEPAR
    (11) condition -> . NOT OPENPAR num_cond CLOSEPAR
    (12) condition -> . NOT OPENPAR date_cond CLOSEPAR
    (13) string_cond -> . string_exp LIKE string_exp
    (14) string_cond -> . string_exp EQUAL string_exp
    (15) string_cond -> . string_exp NOT LIKE string_exp
    (16) string_cond -> . STRCMP OPENPAR string_exp COMMA string_exp CLOSEPAR
    (19) num_cond -> . num_exp comparison_op num_exp
    (20) num_cond -> . num_exp BETWEEN num_exp AND num_exp
    (21) num_cond -> . num_exp NOT NULL
    (22) num_cond -> . num_exp IS NULL
    (28) date_cond -> . date_exp comparison_op date_exp
    (29) date_cond -> . date_exp
    (17) string_exp -> . STRING_LIT
    (18) string_exp -> . COLUMN_NAME
    (23) num_exp -> . num_val arithmetic_op num_val
    (24) num_exp -> . num_val
    (30) date_exp -> . date_function
    (31) date_exp -> . DATE_LIT
    (25) num_val -> . INT_LIT
    (26) num_val -> . DOUBLE_LIT
    (27) num_val -> . COLUMN_NAME
    (32) date_function -> . ADDDATE OPENPAR date_exp COMMA date_exp CLOSEPAR
    (33) date_function -> . CURDATE OPENPAR CLOSEPAR
    (34) date_function -> . CURRENT_DATE OPENPAR CLOSEPAR
    (35) date_function -> . CURRENT_DATE
    (36) date_function -> . DATEDIFF OPENPAR date_exp COMMA date_exp CLOSEPAR
    (37) date_function -> . DAY OPENPAR date_exp CLOSEPAR
    (38) date_function -> . DAYNAME OPENPAR date_exp CLOSEPAR
    (39) date_function -> . DAYOFMONTH OPENPAR date_exp CLOSEPAR
    (40) date_function -> . DAYOFWEEK OPENPAR date_exp CLOSEPAR
    (41) date_function -> . DAYOFYEAR OPENPAR date_exp CLOSEPAR
    (42) date_function -> . LAST_DAY OPENPAR date_exp CLOSEPAR
    (43) date_function -> . MAKEDATE OPENPAR num_exp COMMA num_exp CLOSEPAR
    (44) date_function -> . MONTH OPENPAR date_exp CLOSEPAR
    (45) date_function -> . MONTHNAME OPENPAR date_exp CLOSEPAR
    (46) date_function -> . SUBDATE OPENPAR date_exp COMMA INTERVAL num_exp DATE_UNIT CLOSEPAR
    (47) date_function -> . YEAR OPENPAR date_exp CLOSEPAR

    NOT             shift and go to state 29
    STRCMP          shift and go to state 26
    STRING_LIT      shift and go to state 20
    COLUMN_NAME     shift and go to state 25
    DATE_LIT        shift and go to state 40
    INT_LIT         shift and go to state 24
    DOUBLE_LIT      shift and go to state 23
    ADDDATE         shift and go to state 22
    CURDATE         shift and go to state 30
    CURRENT_DATE    shift and go to state 14
    DATEDIFF        shift and go to state 38
    DAY             shift and go to state 17
    DAYNAME         shift and go to state 27
    DAYOFMONTH      shift and go to state 19
    DAYOFWEEK       shift and go to state 34
    DAYOFYEAR       shift and go to state 39
    LAST_DAY        shift and go to state 37
    MAKEDATE        shift and go to state 13
    MONTH           shift and go to state 35
    MONTHNAME       shift and go to state 43
    SUBDATE         shift and go to state 36
    YEAR            shift and go to state 33

    date_exp                       shift and go to state 15
    date_cond                      shift and go to state 16
    string_cond                    shift and go to state 18
    date_function                  shift and go to state 41
    num_exp                        shift and go to state 21
    string_exp                     shift and go to state 42
    num_val                        shift and go to state 32
    num_cond                       shift and go to state 31
    condition                      shift and go to state 28

state 13

    (43) date_function -> MAKEDATE . OPENPAR num_exp COMMA num_exp CLOSEPAR

    OPENPAR         shift and go to state 44


state 14

    (34) date_function -> CURRENT_DATE . OPENPAR CLOSEPAR
    (35) date_function -> CURRENT_DATE .

    OPENPAR         shift and go to state 45
    CLOSEPAR        reduce using rule 35 (date_function -> CURRENT_DATE .)
    COMMA           reduce using rule 35 (date_function -> CURRENT_DATE .)
    GE              reduce using rule 35 (date_function -> CURRENT_DATE .)
    GT              reduce using rule 35 (date_function -> CURRENT_DATE .)
    LE              reduce using rule 35 (date_function -> CURRENT_DATE .)
    LT              reduce using rule 35 (date_function -> CURRENT_DATE .)
    NE              reduce using rule 35 (date_function -> CURRENT_DATE .)
    EQUAL           reduce using rule 35 (date_function -> CURRENT_DATE .)
    EQUAL_NULL      reduce using rule 35 (date_function -> CURRENT_DATE .)
    SEMICOLON       reduce using rule 35 (date_function -> CURRENT_DATE .)


state 15

    (28) date_cond -> date_exp . comparison_op date_exp
    (29) date_cond -> date_exp .
    (48) comparison_op -> . GE
    (49) comparison_op -> . GT
    (50) comparison_op -> . LE
    (51) comparison_op -> . LT
    (52) comparison_op -> . NE
    (53) comparison_op -> . EQUAL
    (54) comparison_op -> . EQUAL_NULL

    SEMICOLON       reduce using rule 29 (date_cond -> date_exp .)
    CLOSEPAR        reduce using rule 29 (date_cond -> date_exp .)
    GE              shift and go to state 51
    GT              shift and go to state 48
    LE              shift and go to state 50
    LT              shift and go to state 46
    NE              shift and go to state 52
    EQUAL           shift and go to state 53
    EQUAL_NULL      shift and go to state 49

    comparison_op                  shift and go to state 47

state 16

    (9) condition -> date_cond .

    SEMICOLON       reduce using rule 9 (condition -> date_cond .)


state 17

    (37) date_function -> DAY . OPENPAR date_exp CLOSEPAR

    OPENPAR         shift and go to state 54


state 18

    (7) condition -> string_cond .

    SEMICOLON       reduce using rule 7 (condition -> string_cond .)


state 19

    (39) date_function -> DAYOFMONTH . OPENPAR date_exp CLOSEPAR

    OPENPAR         shift and go to state 55


state 20

    (17) string_exp -> STRING_LIT .

    LIKE            reduce using rule 17 (string_exp -> STRING_LIT .)
    EQUAL           reduce using rule 17 (string_exp -> STRING_LIT .)
    NOT             reduce using rule 17 (string_exp -> STRING_LIT .)
    SEMICOLON       reduce using rule 17 (string_exp -> STRING_LIT .)
    CLOSEPAR        reduce using rule 17 (string_exp -> STRING_LIT .)
    COMMA           reduce using rule 17 (string_exp -> STRING_LIT .)


state 21

    (19) num_cond -> num_exp . comparison_op num_exp
    (20) num_cond -> num_exp . BETWEEN num_exp AND num_exp
    (21) num_cond -> num_exp . NOT NULL
    (22) num_cond -> num_exp . IS NULL
    (48) comparison_op -> . GE
    (49) comparison_op -> . GT
    (50) comparison_op -> . LE
    (51) comparison_op -> . LT
    (52) comparison_op -> . NE
    (53) comparison_op -> . EQUAL
    (54) comparison_op -> . EQUAL_NULL

    BETWEEN         shift and go to state 59
    NOT             shift and go to state 58
    IS              shift and go to state 57
    GE              shift and go to state 51
    GT              shift and go to state 48
    LE              shift and go to state 50
    LT              shift and go to state 46
    NE              shift and go to state 52
    EQUAL           shift and go to state 53
    EQUAL_NULL      shift and go to state 49

    comparison_op                  shift and go to state 56

state 22

    (32) date_function -> ADDDATE . OPENPAR date_exp COMMA date_exp CLOSEPAR

    OPENPAR         shift and go to state 60


state 23

    (26) num_val -> DOUBLE_LIT .

    ADD             reduce using rule 26 (num_val -> DOUBLE_LIT .)
    SUBTRACT        reduce using rule 26 (num_val -> DOUBLE_LIT .)
    MULTIPLY        reduce using rule 26 (num_val -> DOUBLE_LIT .)
    DIVIDE          reduce using rule 26 (num_val -> DOUBLE_LIT .)
    DIVIDE_INT      reduce using rule 26 (num_val -> DOUBLE_LIT .)
    MODULO          reduce using rule 26 (num_val -> DOUBLE_LIT .)
    DATE_UNIT       reduce using rule 26 (num_val -> DOUBLE_LIT .)
    CLOSEPAR        reduce using rule 26 (num_val -> DOUBLE_LIT .)
    BETWEEN         reduce using rule 26 (num_val -> DOUBLE_LIT .)
    NOT             reduce using rule 26 (num_val -> DOUBLE_LIT .)
    IS              reduce using rule 26 (num_val -> DOUBLE_LIT .)
    GE              reduce using rule 26 (num_val -> DOUBLE_LIT .)
    GT              reduce using rule 26 (num_val -> DOUBLE_LIT .)
    LE              reduce using rule 26 (num_val -> DOUBLE_LIT .)
    LT              reduce using rule 26 (num_val -> DOUBLE_LIT .)
    NE              reduce using rule 26 (num_val -> DOUBLE_LIT .)
    EQUAL           reduce using rule 26 (num_val -> DOUBLE_LIT .)
    EQUAL_NULL      reduce using rule 26 (num_val -> DOUBLE_LIT .)
    AND             reduce using rule 26 (num_val -> DOUBLE_LIT .)
    SEMICOLON       reduce using rule 26 (num_val -> DOUBLE_LIT .)
    COMMA           reduce using rule 26 (num_val -> DOUBLE_LIT .)


state 24

    (25) num_val -> INT_LIT .

    ADD             reduce using rule 25 (num_val -> INT_LIT .)
    SUBTRACT        reduce using rule 25 (num_val -> INT_LIT .)
    MULTIPLY        reduce using rule 25 (num_val -> INT_LIT .)
    DIVIDE          reduce using rule 25 (num_val -> INT_LIT .)
    DIVIDE_INT      reduce using rule 25 (num_val -> INT_LIT .)
    MODULO          reduce using rule 25 (num_val -> INT_LIT .)
    DATE_UNIT       reduce using rule 25 (num_val -> INT_LIT .)
    CLOSEPAR        reduce using rule 25 (num_val -> INT_LIT .)
    BETWEEN         reduce using rule 25 (num_val -> INT_LIT .)
    NOT             reduce using rule 25 (num_val -> INT_LIT .)
    IS              reduce using rule 25 (num_val -> INT_LIT .)
    GE              reduce using rule 25 (num_val -> INT_LIT .)
    GT              reduce using rule 25 (num_val -> INT_LIT .)
    LE              reduce using rule 25 (num_val -> INT_LIT .)
    LT              reduce using rule 25 (num_val -> INT_LIT .)
    NE              reduce using rule 25 (num_val -> INT_LIT .)
    EQUAL           reduce using rule 25 (num_val -> INT_LIT .)
    EQUAL_NULL      reduce using rule 25 (num_val -> INT_LIT .)
    AND             reduce using rule 25 (num_val -> INT_LIT .)
    SEMICOLON       reduce using rule 25 (num_val -> INT_LIT .)
    COMMA           reduce using rule 25 (num_val -> INT_LIT .)


state 25

    (18) string_exp -> COLUMN_NAME .
    (27) num_val -> COLUMN_NAME .

  ! reduce/reduce conflict for NOT resolved using rule 18 (string_exp -> COLUMN_NAME .)
  ! reduce/reduce conflict for EQUAL resolved using rule 18 (string_exp -> COLUMN_NAME .)
    LIKE            reduce using rule 18 (string_exp -> COLUMN_NAME .)
    EQUAL           reduce using rule 18 (string_exp -> COLUMN_NAME .)
    NOT             reduce using rule 18 (string_exp -> COLUMN_NAME .)
    ADD             reduce using rule 27 (num_val -> COLUMN_NAME .)
    SUBTRACT        reduce using rule 27 (num_val -> COLUMN_NAME .)
    MULTIPLY        reduce using rule 27 (num_val -> COLUMN_NAME .)
    DIVIDE          reduce using rule 27 (num_val -> COLUMN_NAME .)
    DIVIDE_INT      reduce using rule 27 (num_val -> COLUMN_NAME .)
    MODULO          reduce using rule 27 (num_val -> COLUMN_NAME .)
    BETWEEN         reduce using rule 27 (num_val -> COLUMN_NAME .)
    IS              reduce using rule 27 (num_val -> COLUMN_NAME .)
    GE              reduce using rule 27 (num_val -> COLUMN_NAME .)
    GT              reduce using rule 27 (num_val -> COLUMN_NAME .)
    LE              reduce using rule 27 (num_val -> COLUMN_NAME .)
    LT              reduce using rule 27 (num_val -> COLUMN_NAME .)
    NE              reduce using rule 27 (num_val -> COLUMN_NAME .)
    EQUAL_NULL      reduce using rule 27 (num_val -> COLUMN_NAME .)

  ! NOT             [ reduce using rule 27 (num_val -> COLUMN_NAME .) ]
  ! EQUAL           [ reduce using rule 27 (num_val -> COLUMN_NAME .) ]


state 26

    (16) string_cond -> STRCMP . OPENPAR string_exp COMMA string_exp CLOSEPAR

    OPENPAR         shift and go to state 61


state 27

    (38) date_function -> DAYNAME . OPENPAR date_exp CLOSEPAR

    OPENPAR         shift and go to state 62


state 28

    (2) statement -> SELECT columns FROM TABLE_NAME WHERE condition . SEMICOLON

    SEMICOLON       shift and go to state 63


state 29

    (10) condition -> NOT . OPENPAR string_cond CLOSEPAR
    (11) condition -> NOT . OPENPAR num_cond CLOSEPAR
    (12) condition -> NOT . OPENPAR date_cond CLOSEPAR

    OPENPAR         shift and go to state 64


state 30

    (33) date_function -> CURDATE . OPENPAR CLOSEPAR

    OPENPAR         shift and go to state 65


state 31

    (8) condition -> num_cond .

    SEMICOLON       reduce using rule 8 (condition -> num_cond .)


state 32

    (23) num_exp -> num_val . arithmetic_op num_val
    (24) num_exp -> num_val .
    (55) arithmetic_op -> . ADD
    (56) arithmetic_op -> . SUBTRACT
    (57) arithmetic_op -> . MULTIPLY
    (58) arithmetic_op -> . DIVIDE
    (59) arithmetic_op -> . DIVIDE_INT
    (60) arithmetic_op -> . MODULO

    SEMICOLON       reduce using rule 24 (num_exp -> num_val .)
    CLOSEPAR        reduce using rule 24 (num_exp -> num_val .)
    BETWEEN         reduce using rule 24 (num_exp -> num_val .)
    NOT             reduce using rule 24 (num_exp -> num_val .)
    IS              reduce using rule 24 (num_exp -> num_val .)
    GE              reduce using rule 24 (num_exp -> num_val .)
    GT              reduce using rule 24 (num_exp -> num_val .)
    LE              reduce using rule 24 (num_exp -> num_val .)
    LT              reduce using rule 24 (num_exp -> num_val .)
    NE              reduce using rule 24 (num_exp -> num_val .)
    EQUAL           reduce using rule 24 (num_exp -> num_val .)
    EQUAL_NULL      reduce using rule 24 (num_exp -> num_val .)
    DATE_UNIT       reduce using rule 24 (num_exp -> num_val .)
    AND             reduce using rule 24 (num_exp -> num_val .)
    COMMA           reduce using rule 24 (num_exp -> num_val .)
    ADD             shift and go to state 72
    SUBTRACT        shift and go to state 70
    MULTIPLY        shift and go to state 66
    DIVIDE          shift and go to state 71
    DIVIDE_INT      shift and go to state 68
    MODULO          shift and go to state 67

    arithmetic_op                  shift and go to state 69

state 33

    (47) date_function -> YEAR . OPENPAR date_exp CLOSEPAR

    OPENPAR         shift and go to state 73


state 34

    (40) date_function -> DAYOFWEEK . OPENPAR date_exp CLOSEPAR

    OPENPAR         shift and go to state 74


state 35

    (44) date_function -> MONTH . OPENPAR date_exp CLOSEPAR

    OPENPAR         shift and go to state 75


state 36

    (46) date_function -> SUBDATE . OPENPAR date_exp COMMA INTERVAL num_exp DATE_UNIT CLOSEPAR

    OPENPAR         shift and go to state 76


state 37

    (42) date_function -> LAST_DAY . OPENPAR date_exp CLOSEPAR

    OPENPAR         shift and go to state 77


state 38

    (36) date_function -> DATEDIFF . OPENPAR date_exp COMMA date_exp CLOSEPAR

    OPENPAR         shift and go to state 78


state 39

    (41) date_function -> DAYOFYEAR . OPENPAR date_exp CLOSEPAR

    OPENPAR         shift and go to state 79


state 40

    (31) date_exp -> DATE_LIT .

    CLOSEPAR        reduce using rule 31 (date_exp -> DATE_LIT .)
    SEMICOLON       reduce using rule 31 (date_exp -> DATE_LIT .)
    GE              reduce using rule 31 (date_exp -> DATE_LIT .)
    GT              reduce using rule 31 (date_exp -> DATE_LIT .)
    LE              reduce using rule 31 (date_exp -> DATE_LIT .)
    LT              reduce using rule 31 (date_exp -> DATE_LIT .)
    NE              reduce using rule 31 (date_exp -> DATE_LIT .)
    EQUAL           reduce using rule 31 (date_exp -> DATE_LIT .)
    EQUAL_NULL      reduce using rule 31 (date_exp -> DATE_LIT .)
    COMMA           reduce using rule 31 (date_exp -> DATE_LIT .)


state 41

    (30) date_exp -> date_function .

    CLOSEPAR        reduce using rule 30 (date_exp -> date_function .)
    SEMICOLON       reduce using rule 30 (date_exp -> date_function .)
    GE              reduce using rule 30 (date_exp -> date_function .)
    GT              reduce using rule 30 (date_exp -> date_function .)
    LE              reduce using rule 30 (date_exp -> date_function .)
    LT              reduce using rule 30 (date_exp -> date_function .)
    NE              reduce using rule 30 (date_exp -> date_function .)
    EQUAL           reduce using rule 30 (date_exp -> date_function .)
    EQUAL_NULL      reduce using rule 30 (date_exp -> date_function .)
    COMMA           reduce using rule 30 (date_exp -> date_function .)


state 42

    (13) string_cond -> string_exp . LIKE string_exp
    (14) string_cond -> string_exp . EQUAL string_exp
    (15) string_cond -> string_exp . NOT LIKE string_exp

    LIKE            shift and go to state 81
    EQUAL           shift and go to state 82
    NOT             shift and go to state 80


state 43

    (45) date_function -> MONTHNAME . OPENPAR date_exp CLOSEPAR

    OPENPAR         shift and go to state 83


state 44

    (43) date_function -> MAKEDATE OPENPAR . num_exp COMMA num_exp CLOSEPAR
    (23) num_exp -> . num_val arithmetic_op num_val
    (24) num_exp -> . num_val
    (25) num_val -> . INT_LIT
    (26) num_val -> . DOUBLE_LIT
    (27) num_val -> . COLUMN_NAME

    INT_LIT         shift and go to state 24
    DOUBLE_LIT      shift and go to state 23
    COLUMN_NAME     shift and go to state 84

    num_exp                        shift and go to state 85
    num_val                        shift and go to state 32

state 45

    (34) date_function -> CURRENT_DATE OPENPAR . CLOSEPAR

    CLOSEPAR        shift and go to state 86


state 46

    (51) comparison_op -> LT .

    INT_LIT         reduce using rule 51 (comparison_op -> LT .)
    DOUBLE_LIT      reduce using rule 51 (comparison_op -> LT .)
    COLUMN_NAME     reduce using rule 51 (comparison_op -> LT .)
    DATE_LIT        reduce using rule 51 (comparison_op -> LT .)
    ADDDATE         reduce using rule 51 (comparison_op -> LT .)
    CURDATE         reduce using rule 51 (comparison_op -> LT .)
    CURRENT_DATE    reduce using rule 51 (comparison_op -> LT .)
    DATEDIFF        reduce using rule 51 (comparison_op -> LT .)
    DAY             reduce using rule 51 (comparison_op -> LT .)
    DAYNAME         reduce using rule 51 (comparison_op -> LT .)
    DAYOFMONTH      reduce using rule 51 (comparison_op -> LT .)
    DAYOFWEEK       reduce using rule 51 (comparison_op -> LT .)
    DAYOFYEAR       reduce using rule 51 (comparison_op -> LT .)
    LAST_DAY        reduce using rule 51 (comparison_op -> LT .)
    MAKEDATE        reduce using rule 51 (comparison_op -> LT .)
    MONTH           reduce using rule 51 (comparison_op -> LT .)
    MONTHNAME       reduce using rule 51 (comparison_op -> LT .)
    SUBDATE         reduce using rule 51 (comparison_op -> LT .)
    YEAR            reduce using rule 51 (comparison_op -> LT .)


state 47

    (28) date_cond -> date_exp comparison_op . date_exp
    (30) date_exp -> . date_function
    (31) date_exp -> . DATE_LIT
    (32) date_function -> . ADDDATE OPENPAR date_exp COMMA date_exp CLOSEPAR
    (33) date_function -> . CURDATE OPENPAR CLOSEPAR
    (34) date_function -> . CURRENT_DATE OPENPAR CLOSEPAR
    (35) date_function -> . CURRENT_DATE
    (36) date_function -> . DATEDIFF OPENPAR date_exp COMMA date_exp CLOSEPAR
    (37) date_function -> . DAY OPENPAR date_exp CLOSEPAR
    (38) date_function -> . DAYNAME OPENPAR date_exp CLOSEPAR
    (39) date_function -> . DAYOFMONTH OPENPAR date_exp CLOSEPAR
    (40) date_function -> . DAYOFWEEK OPENPAR date_exp CLOSEPAR
    (41) date_function -> . DAYOFYEAR OPENPAR date_exp CLOSEPAR
    (42) date_function -> . LAST_DAY OPENPAR date_exp CLOSEPAR
    (43) date_function -> . MAKEDATE OPENPAR num_exp COMMA num_exp CLOSEPAR
    (44) date_function -> . MONTH OPENPAR date_exp CLOSEPAR
    (45) date_function -> . MONTHNAME OPENPAR date_exp CLOSEPAR
    (46) date_function -> . SUBDATE OPENPAR date_exp COMMA INTERVAL num_exp DATE_UNIT CLOSEPAR
    (47) date_function -> . YEAR OPENPAR date_exp CLOSEPAR

    DATE_LIT        shift and go to state 40
    ADDDATE         shift and go to state 22
    CURDATE         shift and go to state 30
    CURRENT_DATE    shift and go to state 14
    DATEDIFF        shift and go to state 38
    DAY             shift and go to state 17
    DAYNAME         shift and go to state 27
    DAYOFMONTH      shift and go to state 19
    DAYOFWEEK       shift and go to state 34
    DAYOFYEAR       shift and go to state 39
    LAST_DAY        shift and go to state 37
    MAKEDATE        shift and go to state 13
    MONTH           shift and go to state 35
    MONTHNAME       shift and go to state 43
    SUBDATE         shift and go to state 36
    YEAR            shift and go to state 33

    date_function                  shift and go to state 41
    date_exp                       shift and go to state 87

state 48

    (49) comparison_op -> GT .

    INT_LIT         reduce using rule 49 (comparison_op -> GT .)
    DOUBLE_LIT      reduce using rule 49 (comparison_op -> GT .)
    COLUMN_NAME     reduce using rule 49 (comparison_op -> GT .)
    DATE_LIT        reduce using rule 49 (comparison_op -> GT .)
    ADDDATE         reduce using rule 49 (comparison_op -> GT .)
    CURDATE         reduce using rule 49 (comparison_op -> GT .)
    CURRENT_DATE    reduce using rule 49 (comparison_op -> GT .)
    DATEDIFF        reduce using rule 49 (comparison_op -> GT .)
    DAY             reduce using rule 49 (comparison_op -> GT .)
    DAYNAME         reduce using rule 49 (comparison_op -> GT .)
    DAYOFMONTH      reduce using rule 49 (comparison_op -> GT .)
    DAYOFWEEK       reduce using rule 49 (comparison_op -> GT .)
    DAYOFYEAR       reduce using rule 49 (comparison_op -> GT .)
    LAST_DAY        reduce using rule 49 (comparison_op -> GT .)
    MAKEDATE        reduce using rule 49 (comparison_op -> GT .)
    MONTH           reduce using rule 49 (comparison_op -> GT .)
    MONTHNAME       reduce using rule 49 (comparison_op -> GT .)
    SUBDATE         reduce using rule 49 (comparison_op -> GT .)
    YEAR            reduce using rule 49 (comparison_op -> GT .)


state 49

    (54) comparison_op -> EQUAL_NULL .

    INT_LIT         reduce using rule 54 (comparison_op -> EQUAL_NULL .)
    DOUBLE_LIT      reduce using rule 54 (comparison_op -> EQUAL_NULL .)
    COLUMN_NAME     reduce using rule 54 (comparison_op -> EQUAL_NULL .)
    DATE_LIT        reduce using rule 54 (comparison_op -> EQUAL_NULL .)
    ADDDATE         reduce using rule 54 (comparison_op -> EQUAL_NULL .)
    CURDATE         reduce using rule 54 (comparison_op -> EQUAL_NULL .)
    CURRENT_DATE    reduce using rule 54 (comparison_op -> EQUAL_NULL .)
    DATEDIFF        reduce using rule 54 (comparison_op -> EQUAL_NULL .)
    DAY             reduce using rule 54 (comparison_op -> EQUAL_NULL .)
    DAYNAME         reduce using rule 54 (comparison_op -> EQUAL_NULL .)
    DAYOFMONTH      reduce using rule 54 (comparison_op -> EQUAL_NULL .)
    DAYOFWEEK       reduce using rule 54 (comparison_op -> EQUAL_NULL .)
    DAYOFYEAR       reduce using rule 54 (comparison_op -> EQUAL_NULL .)
    LAST_DAY        reduce using rule 54 (comparison_op -> EQUAL_NULL .)
    MAKEDATE        reduce using rule 54 (comparison_op -> EQUAL_NULL .)
    MONTH           reduce using rule 54 (comparison_op -> EQUAL_NULL .)
    MONTHNAME       reduce using rule 54 (comparison_op -> EQUAL_NULL .)
    SUBDATE         reduce using rule 54 (comparison_op -> EQUAL_NULL .)
    YEAR            reduce using rule 54 (comparison_op -> EQUAL_NULL .)


state 50

    (50) comparison_op -> LE .

    INT_LIT         reduce using rule 50 (comparison_op -> LE .)
    DOUBLE_LIT      reduce using rule 50 (comparison_op -> LE .)
    COLUMN_NAME     reduce using rule 50 (comparison_op -> LE .)
    DATE_LIT        reduce using rule 50 (comparison_op -> LE .)
    ADDDATE         reduce using rule 50 (comparison_op -> LE .)
    CURDATE         reduce using rule 50 (comparison_op -> LE .)
    CURRENT_DATE    reduce using rule 50 (comparison_op -> LE .)
    DATEDIFF        reduce using rule 50 (comparison_op -> LE .)
    DAY             reduce using rule 50 (comparison_op -> LE .)
    DAYNAME         reduce using rule 50 (comparison_op -> LE .)
    DAYOFMONTH      reduce using rule 50 (comparison_op -> LE .)
    DAYOFWEEK       reduce using rule 50 (comparison_op -> LE .)
    DAYOFYEAR       reduce using rule 50 (comparison_op -> LE .)
    LAST_DAY        reduce using rule 50 (comparison_op -> LE .)
    MAKEDATE        reduce using rule 50 (comparison_op -> LE .)
    MONTH           reduce using rule 50 (comparison_op -> LE .)
    MONTHNAME       reduce using rule 50 (comparison_op -> LE .)
    SUBDATE         reduce using rule 50 (comparison_op -> LE .)
    YEAR            reduce using rule 50 (comparison_op -> LE .)


state 51

    (48) comparison_op -> GE .

    INT_LIT         reduce using rule 48 (comparison_op -> GE .)
    DOUBLE_LIT      reduce using rule 48 (comparison_op -> GE .)
    COLUMN_NAME     reduce using rule 48 (comparison_op -> GE .)
    DATE_LIT        reduce using rule 48 (comparison_op -> GE .)
    ADDDATE         reduce using rule 48 (comparison_op -> GE .)
    CURDATE         reduce using rule 48 (comparison_op -> GE .)
    CURRENT_DATE    reduce using rule 48 (comparison_op -> GE .)
    DATEDIFF        reduce using rule 48 (comparison_op -> GE .)
    DAY             reduce using rule 48 (comparison_op -> GE .)
    DAYNAME         reduce using rule 48 (comparison_op -> GE .)
    DAYOFMONTH      reduce using rule 48 (comparison_op -> GE .)
    DAYOFWEEK       reduce using rule 48 (comparison_op -> GE .)
    DAYOFYEAR       reduce using rule 48 (comparison_op -> GE .)
    LAST_DAY        reduce using rule 48 (comparison_op -> GE .)
    MAKEDATE        reduce using rule 48 (comparison_op -> GE .)
    MONTH           reduce using rule 48 (comparison_op -> GE .)
    MONTHNAME       reduce using rule 48 (comparison_op -> GE .)
    SUBDATE         reduce using rule 48 (comparison_op -> GE .)
    YEAR            reduce using rule 48 (comparison_op -> GE .)


state 52

    (52) comparison_op -> NE .

    INT_LIT         reduce using rule 52 (comparison_op -> NE .)
    DOUBLE_LIT      reduce using rule 52 (comparison_op -> NE .)
    COLUMN_NAME     reduce using rule 52 (comparison_op -> NE .)
    DATE_LIT        reduce using rule 52 (comparison_op -> NE .)
    ADDDATE         reduce using rule 52 (comparison_op -> NE .)
    CURDATE         reduce using rule 52 (comparison_op -> NE .)
    CURRENT_DATE    reduce using rule 52 (comparison_op -> NE .)
    DATEDIFF        reduce using rule 52 (comparison_op -> NE .)
    DAY             reduce using rule 52 (comparison_op -> NE .)
    DAYNAME         reduce using rule 52 (comparison_op -> NE .)
    DAYOFMONTH      reduce using rule 52 (comparison_op -> NE .)
    DAYOFWEEK       reduce using rule 52 (comparison_op -> NE .)
    DAYOFYEAR       reduce using rule 52 (comparison_op -> NE .)
    LAST_DAY        reduce using rule 52 (comparison_op -> NE .)
    MAKEDATE        reduce using rule 52 (comparison_op -> NE .)
    MONTH           reduce using rule 52 (comparison_op -> NE .)
    MONTHNAME       reduce using rule 52 (comparison_op -> NE .)
    SUBDATE         reduce using rule 52 (comparison_op -> NE .)
    YEAR            reduce using rule 52 (comparison_op -> NE .)


state 53

    (53) comparison_op -> EQUAL .

    INT_LIT         reduce using rule 53 (comparison_op -> EQUAL .)
    DOUBLE_LIT      reduce using rule 53 (comparison_op -> EQUAL .)
    COLUMN_NAME     reduce using rule 53 (comparison_op -> EQUAL .)
    DATE_LIT        reduce using rule 53 (comparison_op -> EQUAL .)
    ADDDATE         reduce using rule 53 (comparison_op -> EQUAL .)
    CURDATE         reduce using rule 53 (comparison_op -> EQUAL .)
    CURRENT_DATE    reduce using rule 53 (comparison_op -> EQUAL .)
    DATEDIFF        reduce using rule 53 (comparison_op -> EQUAL .)
    DAY             reduce using rule 53 (comparison_op -> EQUAL .)
    DAYNAME         reduce using rule 53 (comparison_op -> EQUAL .)
    DAYOFMONTH      reduce using rule 53 (comparison_op -> EQUAL .)
    DAYOFWEEK       reduce using rule 53 (comparison_op -> EQUAL .)
    DAYOFYEAR       reduce using rule 53 (comparison_op -> EQUAL .)
    LAST_DAY        reduce using rule 53 (comparison_op -> EQUAL .)
    MAKEDATE        reduce using rule 53 (comparison_op -> EQUAL .)
    MONTH           reduce using rule 53 (comparison_op -> EQUAL .)
    MONTHNAME       reduce using rule 53 (comparison_op -> EQUAL .)
    SUBDATE         reduce using rule 53 (comparison_op -> EQUAL .)
    YEAR            reduce using rule 53 (comparison_op -> EQUAL .)


state 54

    (37) date_function -> DAY OPENPAR . date_exp CLOSEPAR
    (30) date_exp -> . date_function
    (31) date_exp -> . DATE_LIT
    (32) date_function -> . ADDDATE OPENPAR date_exp COMMA date_exp CLOSEPAR
    (33) date_function -> . CURDATE OPENPAR CLOSEPAR
    (34) date_function -> . CURRENT_DATE OPENPAR CLOSEPAR
    (35) date_function -> . CURRENT_DATE
    (36) date_function -> . DATEDIFF OPENPAR date_exp COMMA date_exp CLOSEPAR
    (37) date_function -> . DAY OPENPAR date_exp CLOSEPAR
    (38) date_function -> . DAYNAME OPENPAR date_exp CLOSEPAR
    (39) date_function -> . DAYOFMONTH OPENPAR date_exp CLOSEPAR
    (40) date_function -> . DAYOFWEEK OPENPAR date_exp CLOSEPAR
    (41) date_function -> . DAYOFYEAR OPENPAR date_exp CLOSEPAR
    (42) date_function -> . LAST_DAY OPENPAR date_exp CLOSEPAR
    (43) date_function -> . MAKEDATE OPENPAR num_exp COMMA num_exp CLOSEPAR
    (44) date_function -> . MONTH OPENPAR date_exp CLOSEPAR
    (45) date_function -> . MONTHNAME OPENPAR date_exp CLOSEPAR
    (46) date_function -> . SUBDATE OPENPAR date_exp COMMA INTERVAL num_exp DATE_UNIT CLOSEPAR
    (47) date_function -> . YEAR OPENPAR date_exp CLOSEPAR

    DATE_LIT        shift and go to state 40
    ADDDATE         shift and go to state 22
    CURDATE         shift and go to state 30
    CURRENT_DATE    shift and go to state 14
    DATEDIFF        shift and go to state 38
    DAY             shift and go to state 17
    DAYNAME         shift and go to state 27
    DAYOFMONTH      shift and go to state 19
    DAYOFWEEK       shift and go to state 34
    DAYOFYEAR       shift and go to state 39
    LAST_DAY        shift and go to state 37
    MAKEDATE        shift and go to state 13
    MONTH           shift and go to state 35
    MONTHNAME       shift and go to state 43
    SUBDATE         shift and go to state 36
    YEAR            shift and go to state 33

    date_function                  shift and go to state 41
    date_exp                       shift and go to state 88

state 55

    (39) date_function -> DAYOFMONTH OPENPAR . date_exp CLOSEPAR
    (30) date_exp -> . date_function
    (31) date_exp -> . DATE_LIT
    (32) date_function -> . ADDDATE OPENPAR date_exp COMMA date_exp CLOSEPAR
    (33) date_function -> . CURDATE OPENPAR CLOSEPAR
    (34) date_function -> . CURRENT_DATE OPENPAR CLOSEPAR
    (35) date_function -> . CURRENT_DATE
    (36) date_function -> . DATEDIFF OPENPAR date_exp COMMA date_exp CLOSEPAR
    (37) date_function -> . DAY OPENPAR date_exp CLOSEPAR
    (38) date_function -> . DAYNAME OPENPAR date_exp CLOSEPAR
    (39) date_function -> . DAYOFMONTH OPENPAR date_exp CLOSEPAR
    (40) date_function -> . DAYOFWEEK OPENPAR date_exp CLOSEPAR
    (41) date_function -> . DAYOFYEAR OPENPAR date_exp CLOSEPAR
    (42) date_function -> . LAST_DAY OPENPAR date_exp CLOSEPAR
    (43) date_function -> . MAKEDATE OPENPAR num_exp COMMA num_exp CLOSEPAR
    (44) date_function -> . MONTH OPENPAR date_exp CLOSEPAR
    (45) date_function -> . MONTHNAME OPENPAR date_exp CLOSEPAR
    (46) date_function -> . SUBDATE OPENPAR date_exp COMMA INTERVAL num_exp DATE_UNIT CLOSEPAR
    (47) date_function -> . YEAR OPENPAR date_exp CLOSEPAR

    DATE_LIT        shift and go to state 40
    ADDDATE         shift and go to state 22
    CURDATE         shift and go to state 30
    CURRENT_DATE    shift and go to state 14
    DATEDIFF        shift and go to state 38
    DAY             shift and go to state 17
    DAYNAME         shift and go to state 27
    DAYOFMONTH      shift and go to state 19
    DAYOFWEEK       shift and go to state 34
    DAYOFYEAR       shift and go to state 39
    LAST_DAY        shift and go to state 37
    MAKEDATE        shift and go to state 13
    MONTH           shift and go to state 35
    MONTHNAME       shift and go to state 43
    SUBDATE         shift and go to state 36
    YEAR            shift and go to state 33

    date_function                  shift and go to state 41
    date_exp                       shift and go to state 89

state 56

    (19) num_cond -> num_exp comparison_op . num_exp
    (23) num_exp -> . num_val arithmetic_op num_val
    (24) num_exp -> . num_val
    (25) num_val -> . INT_LIT
    (26) num_val -> . DOUBLE_LIT
    (27) num_val -> . COLUMN_NAME

    INT_LIT         shift and go to state 24
    DOUBLE_LIT      shift and go to state 23
    COLUMN_NAME     shift and go to state 84

    num_exp                        shift and go to state 90
    num_val                        shift and go to state 32

state 57

    (22) num_cond -> num_exp IS . NULL

    NULL            shift and go to state 91


state 58

    (21) num_cond -> num_exp NOT . NULL

    NULL            shift and go to state 92


state 59

    (20) num_cond -> num_exp BETWEEN . num_exp AND num_exp
    (23) num_exp -> . num_val arithmetic_op num_val
    (24) num_exp -> . num_val
    (25) num_val -> . INT_LIT
    (26) num_val -> . DOUBLE_LIT
    (27) num_val -> . COLUMN_NAME

    INT_LIT         shift and go to state 24
    DOUBLE_LIT      shift and go to state 23
    COLUMN_NAME     shift and go to state 84

    num_exp                        shift and go to state 93
    num_val                        shift and go to state 32

state 60

    (32) date_function -> ADDDATE OPENPAR . date_exp COMMA date_exp CLOSEPAR
    (30) date_exp -> . date_function
    (31) date_exp -> . DATE_LIT
    (32) date_function -> . ADDDATE OPENPAR date_exp COMMA date_exp CLOSEPAR
    (33) date_function -> . CURDATE OPENPAR CLOSEPAR
    (34) date_function -> . CURRENT_DATE OPENPAR CLOSEPAR
    (35) date_function -> . CURRENT_DATE
    (36) date_function -> . DATEDIFF OPENPAR date_exp COMMA date_exp CLOSEPAR
    (37) date_function -> . DAY OPENPAR date_exp CLOSEPAR
    (38) date_function -> . DAYNAME OPENPAR date_exp CLOSEPAR
    (39) date_function -> . DAYOFMONTH OPENPAR date_exp CLOSEPAR
    (40) date_function -> . DAYOFWEEK OPENPAR date_exp CLOSEPAR
    (41) date_function -> . DAYOFYEAR OPENPAR date_exp CLOSEPAR
    (42) date_function -> . LAST_DAY OPENPAR date_exp CLOSEPAR
    (43) date_function -> . MAKEDATE OPENPAR num_exp COMMA num_exp CLOSEPAR
    (44) date_function -> . MONTH OPENPAR date_exp CLOSEPAR
    (45) date_function -> . MONTHNAME OPENPAR date_exp CLOSEPAR
    (46) date_function -> . SUBDATE OPENPAR date_exp COMMA INTERVAL num_exp DATE_UNIT CLOSEPAR
    (47) date_function -> . YEAR OPENPAR date_exp CLOSEPAR

    DATE_LIT        shift and go to state 40
    ADDDATE         shift and go to state 22
    CURDATE         shift and go to state 30
    CURRENT_DATE    shift and go to state 14
    DATEDIFF        shift and go to state 38
    DAY             shift and go to state 17
    DAYNAME         shift and go to state 27
    DAYOFMONTH      shift and go to state 19
    DAYOFWEEK       shift and go to state 34
    DAYOFYEAR       shift and go to state 39
    LAST_DAY        shift and go to state 37
    MAKEDATE        shift and go to state 13
    MONTH           shift and go to state 35
    MONTHNAME       shift and go to state 43
    SUBDATE         shift and go to state 36
    YEAR            shift and go to state 33

    date_function                  shift and go to state 41
    date_exp                       shift and go to state 94

state 61

    (16) string_cond -> STRCMP OPENPAR . string_exp COMMA string_exp CLOSEPAR
    (17) string_exp -> . STRING_LIT
    (18) string_exp -> . COLUMN_NAME

    STRING_LIT      shift and go to state 20
    COLUMN_NAME     shift and go to state 95

    string_exp                     shift and go to state 96

state 62

    (38) date_function -> DAYNAME OPENPAR . date_exp CLOSEPAR
    (30) date_exp -> . date_function
    (31) date_exp -> . DATE_LIT
    (32) date_function -> . ADDDATE OPENPAR date_exp COMMA date_exp CLOSEPAR
    (33) date_function -> . CURDATE OPENPAR CLOSEPAR
    (34) date_function -> . CURRENT_DATE OPENPAR CLOSEPAR
    (35) date_function -> . CURRENT_DATE
    (36) date_function -> . DATEDIFF OPENPAR date_exp COMMA date_exp CLOSEPAR
    (37) date_function -> . DAY OPENPAR date_exp CLOSEPAR
    (38) date_function -> . DAYNAME OPENPAR date_exp CLOSEPAR
    (39) date_function -> . DAYOFMONTH OPENPAR date_exp CLOSEPAR
    (40) date_function -> . DAYOFWEEK OPENPAR date_exp CLOSEPAR
    (41) date_function -> . DAYOFYEAR OPENPAR date_exp CLOSEPAR
    (42) date_function -> . LAST_DAY OPENPAR date_exp CLOSEPAR
    (43) date_function -> . MAKEDATE OPENPAR num_exp COMMA num_exp CLOSEPAR
    (44) date_function -> . MONTH OPENPAR date_exp CLOSEPAR
    (45) date_function -> . MONTHNAME OPENPAR date_exp CLOSEPAR
    (46) date_function -> . SUBDATE OPENPAR date_exp COMMA INTERVAL num_exp DATE_UNIT CLOSEPAR
    (47) date_function -> . YEAR OPENPAR date_exp CLOSEPAR

    DATE_LIT        shift and go to state 40
    ADDDATE         shift and go to state 22
    CURDATE         shift and go to state 30
    CURRENT_DATE    shift and go to state 14
    DATEDIFF        shift and go to state 38
    DAY             shift and go to state 17
    DAYNAME         shift and go to state 27
    DAYOFMONTH      shift and go to state 19
    DAYOFWEEK       shift and go to state 34
    DAYOFYEAR       shift and go to state 39
    LAST_DAY        shift and go to state 37
    MAKEDATE        shift and go to state 13
    MONTH           shift and go to state 35
    MONTHNAME       shift and go to state 43
    SUBDATE         shift and go to state 36
    YEAR            shift and go to state 33

    date_function                  shift and go to state 41
    date_exp                       shift and go to state 97

state 63

    (2) statement -> SELECT columns FROM TABLE_NAME WHERE condition SEMICOLON .

    $end            reduce using rule 2 (statement -> SELECT columns FROM TABLE_NAME WHERE condition SEMICOLON .)


state 64

    (10) condition -> NOT OPENPAR . string_cond CLOSEPAR
    (11) condition -> NOT OPENPAR . num_cond CLOSEPAR
    (12) condition -> NOT OPENPAR . date_cond CLOSEPAR
    (13) string_cond -> . string_exp LIKE string_exp
    (14) string_cond -> . string_exp EQUAL string_exp
    (15) string_cond -> . string_exp NOT LIKE string_exp
    (16) string_cond -> . STRCMP OPENPAR string_exp COMMA string_exp CLOSEPAR
    (19) num_cond -> . num_exp comparison_op num_exp
    (20) num_cond -> . num_exp BETWEEN num_exp AND num_exp
    (21) num_cond -> . num_exp NOT NULL
    (22) num_cond -> . num_exp IS NULL
    (28) date_cond -> . date_exp comparison_op date_exp
    (29) date_cond -> . date_exp
    (17) string_exp -> . STRING_LIT
    (18) string_exp -> . COLUMN_NAME
    (23) num_exp -> . num_val arithmetic_op num_val
    (24) num_exp -> . num_val
    (30) date_exp -> . date_function
    (31) date_exp -> . DATE_LIT
    (25) num_val -> . INT_LIT
    (26) num_val -> . DOUBLE_LIT
    (27) num_val -> . COLUMN_NAME
    (32) date_function -> . ADDDATE OPENPAR date_exp COMMA date_exp CLOSEPAR
    (33) date_function -> . CURDATE OPENPAR CLOSEPAR
    (34) date_function -> . CURRENT_DATE OPENPAR CLOSEPAR
    (35) date_function -> . CURRENT_DATE
    (36) date_function -> . DATEDIFF OPENPAR date_exp COMMA date_exp CLOSEPAR
    (37) date_function -> . DAY OPENPAR date_exp CLOSEPAR
    (38) date_function -> . DAYNAME OPENPAR date_exp CLOSEPAR
    (39) date_function -> . DAYOFMONTH OPENPAR date_exp CLOSEPAR
    (40) date_function -> . DAYOFWEEK OPENPAR date_exp CLOSEPAR
    (41) date_function -> . DAYOFYEAR OPENPAR date_exp CLOSEPAR
    (42) date_function -> . LAST_DAY OPENPAR date_exp CLOSEPAR
    (43) date_function -> . MAKEDATE OPENPAR num_exp COMMA num_exp CLOSEPAR
    (44) date_function -> . MONTH OPENPAR date_exp CLOSEPAR
    (45) date_function -> . MONTHNAME OPENPAR date_exp CLOSEPAR
    (46) date_function -> . SUBDATE OPENPAR date_exp COMMA INTERVAL num_exp DATE_UNIT CLOSEPAR
    (47) date_function -> . YEAR OPENPAR date_exp CLOSEPAR

    STRCMP          shift and go to state 26
    STRING_LIT      shift and go to state 20
    COLUMN_NAME     shift and go to state 25
    DATE_LIT        shift and go to state 40
    INT_LIT         shift and go to state 24
    DOUBLE_LIT      shift and go to state 23
    ADDDATE         shift and go to state 22
    CURDATE         shift and go to state 30
    CURRENT_DATE    shift and go to state 14
    DATEDIFF        shift and go to state 38
    DAY             shift and go to state 17
    DAYNAME         shift and go to state 27
    DAYOFMONTH      shift and go to state 19
    DAYOFWEEK       shift and go to state 34
    DAYOFYEAR       shift and go to state 39
    LAST_DAY        shift and go to state 37
    MAKEDATE        shift and go to state 13
    MONTH           shift and go to state 35
    MONTHNAME       shift and go to state 43
    SUBDATE         shift and go to state 36
    YEAR            shift and go to state 33

    string_exp                     shift and go to state 42
    string_cond                    shift and go to state 99
    date_function                  shift and go to state 41
    date_exp                       shift and go to state 15
    num_val                        shift and go to state 32
    date_cond                      shift and go to state 98
    num_exp                        shift and go to state 21
    num_cond                       shift and go to state 100

state 65

    (33) date_function -> CURDATE OPENPAR . CLOSEPAR

    CLOSEPAR        shift and go to state 101


state 66

    (57) arithmetic_op -> MULTIPLY .

    INT_LIT         reduce using rule 57 (arithmetic_op -> MULTIPLY .)
    DOUBLE_LIT      reduce using rule 57 (arithmetic_op -> MULTIPLY .)
    COLUMN_NAME     reduce using rule 57 (arithmetic_op -> MULTIPLY .)


state 67

    (60) arithmetic_op -> MODULO .

    INT_LIT         reduce using rule 60 (arithmetic_op -> MODULO .)
    DOUBLE_LIT      reduce using rule 60 (arithmetic_op -> MODULO .)
    COLUMN_NAME     reduce using rule 60 (arithmetic_op -> MODULO .)


state 68

    (59) arithmetic_op -> DIVIDE_INT .

    INT_LIT         reduce using rule 59 (arithmetic_op -> DIVIDE_INT .)
    DOUBLE_LIT      reduce using rule 59 (arithmetic_op -> DIVIDE_INT .)
    COLUMN_NAME     reduce using rule 59 (arithmetic_op -> DIVIDE_INT .)


state 69

    (23) num_exp -> num_val arithmetic_op . num_val
    (25) num_val -> . INT_LIT
    (26) num_val -> . DOUBLE_LIT
    (27) num_val -> . COLUMN_NAME

    INT_LIT         shift and go to state 24
    DOUBLE_LIT      shift and go to state 23
    COLUMN_NAME     shift and go to state 84

    num_val                        shift and go to state 102

state 70

    (56) arithmetic_op -> SUBTRACT .

    INT_LIT         reduce using rule 56 (arithmetic_op -> SUBTRACT .)
    DOUBLE_LIT      reduce using rule 56 (arithmetic_op -> SUBTRACT .)
    COLUMN_NAME     reduce using rule 56 (arithmetic_op -> SUBTRACT .)


state 71

    (58) arithmetic_op -> DIVIDE .

    INT_LIT         reduce using rule 58 (arithmetic_op -> DIVIDE .)
    DOUBLE_LIT      reduce using rule 58 (arithmetic_op -> DIVIDE .)
    COLUMN_NAME     reduce using rule 58 (arithmetic_op -> DIVIDE .)


state 72

    (55) arithmetic_op -> ADD .

    INT_LIT         reduce using rule 55 (arithmetic_op -> ADD .)
    DOUBLE_LIT      reduce using rule 55 (arithmetic_op -> ADD .)
    COLUMN_NAME     reduce using rule 55 (arithmetic_op -> ADD .)


state 73

    (47) date_function -> YEAR OPENPAR . date_exp CLOSEPAR
    (30) date_exp -> . date_function
    (31) date_exp -> . DATE_LIT
    (32) date_function -> . ADDDATE OPENPAR date_exp COMMA date_exp CLOSEPAR
    (33) date_function -> . CURDATE OPENPAR CLOSEPAR
    (34) date_function -> . CURRENT_DATE OPENPAR CLOSEPAR
    (35) date_function -> . CURRENT_DATE
    (36) date_function -> . DATEDIFF OPENPAR date_exp COMMA date_exp CLOSEPAR
    (37) date_function -> . DAY OPENPAR date_exp CLOSEPAR
    (38) date_function -> . DAYNAME OPENPAR date_exp CLOSEPAR
    (39) date_function -> . DAYOFMONTH OPENPAR date_exp CLOSEPAR
    (40) date_function -> . DAYOFWEEK OPENPAR date_exp CLOSEPAR
    (41) date_function -> . DAYOFYEAR OPENPAR date_exp CLOSEPAR
    (42) date_function -> . LAST_DAY OPENPAR date_exp CLOSEPAR
    (43) date_function -> . MAKEDATE OPENPAR num_exp COMMA num_exp CLOSEPAR
    (44) date_function -> . MONTH OPENPAR date_exp CLOSEPAR
    (45) date_function -> . MONTHNAME OPENPAR date_exp CLOSEPAR
    (46) date_function -> . SUBDATE OPENPAR date_exp COMMA INTERVAL num_exp DATE_UNIT CLOSEPAR
    (47) date_function -> . YEAR OPENPAR date_exp CLOSEPAR

    DATE_LIT        shift and go to state 40
    ADDDATE         shift and go to state 22
    CURDATE         shift and go to state 30
    CURRENT_DATE    shift and go to state 14
    DATEDIFF        shift and go to state 38
    DAY             shift and go to state 17
    DAYNAME         shift and go to state 27
    DAYOFMONTH      shift and go to state 19
    DAYOFWEEK       shift and go to state 34
    DAYOFYEAR       shift and go to state 39
    LAST_DAY        shift and go to state 37
    MAKEDATE        shift and go to state 13
    MONTH           shift and go to state 35
    MONTHNAME       shift and go to state 43
    SUBDATE         shift and go to state 36
    YEAR            shift and go to state 33

    date_function                  shift and go to state 41
    date_exp                       shift and go to state 103

state 74

    (40) date_function -> DAYOFWEEK OPENPAR . date_exp CLOSEPAR
    (30) date_exp -> . date_function
    (31) date_exp -> . DATE_LIT
    (32) date_function -> . ADDDATE OPENPAR date_exp COMMA date_exp CLOSEPAR
    (33) date_function -> . CURDATE OPENPAR CLOSEPAR
    (34) date_function -> . CURRENT_DATE OPENPAR CLOSEPAR
    (35) date_function -> . CURRENT_DATE
    (36) date_function -> . DATEDIFF OPENPAR date_exp COMMA date_exp CLOSEPAR
    (37) date_function -> . DAY OPENPAR date_exp CLOSEPAR
    (38) date_function -> . DAYNAME OPENPAR date_exp CLOSEPAR
    (39) date_function -> . DAYOFMONTH OPENPAR date_exp CLOSEPAR
    (40) date_function -> . DAYOFWEEK OPENPAR date_exp CLOSEPAR
    (41) date_function -> . DAYOFYEAR OPENPAR date_exp CLOSEPAR
    (42) date_function -> . LAST_DAY OPENPAR date_exp CLOSEPAR
    (43) date_function -> . MAKEDATE OPENPAR num_exp COMMA num_exp CLOSEPAR
    (44) date_function -> . MONTH OPENPAR date_exp CLOSEPAR
    (45) date_function -> . MONTHNAME OPENPAR date_exp CLOSEPAR
    (46) date_function -> . SUBDATE OPENPAR date_exp COMMA INTERVAL num_exp DATE_UNIT CLOSEPAR
    (47) date_function -> . YEAR OPENPAR date_exp CLOSEPAR

    DATE_LIT        shift and go to state 40
    ADDDATE         shift and go to state 22
    CURDATE         shift and go to state 30
    CURRENT_DATE    shift and go to state 14
    DATEDIFF        shift and go to state 38
    DAY             shift and go to state 17
    DAYNAME         shift and go to state 27
    DAYOFMONTH      shift and go to state 19
    DAYOFWEEK       shift and go to state 34
    DAYOFYEAR       shift and go to state 39
    LAST_DAY        shift and go to state 37
    MAKEDATE        shift and go to state 13
    MONTH           shift and go to state 35
    MONTHNAME       shift and go to state 43
    SUBDATE         shift and go to state 36
    YEAR            shift and go to state 33

    date_function                  shift and go to state 41
    date_exp                       shift and go to state 104

state 75

    (44) date_function -> MONTH OPENPAR . date_exp CLOSEPAR
    (30) date_exp -> . date_function
    (31) date_exp -> . DATE_LIT
    (32) date_function -> . ADDDATE OPENPAR date_exp COMMA date_exp CLOSEPAR
    (33) date_function -> . CURDATE OPENPAR CLOSEPAR
    (34) date_function -> . CURRENT_DATE OPENPAR CLOSEPAR
    (35) date_function -> . CURRENT_DATE
    (36) date_function -> . DATEDIFF OPENPAR date_exp COMMA date_exp CLOSEPAR
    (37) date_function -> . DAY OPENPAR date_exp CLOSEPAR
    (38) date_function -> . DAYNAME OPENPAR date_exp CLOSEPAR
    (39) date_function -> . DAYOFMONTH OPENPAR date_exp CLOSEPAR
    (40) date_function -> . DAYOFWEEK OPENPAR date_exp CLOSEPAR
    (41) date_function -> . DAYOFYEAR OPENPAR date_exp CLOSEPAR
    (42) date_function -> . LAST_DAY OPENPAR date_exp CLOSEPAR
    (43) date_function -> . MAKEDATE OPENPAR num_exp COMMA num_exp CLOSEPAR
    (44) date_function -> . MONTH OPENPAR date_exp CLOSEPAR
    (45) date_function -> . MONTHNAME OPENPAR date_exp CLOSEPAR
    (46) date_function -> . SUBDATE OPENPAR date_exp COMMA INTERVAL num_exp DATE_UNIT CLOSEPAR
    (47) date_function -> . YEAR OPENPAR date_exp CLOSEPAR

    DATE_LIT        shift and go to state 40
    ADDDATE         shift and go to state 22
    CURDATE         shift and go to state 30
    CURRENT_DATE    shift and go to state 14
    DATEDIFF        shift and go to state 38
    DAY             shift and go to state 17
    DAYNAME         shift and go to state 27
    DAYOFMONTH      shift and go to state 19
    DAYOFWEEK       shift and go to state 34
    DAYOFYEAR       shift and go to state 39
    LAST_DAY        shift and go to state 37
    MAKEDATE        shift and go to state 13
    MONTH           shift and go to state 35
    MONTHNAME       shift and go to state 43
    SUBDATE         shift and go to state 36
    YEAR            shift and go to state 33

    date_function                  shift and go to state 41
    date_exp                       shift and go to state 105

state 76

    (46) date_function -> SUBDATE OPENPAR . date_exp COMMA INTERVAL num_exp DATE_UNIT CLOSEPAR
    (30) date_exp -> . date_function
    (31) date_exp -> . DATE_LIT
    (32) date_function -> . ADDDATE OPENPAR date_exp COMMA date_exp CLOSEPAR
    (33) date_function -> . CURDATE OPENPAR CLOSEPAR
    (34) date_function -> . CURRENT_DATE OPENPAR CLOSEPAR
    (35) date_function -> . CURRENT_DATE
    (36) date_function -> . DATEDIFF OPENPAR date_exp COMMA date_exp CLOSEPAR
    (37) date_function -> . DAY OPENPAR date_exp CLOSEPAR
    (38) date_function -> . DAYNAME OPENPAR date_exp CLOSEPAR
    (39) date_function -> . DAYOFMONTH OPENPAR date_exp CLOSEPAR
    (40) date_function -> . DAYOFWEEK OPENPAR date_exp CLOSEPAR
    (41) date_function -> . DAYOFYEAR OPENPAR date_exp CLOSEPAR
    (42) date_function -> . LAST_DAY OPENPAR date_exp CLOSEPAR
    (43) date_function -> . MAKEDATE OPENPAR num_exp COMMA num_exp CLOSEPAR
    (44) date_function -> . MONTH OPENPAR date_exp CLOSEPAR
    (45) date_function -> . MONTHNAME OPENPAR date_exp CLOSEPAR
    (46) date_function -> . SUBDATE OPENPAR date_exp COMMA INTERVAL num_exp DATE_UNIT CLOSEPAR
    (47) date_function -> . YEAR OPENPAR date_exp CLOSEPAR

    DATE_LIT        shift and go to state 40
    ADDDATE         shift and go to state 22
    CURDATE         shift and go to state 30
    CURRENT_DATE    shift and go to state 14
    DATEDIFF        shift and go to state 38
    DAY             shift and go to state 17
    DAYNAME         shift and go to state 27
    DAYOFMONTH      shift and go to state 19
    DAYOFWEEK       shift and go to state 34
    DAYOFYEAR       shift and go to state 39
    LAST_DAY        shift and go to state 37
    MAKEDATE        shift and go to state 13
    MONTH           shift and go to state 35
    MONTHNAME       shift and go to state 43
    SUBDATE         shift and go to state 36
    YEAR            shift and go to state 33

    date_function                  shift and go to state 41
    date_exp                       shift and go to state 106

state 77

    (42) date_function -> LAST_DAY OPENPAR . date_exp CLOSEPAR
    (30) date_exp -> . date_function
    (31) date_exp -> . DATE_LIT
    (32) date_function -> . ADDDATE OPENPAR date_exp COMMA date_exp CLOSEPAR
    (33) date_function -> . CURDATE OPENPAR CLOSEPAR
    (34) date_function -> . CURRENT_DATE OPENPAR CLOSEPAR
    (35) date_function -> . CURRENT_DATE
    (36) date_function -> . DATEDIFF OPENPAR date_exp COMMA date_exp CLOSEPAR
    (37) date_function -> . DAY OPENPAR date_exp CLOSEPAR
    (38) date_function -> . DAYNAME OPENPAR date_exp CLOSEPAR
    (39) date_function -> . DAYOFMONTH OPENPAR date_exp CLOSEPAR
    (40) date_function -> . DAYOFWEEK OPENPAR date_exp CLOSEPAR
    (41) date_function -> . DAYOFYEAR OPENPAR date_exp CLOSEPAR
    (42) date_function -> . LAST_DAY OPENPAR date_exp CLOSEPAR
    (43) date_function -> . MAKEDATE OPENPAR num_exp COMMA num_exp CLOSEPAR
    (44) date_function -> . MONTH OPENPAR date_exp CLOSEPAR
    (45) date_function -> . MONTHNAME OPENPAR date_exp CLOSEPAR
    (46) date_function -> . SUBDATE OPENPAR date_exp COMMA INTERVAL num_exp DATE_UNIT CLOSEPAR
    (47) date_function -> . YEAR OPENPAR date_exp CLOSEPAR

    DATE_LIT        shift and go to state 40
    ADDDATE         shift and go to state 22
    CURDATE         shift and go to state 30
    CURRENT_DATE    shift and go to state 14
    DATEDIFF        shift and go to state 38
    DAY             shift and go to state 17
    DAYNAME         shift and go to state 27
    DAYOFMONTH      shift and go to state 19
    DAYOFWEEK       shift and go to state 34
    DAYOFYEAR       shift and go to state 39
    LAST_DAY        shift and go to state 37
    MAKEDATE        shift and go to state 13
    MONTH           shift and go to state 35
    MONTHNAME       shift and go to state 43
    SUBDATE         shift and go to state 36
    YEAR            shift and go to state 33

    date_function                  shift and go to state 41
    date_exp                       shift and go to state 107

state 78

    (36) date_function -> DATEDIFF OPENPAR . date_exp COMMA date_exp CLOSEPAR
    (30) date_exp -> . date_function
    (31) date_exp -> . DATE_LIT
    (32) date_function -> . ADDDATE OPENPAR date_exp COMMA date_exp CLOSEPAR
    (33) date_function -> . CURDATE OPENPAR CLOSEPAR
    (34) date_function -> . CURRENT_DATE OPENPAR CLOSEPAR
    (35) date_function -> . CURRENT_DATE
    (36) date_function -> . DATEDIFF OPENPAR date_exp COMMA date_exp CLOSEPAR
    (37) date_function -> . DAY OPENPAR date_exp CLOSEPAR
    (38) date_function -> . DAYNAME OPENPAR date_exp CLOSEPAR
    (39) date_function -> . DAYOFMONTH OPENPAR date_exp CLOSEPAR
    (40) date_function -> . DAYOFWEEK OPENPAR date_exp CLOSEPAR
    (41) date_function -> . DAYOFYEAR OPENPAR date_exp CLOSEPAR
    (42) date_function -> . LAST_DAY OPENPAR date_exp CLOSEPAR
    (43) date_function -> . MAKEDATE OPENPAR num_exp COMMA num_exp CLOSEPAR
    (44) date_function -> . MONTH OPENPAR date_exp CLOSEPAR
    (45) date_function -> . MONTHNAME OPENPAR date_exp CLOSEPAR
    (46) date_function -> . SUBDATE OPENPAR date_exp COMMA INTERVAL num_exp DATE_UNIT CLOSEPAR
    (47) date_function -> . YEAR OPENPAR date_exp CLOSEPAR

    DATE_LIT        shift and go to state 40
    ADDDATE         shift and go to state 22
    CURDATE         shift and go to state 30
    CURRENT_DATE    shift and go to state 14
    DATEDIFF        shift and go to state 38
    DAY             shift and go to state 17
    DAYNAME         shift and go to state 27
    DAYOFMONTH      shift and go to state 19
    DAYOFWEEK       shift and go to state 34
    DAYOFYEAR       shift and go to state 39
    LAST_DAY        shift and go to state 37
    MAKEDATE        shift and go to state 13
    MONTH           shift and go to state 35
    MONTHNAME       shift and go to state 43
    SUBDATE         shift and go to state 36
    YEAR            shift and go to state 33

    date_function                  shift and go to state 41
    date_exp                       shift and go to state 108

state 79

    (41) date_function -> DAYOFYEAR OPENPAR . date_exp CLOSEPAR
    (30) date_exp -> . date_function
    (31) date_exp -> . DATE_LIT
    (32) date_function -> . ADDDATE OPENPAR date_exp COMMA date_exp CLOSEPAR
    (33) date_function -> . CURDATE OPENPAR CLOSEPAR
    (34) date_function -> . CURRENT_DATE OPENPAR CLOSEPAR
    (35) date_function -> . CURRENT_DATE
    (36) date_function -> . DATEDIFF OPENPAR date_exp COMMA date_exp CLOSEPAR
    (37) date_function -> . DAY OPENPAR date_exp CLOSEPAR
    (38) date_function -> . DAYNAME OPENPAR date_exp CLOSEPAR
    (39) date_function -> . DAYOFMONTH OPENPAR date_exp CLOSEPAR
    (40) date_function -> . DAYOFWEEK OPENPAR date_exp CLOSEPAR
    (41) date_function -> . DAYOFYEAR OPENPAR date_exp CLOSEPAR
    (42) date_function -> . LAST_DAY OPENPAR date_exp CLOSEPAR
    (43) date_function -> . MAKEDATE OPENPAR num_exp COMMA num_exp CLOSEPAR
    (44) date_function -> . MONTH OPENPAR date_exp CLOSEPAR
    (45) date_function -> . MONTHNAME OPENPAR date_exp CLOSEPAR
    (46) date_function -> . SUBDATE OPENPAR date_exp COMMA INTERVAL num_exp DATE_UNIT CLOSEPAR
    (47) date_function -> . YEAR OPENPAR date_exp CLOSEPAR

    DATE_LIT        shift and go to state 40
    ADDDATE         shift and go to state 22
    CURDATE         shift and go to state 30
    CURRENT_DATE    shift and go to state 14
    DATEDIFF        shift and go to state 38
    DAY             shift and go to state 17
    DAYNAME         shift and go to state 27
    DAYOFMONTH      shift and go to state 19
    DAYOFWEEK       shift and go to state 34
    DAYOFYEAR       shift and go to state 39
    LAST_DAY        shift and go to state 37
    MAKEDATE        shift and go to state 13
    MONTH           shift and go to state 35
    MONTHNAME       shift and go to state 43
    SUBDATE         shift and go to state 36
    YEAR            shift and go to state 33

    date_function                  shift and go to state 41
    date_exp                       shift and go to state 109

state 80

    (15) string_cond -> string_exp NOT . LIKE string_exp

    LIKE            shift and go to state 110


state 81

    (13) string_cond -> string_exp LIKE . string_exp
    (17) string_exp -> . STRING_LIT
    (18) string_exp -> . COLUMN_NAME

    STRING_LIT      shift and go to state 20
    COLUMN_NAME     shift and go to state 95

    string_exp                     shift and go to state 111

state 82

    (14) string_cond -> string_exp EQUAL . string_exp
    (17) string_exp -> . STRING_LIT
    (18) string_exp -> . COLUMN_NAME

    STRING_LIT      shift and go to state 20
    COLUMN_NAME     shift and go to state 95

    string_exp                     shift and go to state 112

state 83

    (45) date_function -> MONTHNAME OPENPAR . date_exp CLOSEPAR
    (30) date_exp -> . date_function
    (31) date_exp -> . DATE_LIT
    (32) date_function -> . ADDDATE OPENPAR date_exp COMMA date_exp CLOSEPAR
    (33) date_function -> . CURDATE OPENPAR CLOSEPAR
    (34) date_function -> . CURRENT_DATE OPENPAR CLOSEPAR
    (35) date_function -> . CURRENT_DATE
    (36) date_function -> . DATEDIFF OPENPAR date_exp COMMA date_exp CLOSEPAR
    (37) date_function -> . DAY OPENPAR date_exp CLOSEPAR
    (38) date_function -> . DAYNAME OPENPAR date_exp CLOSEPAR
    (39) date_function -> . DAYOFMONTH OPENPAR date_exp CLOSEPAR
    (40) date_function -> . DAYOFWEEK OPENPAR date_exp CLOSEPAR
    (41) date_function -> . DAYOFYEAR OPENPAR date_exp CLOSEPAR
    (42) date_function -> . LAST_DAY OPENPAR date_exp CLOSEPAR
    (43) date_function -> . MAKEDATE OPENPAR num_exp COMMA num_exp CLOSEPAR
    (44) date_function -> . MONTH OPENPAR date_exp CLOSEPAR
    (45) date_function -> . MONTHNAME OPENPAR date_exp CLOSEPAR
    (46) date_function -> . SUBDATE OPENPAR date_exp COMMA INTERVAL num_exp DATE_UNIT CLOSEPAR
    (47) date_function -> . YEAR OPENPAR date_exp CLOSEPAR

    DATE_LIT        shift and go to state 40
    ADDDATE         shift and go to state 22
    CURDATE         shift and go to state 30
    CURRENT_DATE    shift and go to state 14
    DATEDIFF        shift and go to state 38
    DAY             shift and go to state 17
    DAYNAME         shift and go to state 27
    DAYOFMONTH      shift and go to state 19
    DAYOFWEEK       shift and go to state 34
    DAYOFYEAR       shift and go to state 39
    LAST_DAY        shift and go to state 37
    MAKEDATE        shift and go to state 13
    MONTH           shift and go to state 35
    MONTHNAME       shift and go to state 43
    SUBDATE         shift and go to state 36
    YEAR            shift and go to state 33

    date_function                  shift and go to state 41
    date_exp                       shift and go to state 113

state 84

    (27) num_val -> COLUMN_NAME .

    ADD             reduce using rule 27 (num_val -> COLUMN_NAME .)
    SUBTRACT        reduce using rule 27 (num_val -> COLUMN_NAME .)
    MULTIPLY        reduce using rule 27 (num_val -> COLUMN_NAME .)
    DIVIDE          reduce using rule 27 (num_val -> COLUMN_NAME .)
    DIVIDE_INT      reduce using rule 27 (num_val -> COLUMN_NAME .)
    MODULO          reduce using rule 27 (num_val -> COLUMN_NAME .)
    DATE_UNIT       reduce using rule 27 (num_val -> COLUMN_NAME .)
    CLOSEPAR        reduce using rule 27 (num_val -> COLUMN_NAME .)
    AND             reduce using rule 27 (num_val -> COLUMN_NAME .)
    SEMICOLON       reduce using rule 27 (num_val -> COLUMN_NAME .)
    COMMA           reduce using rule 27 (num_val -> COLUMN_NAME .)
    BETWEEN         reduce using rule 27 (num_val -> COLUMN_NAME .)
    NOT             reduce using rule 27 (num_val -> COLUMN_NAME .)
    IS              reduce using rule 27 (num_val -> COLUMN_NAME .)
    GE              reduce using rule 27 (num_val -> COLUMN_NAME .)
    GT              reduce using rule 27 (num_val -> COLUMN_NAME .)
    LE              reduce using rule 27 (num_val -> COLUMN_NAME .)
    LT              reduce using rule 27 (num_val -> COLUMN_NAME .)
    NE              reduce using rule 27 (num_val -> COLUMN_NAME .)
    EQUAL           reduce using rule 27 (num_val -> COLUMN_NAME .)
    EQUAL_NULL      reduce using rule 27 (num_val -> COLUMN_NAME .)


state 85

    (43) date_function -> MAKEDATE OPENPAR num_exp . COMMA num_exp CLOSEPAR

    COMMA           shift and go to state 114


state 86

    (34) date_function -> CURRENT_DATE OPENPAR CLOSEPAR .

    CLOSEPAR        reduce using rule 34 (date_function -> CURRENT_DATE OPENPAR CLOSEPAR .)
    COMMA           reduce using rule 34 (date_function -> CURRENT_DATE OPENPAR CLOSEPAR .)
    GE              reduce using rule 34 (date_function -> CURRENT_DATE OPENPAR CLOSEPAR .)
    GT              reduce using rule 34 (date_function -> CURRENT_DATE OPENPAR CLOSEPAR .)
    LE              reduce using rule 34 (date_function -> CURRENT_DATE OPENPAR CLOSEPAR .)
    LT              reduce using rule 34 (date_function -> CURRENT_DATE OPENPAR CLOSEPAR .)
    NE              reduce using rule 34 (date_function -> CURRENT_DATE OPENPAR CLOSEPAR .)
    EQUAL           reduce using rule 34 (date_function -> CURRENT_DATE OPENPAR CLOSEPAR .)
    EQUAL_NULL      reduce using rule 34 (date_function -> CURRENT_DATE OPENPAR CLOSEPAR .)
    SEMICOLON       reduce using rule 34 (date_function -> CURRENT_DATE OPENPAR CLOSEPAR .)


state 87

    (28) date_cond -> date_exp comparison_op date_exp .

    SEMICOLON       reduce using rule 28 (date_cond -> date_exp comparison_op date_exp .)
    CLOSEPAR        reduce using rule 28 (date_cond -> date_exp comparison_op date_exp .)


state 88

    (37) date_function -> DAY OPENPAR date_exp . CLOSEPAR

    CLOSEPAR        shift and go to state 115


state 89

    (39) date_function -> DAYOFMONTH OPENPAR date_exp . CLOSEPAR

    CLOSEPAR        shift and go to state 116


state 90

    (19) num_cond -> num_exp comparison_op num_exp .

    CLOSEPAR        reduce using rule 19 (num_cond -> num_exp comparison_op num_exp .)
    SEMICOLON       reduce using rule 19 (num_cond -> num_exp comparison_op num_exp .)


state 91

    (22) num_cond -> num_exp IS NULL .

    CLOSEPAR        reduce using rule 22 (num_cond -> num_exp IS NULL .)
    SEMICOLON       reduce using rule 22 (num_cond -> num_exp IS NULL .)


state 92

    (21) num_cond -> num_exp NOT NULL .

    CLOSEPAR        reduce using rule 21 (num_cond -> num_exp NOT NULL .)
    SEMICOLON       reduce using rule 21 (num_cond -> num_exp NOT NULL .)


state 93

    (20) num_cond -> num_exp BETWEEN num_exp . AND num_exp

    AND             shift and go to state 117


state 94

    (32) date_function -> ADDDATE OPENPAR date_exp . COMMA date_exp CLOSEPAR

    COMMA           shift and go to state 118


state 95

    (18) string_exp -> COLUMN_NAME .

    SEMICOLON       reduce using rule 18 (string_exp -> COLUMN_NAME .)
    CLOSEPAR        reduce using rule 18 (string_exp -> COLUMN_NAME .)
    COMMA           reduce using rule 18 (string_exp -> COLUMN_NAME .)


state 96

    (16) string_cond -> STRCMP OPENPAR string_exp . COMMA string_exp CLOSEPAR

    COMMA           shift and go to state 119


state 97

    (38) date_function -> DAYNAME OPENPAR date_exp . CLOSEPAR

    CLOSEPAR        shift and go to state 120


state 98

    (12) condition -> NOT OPENPAR date_cond . CLOSEPAR

    CLOSEPAR        shift and go to state 121


state 99

    (10) condition -> NOT OPENPAR string_cond . CLOSEPAR

    CLOSEPAR        shift and go to state 122


state 100

    (11) condition -> NOT OPENPAR num_cond . CLOSEPAR

    CLOSEPAR        shift and go to state 123


state 101

    (33) date_function -> CURDATE OPENPAR CLOSEPAR .

    CLOSEPAR        reduce using rule 33 (date_function -> CURDATE OPENPAR CLOSEPAR .)
    COMMA           reduce using rule 33 (date_function -> CURDATE OPENPAR CLOSEPAR .)
    GE              reduce using rule 33 (date_function -> CURDATE OPENPAR CLOSEPAR .)
    GT              reduce using rule 33 (date_function -> CURDATE OPENPAR CLOSEPAR .)
    LE              reduce using rule 33 (date_function -> CURDATE OPENPAR CLOSEPAR .)
    LT              reduce using rule 33 (date_function -> CURDATE OPENPAR CLOSEPAR .)
    NE              reduce using rule 33 (date_function -> CURDATE OPENPAR CLOSEPAR .)
    EQUAL           reduce using rule 33 (date_function -> CURDATE OPENPAR CLOSEPAR .)
    EQUAL_NULL      reduce using rule 33 (date_function -> CURDATE OPENPAR CLOSEPAR .)
    SEMICOLON       reduce using rule 33 (date_function -> CURDATE OPENPAR CLOSEPAR .)


state 102

    (23) num_exp -> num_val arithmetic_op num_val .

    SEMICOLON       reduce using rule 23 (num_exp -> num_val arithmetic_op num_val .)
    CLOSEPAR        reduce using rule 23 (num_exp -> num_val arithmetic_op num_val .)
    BETWEEN         reduce using rule 23 (num_exp -> num_val arithmetic_op num_val .)
    NOT             reduce using rule 23 (num_exp -> num_val arithmetic_op num_val .)
    IS              reduce using rule 23 (num_exp -> num_val arithmetic_op num_val .)
    GE              reduce using rule 23 (num_exp -> num_val arithmetic_op num_val .)
    GT              reduce using rule 23 (num_exp -> num_val arithmetic_op num_val .)
    LE              reduce using rule 23 (num_exp -> num_val arithmetic_op num_val .)
    LT              reduce using rule 23 (num_exp -> num_val arithmetic_op num_val .)
    NE              reduce using rule 23 (num_exp -> num_val arithmetic_op num_val .)
    EQUAL           reduce using rule 23 (num_exp -> num_val arithmetic_op num_val .)
    EQUAL_NULL      reduce using rule 23 (num_exp -> num_val arithmetic_op num_val .)
    DATE_UNIT       reduce using rule 23 (num_exp -> num_val arithmetic_op num_val .)
    AND             reduce using rule 23 (num_exp -> num_val arithmetic_op num_val .)
    COMMA           reduce using rule 23 (num_exp -> num_val arithmetic_op num_val .)


state 103

    (47) date_function -> YEAR OPENPAR date_exp . CLOSEPAR

    CLOSEPAR        shift and go to state 124


state 104

    (40) date_function -> DAYOFWEEK OPENPAR date_exp . CLOSEPAR

    CLOSEPAR        shift and go to state 125


state 105

    (44) date_function -> MONTH OPENPAR date_exp . CLOSEPAR

    CLOSEPAR        shift and go to state 126


state 106

    (46) date_function -> SUBDATE OPENPAR date_exp . COMMA INTERVAL num_exp DATE_UNIT CLOSEPAR

    COMMA           shift and go to state 127


state 107

    (42) date_function -> LAST_DAY OPENPAR date_exp . CLOSEPAR

    CLOSEPAR        shift and go to state 128


state 108

    (36) date_function -> DATEDIFF OPENPAR date_exp . COMMA date_exp CLOSEPAR

    COMMA           shift and go to state 129


state 109

    (41) date_function -> DAYOFYEAR OPENPAR date_exp . CLOSEPAR

    CLOSEPAR        shift and go to state 130


state 110

    (15) string_cond -> string_exp NOT LIKE . string_exp
    (17) string_exp -> . STRING_LIT
    (18) string_exp -> . COLUMN_NAME

    STRING_LIT      shift and go to state 20
    COLUMN_NAME     shift and go to state 95

    string_exp                     shift and go to state 131

state 111

    (13) string_cond -> string_exp LIKE string_exp .

    CLOSEPAR        reduce using rule 13 (string_cond -> string_exp LIKE string_exp .)
    SEMICOLON       reduce using rule 13 (string_cond -> string_exp LIKE string_exp .)


state 112

    (14) string_cond -> string_exp EQUAL string_exp .

    CLOSEPAR        reduce using rule 14 (string_cond -> string_exp EQUAL string_exp .)
    SEMICOLON       reduce using rule 14 (string_cond -> string_exp EQUAL string_exp .)


state 113

    (45) date_function -> MONTHNAME OPENPAR date_exp . CLOSEPAR

    CLOSEPAR        shift and go to state 132


state 114

    (43) date_function -> MAKEDATE OPENPAR num_exp COMMA . num_exp CLOSEPAR
    (23) num_exp -> . num_val arithmetic_op num_val
    (24) num_exp -> . num_val
    (25) num_val -> . INT_LIT
    (26) num_val -> . DOUBLE_LIT
    (27) num_val -> . COLUMN_NAME

    INT_LIT         shift and go to state 24
    DOUBLE_LIT      shift and go to state 23
    COLUMN_NAME     shift and go to state 84

    num_exp                        shift and go to state 133
    num_val                        shift and go to state 32

state 115

    (37) date_function -> DAY OPENPAR date_exp CLOSEPAR .

    CLOSEPAR        reduce using rule 37 (date_function -> DAY OPENPAR date_exp CLOSEPAR .)
    COMMA           reduce using rule 37 (date_function -> DAY OPENPAR date_exp CLOSEPAR .)
    GE              reduce using rule 37 (date_function -> DAY OPENPAR date_exp CLOSEPAR .)
    GT              reduce using rule 37 (date_function -> DAY OPENPAR date_exp CLOSEPAR .)
    LE              reduce using rule 37 (date_function -> DAY OPENPAR date_exp CLOSEPAR .)
    LT              reduce using rule 37 (date_function -> DAY OPENPAR date_exp CLOSEPAR .)
    NE              reduce using rule 37 (date_function -> DAY OPENPAR date_exp CLOSEPAR .)
    EQUAL           reduce using rule 37 (date_function -> DAY OPENPAR date_exp CLOSEPAR .)
    EQUAL_NULL      reduce using rule 37 (date_function -> DAY OPENPAR date_exp CLOSEPAR .)
    SEMICOLON       reduce using rule 37 (date_function -> DAY OPENPAR date_exp CLOSEPAR .)


state 116

    (39) date_function -> DAYOFMONTH OPENPAR date_exp CLOSEPAR .

    CLOSEPAR        reduce using rule 39 (date_function -> DAYOFMONTH OPENPAR date_exp CLOSEPAR .)
    COMMA           reduce using rule 39 (date_function -> DAYOFMONTH OPENPAR date_exp CLOSEPAR .)
    GE              reduce using rule 39 (date_function -> DAYOFMONTH OPENPAR date_exp CLOSEPAR .)
    GT              reduce using rule 39 (date_function -> DAYOFMONTH OPENPAR date_exp CLOSEPAR .)
    LE              reduce using rule 39 (date_function -> DAYOFMONTH OPENPAR date_exp CLOSEPAR .)
    LT              reduce using rule 39 (date_function -> DAYOFMONTH OPENPAR date_exp CLOSEPAR .)
    NE              reduce using rule 39 (date_function -> DAYOFMONTH OPENPAR date_exp CLOSEPAR .)
    EQUAL           reduce using rule 39 (date_function -> DAYOFMONTH OPENPAR date_exp CLOSEPAR .)
    EQUAL_NULL      reduce using rule 39 (date_function -> DAYOFMONTH OPENPAR date_exp CLOSEPAR .)
    SEMICOLON       reduce using rule 39 (date_function -> DAYOFMONTH OPENPAR date_exp CLOSEPAR .)


state 117

    (20) num_cond -> num_exp BETWEEN num_exp AND . num_exp
    (23) num_exp -> . num_val arithmetic_op num_val
    (24) num_exp -> . num_val
    (25) num_val -> . INT_LIT
    (26) num_val -> . DOUBLE_LIT
    (27) num_val -> . COLUMN_NAME

    INT_LIT         shift and go to state 24
    DOUBLE_LIT      shift and go to state 23
    COLUMN_NAME     shift and go to state 84

    num_exp                        shift and go to state 134
    num_val                        shift and go to state 32

state 118

    (32) date_function -> ADDDATE OPENPAR date_exp COMMA . date_exp CLOSEPAR
    (30) date_exp -> . date_function
    (31) date_exp -> . DATE_LIT
    (32) date_function -> . ADDDATE OPENPAR date_exp COMMA date_exp CLOSEPAR
    (33) date_function -> . CURDATE OPENPAR CLOSEPAR
    (34) date_function -> . CURRENT_DATE OPENPAR CLOSEPAR
    (35) date_function -> . CURRENT_DATE
    (36) date_function -> . DATEDIFF OPENPAR date_exp COMMA date_exp CLOSEPAR
    (37) date_function -> . DAY OPENPAR date_exp CLOSEPAR
    (38) date_function -> . DAYNAME OPENPAR date_exp CLOSEPAR
    (39) date_function -> . DAYOFMONTH OPENPAR date_exp CLOSEPAR
    (40) date_function -> . DAYOFWEEK OPENPAR date_exp CLOSEPAR
    (41) date_function -> . DAYOFYEAR OPENPAR date_exp CLOSEPAR
    (42) date_function -> . LAST_DAY OPENPAR date_exp CLOSEPAR
    (43) date_function -> . MAKEDATE OPENPAR num_exp COMMA num_exp CLOSEPAR
    (44) date_function -> . MONTH OPENPAR date_exp CLOSEPAR
    (45) date_function -> . MONTHNAME OPENPAR date_exp CLOSEPAR
    (46) date_function -> . SUBDATE OPENPAR date_exp COMMA INTERVAL num_exp DATE_UNIT CLOSEPAR
    (47) date_function -> . YEAR OPENPAR date_exp CLOSEPAR

    DATE_LIT        shift and go to state 40
    ADDDATE         shift and go to state 22
    CURDATE         shift and go to state 30
    CURRENT_DATE    shift and go to state 14
    DATEDIFF        shift and go to state 38
    DAY             shift and go to state 17
    DAYNAME         shift and go to state 27
    DAYOFMONTH      shift and go to state 19
    DAYOFWEEK       shift and go to state 34
    DAYOFYEAR       shift and go to state 39
    LAST_DAY        shift and go to state 37
    MAKEDATE        shift and go to state 13
    MONTH           shift and go to state 35
    MONTHNAME       shift and go to state 43
    SUBDATE         shift and go to state 36
    YEAR            shift and go to state 33

    date_function                  shift and go to state 41
    date_exp                       shift and go to state 135

state 119

    (16) string_cond -> STRCMP OPENPAR string_exp COMMA . string_exp CLOSEPAR
    (17) string_exp -> . STRING_LIT
    (18) string_exp -> . COLUMN_NAME

    STRING_LIT      shift and go to state 20
    COLUMN_NAME     shift and go to state 95

    string_exp                     shift and go to state 136

state 120

    (38) date_function -> DAYNAME OPENPAR date_exp CLOSEPAR .

    CLOSEPAR        reduce using rule 38 (date_function -> DAYNAME OPENPAR date_exp CLOSEPAR .)
    COMMA           reduce using rule 38 (date_function -> DAYNAME OPENPAR date_exp CLOSEPAR .)
    GE              reduce using rule 38 (date_function -> DAYNAME OPENPAR date_exp CLOSEPAR .)
    GT              reduce using rule 38 (date_function -> DAYNAME OPENPAR date_exp CLOSEPAR .)
    LE              reduce using rule 38 (date_function -> DAYNAME OPENPAR date_exp CLOSEPAR .)
    LT              reduce using rule 38 (date_function -> DAYNAME OPENPAR date_exp CLOSEPAR .)
    NE              reduce using rule 38 (date_function -> DAYNAME OPENPAR date_exp CLOSEPAR .)
    EQUAL           reduce using rule 38 (date_function -> DAYNAME OPENPAR date_exp CLOSEPAR .)
    EQUAL_NULL      reduce using rule 38 (date_function -> DAYNAME OPENPAR date_exp CLOSEPAR .)
    SEMICOLON       reduce using rule 38 (date_function -> DAYNAME OPENPAR date_exp CLOSEPAR .)


state 121

    (12) condition -> NOT OPENPAR date_cond CLOSEPAR .

    SEMICOLON       reduce using rule 12 (condition -> NOT OPENPAR date_cond CLOSEPAR .)


state 122

    (10) condition -> NOT OPENPAR string_cond CLOSEPAR .

    SEMICOLON       reduce using rule 10 (condition -> NOT OPENPAR string_cond CLOSEPAR .)


state 123

    (11) condition -> NOT OPENPAR num_cond CLOSEPAR .

    SEMICOLON       reduce using rule 11 (condition -> NOT OPENPAR num_cond CLOSEPAR .)


state 124

    (47) date_function -> YEAR OPENPAR date_exp CLOSEPAR .

    CLOSEPAR        reduce using rule 47 (date_function -> YEAR OPENPAR date_exp CLOSEPAR .)
    COMMA           reduce using rule 47 (date_function -> YEAR OPENPAR date_exp CLOSEPAR .)
    GE              reduce using rule 47 (date_function -> YEAR OPENPAR date_exp CLOSEPAR .)
    GT              reduce using rule 47 (date_function -> YEAR OPENPAR date_exp CLOSEPAR .)
    LE              reduce using rule 47 (date_function -> YEAR OPENPAR date_exp CLOSEPAR .)
    LT              reduce using rule 47 (date_function -> YEAR OPENPAR date_exp CLOSEPAR .)
    NE              reduce using rule 47 (date_function -> YEAR OPENPAR date_exp CLOSEPAR .)
    EQUAL           reduce using rule 47 (date_function -> YEAR OPENPAR date_exp CLOSEPAR .)
    EQUAL_NULL      reduce using rule 47 (date_function -> YEAR OPENPAR date_exp CLOSEPAR .)
    SEMICOLON       reduce using rule 47 (date_function -> YEAR OPENPAR date_exp CLOSEPAR .)


state 125

    (40) date_function -> DAYOFWEEK OPENPAR date_exp CLOSEPAR .

    CLOSEPAR        reduce using rule 40 (date_function -> DAYOFWEEK OPENPAR date_exp CLOSEPAR .)
    COMMA           reduce using rule 40 (date_function -> DAYOFWEEK OPENPAR date_exp CLOSEPAR .)
    GE              reduce using rule 40 (date_function -> DAYOFWEEK OPENPAR date_exp CLOSEPAR .)
    GT              reduce using rule 40 (date_function -> DAYOFWEEK OPENPAR date_exp CLOSEPAR .)
    LE              reduce using rule 40 (date_function -> DAYOFWEEK OPENPAR date_exp CLOSEPAR .)
    LT              reduce using rule 40 (date_function -> DAYOFWEEK OPENPAR date_exp CLOSEPAR .)
    NE              reduce using rule 40 (date_function -> DAYOFWEEK OPENPAR date_exp CLOSEPAR .)
    EQUAL           reduce using rule 40 (date_function -> DAYOFWEEK OPENPAR date_exp CLOSEPAR .)
    EQUAL_NULL      reduce using rule 40 (date_function -> DAYOFWEEK OPENPAR date_exp CLOSEPAR .)
    SEMICOLON       reduce using rule 40 (date_function -> DAYOFWEEK OPENPAR date_exp CLOSEPAR .)


state 126

    (44) date_function -> MONTH OPENPAR date_exp CLOSEPAR .

    CLOSEPAR        reduce using rule 44 (date_function -> MONTH OPENPAR date_exp CLOSEPAR .)
    COMMA           reduce using rule 44 (date_function -> MONTH OPENPAR date_exp CLOSEPAR .)
    GE              reduce using rule 44 (date_function -> MONTH OPENPAR date_exp CLOSEPAR .)
    GT              reduce using rule 44 (date_function -> MONTH OPENPAR date_exp CLOSEPAR .)
    LE              reduce using rule 44 (date_function -> MONTH OPENPAR date_exp CLOSEPAR .)
    LT              reduce using rule 44 (date_function -> MONTH OPENPAR date_exp CLOSEPAR .)
    NE              reduce using rule 44 (date_function -> MONTH OPENPAR date_exp CLOSEPAR .)
    EQUAL           reduce using rule 44 (date_function -> MONTH OPENPAR date_exp CLOSEPAR .)
    EQUAL_NULL      reduce using rule 44 (date_function -> MONTH OPENPAR date_exp CLOSEPAR .)
    SEMICOLON       reduce using rule 44 (date_function -> MONTH OPENPAR date_exp CLOSEPAR .)


state 127

    (46) date_function -> SUBDATE OPENPAR date_exp COMMA . INTERVAL num_exp DATE_UNIT CLOSEPAR

    INTERVAL        shift and go to state 137


state 128

    (42) date_function -> LAST_DAY OPENPAR date_exp CLOSEPAR .

    CLOSEPAR        reduce using rule 42 (date_function -> LAST_DAY OPENPAR date_exp CLOSEPAR .)
    COMMA           reduce using rule 42 (date_function -> LAST_DAY OPENPAR date_exp CLOSEPAR .)
    GE              reduce using rule 42 (date_function -> LAST_DAY OPENPAR date_exp CLOSEPAR .)
    GT              reduce using rule 42 (date_function -> LAST_DAY OPENPAR date_exp CLOSEPAR .)
    LE              reduce using rule 42 (date_function -> LAST_DAY OPENPAR date_exp CLOSEPAR .)
    LT              reduce using rule 42 (date_function -> LAST_DAY OPENPAR date_exp CLOSEPAR .)
    NE              reduce using rule 42 (date_function -> LAST_DAY OPENPAR date_exp CLOSEPAR .)
    EQUAL           reduce using rule 42 (date_function -> LAST_DAY OPENPAR date_exp CLOSEPAR .)
    EQUAL_NULL      reduce using rule 42 (date_function -> LAST_DAY OPENPAR date_exp CLOSEPAR .)
    SEMICOLON       reduce using rule 42 (date_function -> LAST_DAY OPENPAR date_exp CLOSEPAR .)


state 129

    (36) date_function -> DATEDIFF OPENPAR date_exp COMMA . date_exp CLOSEPAR
    (30) date_exp -> . date_function
    (31) date_exp -> . DATE_LIT
    (32) date_function -> . ADDDATE OPENPAR date_exp COMMA date_exp CLOSEPAR
    (33) date_function -> . CURDATE OPENPAR CLOSEPAR
    (34) date_function -> . CURRENT_DATE OPENPAR CLOSEPAR
    (35) date_function -> . CURRENT_DATE
    (36) date_function -> . DATEDIFF OPENPAR date_exp COMMA date_exp CLOSEPAR
    (37) date_function -> . DAY OPENPAR date_exp CLOSEPAR
    (38) date_function -> . DAYNAME OPENPAR date_exp CLOSEPAR
    (39) date_function -> . DAYOFMONTH OPENPAR date_exp CLOSEPAR
    (40) date_function -> . DAYOFWEEK OPENPAR date_exp CLOSEPAR
    (41) date_function -> . DAYOFYEAR OPENPAR date_exp CLOSEPAR
    (42) date_function -> . LAST_DAY OPENPAR date_exp CLOSEPAR
    (43) date_function -> . MAKEDATE OPENPAR num_exp COMMA num_exp CLOSEPAR
    (44) date_function -> . MONTH OPENPAR date_exp CLOSEPAR
    (45) date_function -> . MONTHNAME OPENPAR date_exp CLOSEPAR
    (46) date_function -> . SUBDATE OPENPAR date_exp COMMA INTERVAL num_exp DATE_UNIT CLOSEPAR
    (47) date_function -> . YEAR OPENPAR date_exp CLOSEPAR

    DATE_LIT        shift and go to state 40
    ADDDATE         shift and go to state 22
    CURDATE         shift and go to state 30
    CURRENT_DATE    shift and go to state 14
    DATEDIFF        shift and go to state 38
    DAY             shift and go to state 17
    DAYNAME         shift and go to state 27
    DAYOFMONTH      shift and go to state 19
    DAYOFWEEK       shift and go to state 34
    DAYOFYEAR       shift and go to state 39
    LAST_DAY        shift and go to state 37
    MAKEDATE        shift and go to state 13
    MONTH           shift and go to state 35
    MONTHNAME       shift and go to state 43
    SUBDATE         shift and go to state 36
    YEAR            shift and go to state 33

    date_function                  shift and go to state 41
    date_exp                       shift and go to state 138

state 130

    (41) date_function -> DAYOFYEAR OPENPAR date_exp CLOSEPAR .

    CLOSEPAR        reduce using rule 41 (date_function -> DAYOFYEAR OPENPAR date_exp CLOSEPAR .)
    COMMA           reduce using rule 41 (date_function -> DAYOFYEAR OPENPAR date_exp CLOSEPAR .)
    GE              reduce using rule 41 (date_function -> DAYOFYEAR OPENPAR date_exp CLOSEPAR .)
    GT              reduce using rule 41 (date_function -> DAYOFYEAR OPENPAR date_exp CLOSEPAR .)
    LE              reduce using rule 41 (date_function -> DAYOFYEAR OPENPAR date_exp CLOSEPAR .)
    LT              reduce using rule 41 (date_function -> DAYOFYEAR OPENPAR date_exp CLOSEPAR .)
    NE              reduce using rule 41 (date_function -> DAYOFYEAR OPENPAR date_exp CLOSEPAR .)
    EQUAL           reduce using rule 41 (date_function -> DAYOFYEAR OPENPAR date_exp CLOSEPAR .)
    EQUAL_NULL      reduce using rule 41 (date_function -> DAYOFYEAR OPENPAR date_exp CLOSEPAR .)
    SEMICOLON       reduce using rule 41 (date_function -> DAYOFYEAR OPENPAR date_exp CLOSEPAR .)


state 131

    (15) string_cond -> string_exp NOT LIKE string_exp .

    CLOSEPAR        reduce using rule 15 (string_cond -> string_exp NOT LIKE string_exp .)
    SEMICOLON       reduce using rule 15 (string_cond -> string_exp NOT LIKE string_exp .)


state 132

    (45) date_function -> MONTHNAME OPENPAR date_exp CLOSEPAR .

    CLOSEPAR        reduce using rule 45 (date_function -> MONTHNAME OPENPAR date_exp CLOSEPAR .)
    COMMA           reduce using rule 45 (date_function -> MONTHNAME OPENPAR date_exp CLOSEPAR .)
    GE              reduce using rule 45 (date_function -> MONTHNAME OPENPAR date_exp CLOSEPAR .)
    GT              reduce using rule 45 (date_function -> MONTHNAME OPENPAR date_exp CLOSEPAR .)
    LE              reduce using rule 45 (date_function -> MONTHNAME OPENPAR date_exp CLOSEPAR .)
    LT              reduce using rule 45 (date_function -> MONTHNAME OPENPAR date_exp CLOSEPAR .)
    NE              reduce using rule 45 (date_function -> MONTHNAME OPENPAR date_exp CLOSEPAR .)
    EQUAL           reduce using rule 45 (date_function -> MONTHNAME OPENPAR date_exp CLOSEPAR .)
    EQUAL_NULL      reduce using rule 45 (date_function -> MONTHNAME OPENPAR date_exp CLOSEPAR .)
    SEMICOLON       reduce using rule 45 (date_function -> MONTHNAME OPENPAR date_exp CLOSEPAR .)


state 133

    (43) date_function -> MAKEDATE OPENPAR num_exp COMMA num_exp . CLOSEPAR

    CLOSEPAR        shift and go to state 139


state 134

    (20) num_cond -> num_exp BETWEEN num_exp AND num_exp .

    CLOSEPAR        reduce using rule 20 (num_cond -> num_exp BETWEEN num_exp AND num_exp .)
    SEMICOLON       reduce using rule 20 (num_cond -> num_exp BETWEEN num_exp AND num_exp .)


state 135

    (32) date_function -> ADDDATE OPENPAR date_exp COMMA date_exp . CLOSEPAR

    CLOSEPAR        shift and go to state 140


state 136

    (16) string_cond -> STRCMP OPENPAR string_exp COMMA string_exp . CLOSEPAR

    CLOSEPAR        shift and go to state 141


state 137

    (46) date_function -> SUBDATE OPENPAR date_exp COMMA INTERVAL . num_exp DATE_UNIT CLOSEPAR
    (23) num_exp -> . num_val arithmetic_op num_val
    (24) num_exp -> . num_val
    (25) num_val -> . INT_LIT
    (26) num_val -> . DOUBLE_LIT
    (27) num_val -> . COLUMN_NAME

    INT_LIT         shift and go to state 24
    DOUBLE_LIT      shift and go to state 23
    COLUMN_NAME     shift and go to state 84

    num_exp                        shift and go to state 142
    num_val                        shift and go to state 32

state 138

    (36) date_function -> DATEDIFF OPENPAR date_exp COMMA date_exp . CLOSEPAR

    CLOSEPAR        shift and go to state 143


state 139

    (43) date_function -> MAKEDATE OPENPAR num_exp COMMA num_exp CLOSEPAR .

    CLOSEPAR        reduce using rule 43 (date_function -> MAKEDATE OPENPAR num_exp COMMA num_exp CLOSEPAR .)
    COMMA           reduce using rule 43 (date_function -> MAKEDATE OPENPAR num_exp COMMA num_exp CLOSEPAR .)
    GE              reduce using rule 43 (date_function -> MAKEDATE OPENPAR num_exp COMMA num_exp CLOSEPAR .)
    GT              reduce using rule 43 (date_function -> MAKEDATE OPENPAR num_exp COMMA num_exp CLOSEPAR .)
    LE              reduce using rule 43 (date_function -> MAKEDATE OPENPAR num_exp COMMA num_exp CLOSEPAR .)
    LT              reduce using rule 43 (date_function -> MAKEDATE OPENPAR num_exp COMMA num_exp CLOSEPAR .)
    NE              reduce using rule 43 (date_function -> MAKEDATE OPENPAR num_exp COMMA num_exp CLOSEPAR .)
    EQUAL           reduce using rule 43 (date_function -> MAKEDATE OPENPAR num_exp COMMA num_exp CLOSEPAR .)
    EQUAL_NULL      reduce using rule 43 (date_function -> MAKEDATE OPENPAR num_exp COMMA num_exp CLOSEPAR .)
    SEMICOLON       reduce using rule 43 (date_function -> MAKEDATE OPENPAR num_exp COMMA num_exp CLOSEPAR .)


state 140

    (32) date_function -> ADDDATE OPENPAR date_exp COMMA date_exp CLOSEPAR .

    CLOSEPAR        reduce using rule 32 (date_function -> ADDDATE OPENPAR date_exp COMMA date_exp CLOSEPAR .)
    COMMA           reduce using rule 32 (date_function -> ADDDATE OPENPAR date_exp COMMA date_exp CLOSEPAR .)
    GE              reduce using rule 32 (date_function -> ADDDATE OPENPAR date_exp COMMA date_exp CLOSEPAR .)
    GT              reduce using rule 32 (date_function -> ADDDATE OPENPAR date_exp COMMA date_exp CLOSEPAR .)
    LE              reduce using rule 32 (date_function -> ADDDATE OPENPAR date_exp COMMA date_exp CLOSEPAR .)
    LT              reduce using rule 32 (date_function -> ADDDATE OPENPAR date_exp COMMA date_exp CLOSEPAR .)
    NE              reduce using rule 32 (date_function -> ADDDATE OPENPAR date_exp COMMA date_exp CLOSEPAR .)
    EQUAL           reduce using rule 32 (date_function -> ADDDATE OPENPAR date_exp COMMA date_exp CLOSEPAR .)
    EQUAL_NULL      reduce using rule 32 (date_function -> ADDDATE OPENPAR date_exp COMMA date_exp CLOSEPAR .)
    SEMICOLON       reduce using rule 32 (date_function -> ADDDATE OPENPAR date_exp COMMA date_exp CLOSEPAR .)


state 141

    (16) string_cond -> STRCMP OPENPAR string_exp COMMA string_exp CLOSEPAR .

    CLOSEPAR        reduce using rule 16 (string_cond -> STRCMP OPENPAR string_exp COMMA string_exp CLOSEPAR .)
    SEMICOLON       reduce using rule 16 (string_cond -> STRCMP OPENPAR string_exp COMMA string_exp CLOSEPAR .)


state 142

    (46) date_function -> SUBDATE OPENPAR date_exp COMMA INTERVAL num_exp . DATE_UNIT CLOSEPAR

    DATE_UNIT       shift and go to state 144


state 143

    (36) date_function -> DATEDIFF OPENPAR date_exp COMMA date_exp CLOSEPAR .

    CLOSEPAR        reduce using rule 36 (date_function -> DATEDIFF OPENPAR date_exp COMMA date_exp CLOSEPAR .)
    COMMA           reduce using rule 36 (date_function -> DATEDIFF OPENPAR date_exp COMMA date_exp CLOSEPAR .)
    GE              reduce using rule 36 (date_function -> DATEDIFF OPENPAR date_exp COMMA date_exp CLOSEPAR .)
    GT              reduce using rule 36 (date_function -> DATEDIFF OPENPAR date_exp COMMA date_exp CLOSEPAR .)
    LE              reduce using rule 36 (date_function -> DATEDIFF OPENPAR date_exp COMMA date_exp CLOSEPAR .)
    LT              reduce using rule 36 (date_function -> DATEDIFF OPENPAR date_exp COMMA date_exp CLOSEPAR .)
    NE              reduce using rule 36 (date_function -> DATEDIFF OPENPAR date_exp COMMA date_exp CLOSEPAR .)
    EQUAL           reduce using rule 36 (date_function -> DATEDIFF OPENPAR date_exp COMMA date_exp CLOSEPAR .)
    EQUAL_NULL      reduce using rule 36 (date_function -> DATEDIFF OPENPAR date_exp COMMA date_exp CLOSEPAR .)
    SEMICOLON       reduce using rule 36 (date_function -> DATEDIFF OPENPAR date_exp COMMA date_exp CLOSEPAR .)


state 144

    (46) date_function -> SUBDATE OPENPAR date_exp COMMA INTERVAL num_exp DATE_UNIT . CLOSEPAR

    CLOSEPAR        shift and go to state 145


state 145

    (46) date_function -> SUBDATE OPENPAR date_exp COMMA INTERVAL num_exp DATE_UNIT CLOSEPAR .

    CLOSEPAR        reduce using rule 46 (date_function -> SUBDATE OPENPAR date_exp COMMA INTERVAL num_exp DATE_UNIT CLOSEPAR .)
    COMMA           reduce using rule 46 (date_function -> SUBDATE OPENPAR date_exp COMMA INTERVAL num_exp DATE_UNIT CLOSEPAR .)
    GE              reduce using rule 46 (date_function -> SUBDATE OPENPAR date_exp COMMA INTERVAL num_exp DATE_UNIT CLOSEPAR .)
    GT              reduce using rule 46 (date_function -> SUBDATE OPENPAR date_exp COMMA INTERVAL num_exp DATE_UNIT CLOSEPAR .)
    LE              reduce using rule 46 (date_function -> SUBDATE OPENPAR date_exp COMMA INTERVAL num_exp DATE_UNIT CLOSEPAR .)
    LT              reduce using rule 46 (date_function -> SUBDATE OPENPAR date_exp COMMA INTERVAL num_exp DATE_UNIT CLOSEPAR .)
    NE              reduce using rule 46 (date_function -> SUBDATE OPENPAR date_exp COMMA INTERVAL num_exp DATE_UNIT CLOSEPAR .)
    EQUAL           reduce using rule 46 (date_function -> SUBDATE OPENPAR date_exp COMMA INTERVAL num_exp DATE_UNIT CLOSEPAR .)
    EQUAL_NULL      reduce using rule 46 (date_function -> SUBDATE OPENPAR date_exp COMMA INTERVAL num_exp DATE_UNIT CLOSEPAR .)
    SEMICOLON       reduce using rule 46 (date_function -> SUBDATE OPENPAR date_exp COMMA INTERVAL num_exp DATE_UNIT CLOSEPAR .)

WARNING: 
WARNING: Conflicts:
WARNING: 
WARNING: reduce/reduce conflict in state 25 resolved using rule (string_exp -> COLUMN_NAME)
WARNING: rejected rule (num_val -> COLUMN_NAME) in state 25
